// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Data Integration
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package dev.updateimageinsalesforce_0_4;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.TalendDate;
import routines.Relational;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJavaRow_2
	//import java.util.List;

	//the import part of tJava_1
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: UpdateImageInSalesforce Purpose: UpdateImageInSalesforce<br>
 * Description: UpdateImageInSalesforce <br>
 * @author user@talend.com
 * @version 7.3.1.20191031_1204-M3
 * @status 
 */
public class UpdateImageInSalesforce implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}
	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(bynderDirectory != null){
				
					this.setProperty("bynderDirectory", bynderDirectory.toString());
				
			}
			
			if(errorFile != null){
				
					this.setProperty("errorFile", errorFile.toString());
				
			}
			
		}

public String bynderDirectory;
public String getBynderDirectory(){
	return this.bynderDirectory;
}
public String errorFile;
public String getErrorFile(){
	return this.errorFile;
}
	}
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.4";
	private final String jobName = "UpdateImageInSalesforce";
	private final String projectName = "DEV";
	public Integer errorCode = null;
	private String currentComponent = "";
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	


	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils tLogCatcher_1 = new LogCatcherUtils();
	LogCatcherUtils talendLogs_LOGS = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	private String currentComponent = null;
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				UpdateImageInSalesforce.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(UpdateImageInSalesforce.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				tLogCatcher_1.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				talendLogs_LOGS.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
			try{
				tLogCatcher_1Process(globalMap);
			}finally{
				talendLogs_LOGSProcess(globalMap);
			}
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tFileInputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRESTClient_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tExtractJSONFields_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSalesforceConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSalesforceInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSalesforceOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSalesforceOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSalesforceOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSalesforceOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSalesforceOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tSalesforceInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRESTClient_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRESTClient_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tExtractJSONFields_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRESTClient_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRESTClient_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSetGlobalVar_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRESTClient_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRESTClient_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileCopy_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRESTClient_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void talendLogs_LOGS_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							talendLogs_FILE_error(exception, errorComponent, globalMap);
						
						}
					
			public void talendLogs_FILE_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					talendLogs_LOGS_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tSalesforceConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tSalesforceInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRESTClient_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void talendLogs_LOGS_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	






public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String var1;

				public String getVar1 () {
					return this.var1;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.var1 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.var1,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("var1="+var1);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String id;

				public String getId () {
					return this.id;
				}
				
			    public String description;

				public String getDescription () {
					return this.description;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String idHash;

				public String getIdHash () {
					return this.idHash;
				}
				
			    public String tags;

				public String getTags () {
					return this.tags;
				}
				
			    public String brandId;

				public String getBrandId () {
					return this.brandId;
				}
				
			    public String name;

				public String getName () {
					return this.name;
				}
				
			    public String property_Color_Code;

				public String getProperty_Color_Code () {
					return this.property_Color_Code;
				}
				
			    public String property_Style_Code;

				public String getProperty_Style_Code () {
					return this.property_Style_Code;
				}
				
			    public String property_Brand;

				public String getProperty_Brand () {
					return this.property_Brand;
				}
				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}
				
			    public String property_Style_Reference;

				public String getProperty_Style_Reference () {
					return this.property_Style_Reference;
				}
				
			    public String isPublic;

				public String getIsPublic () {
					return this.isPublic;
				}
				
			    public String property_Season;

				public String getProperty_Season () {
					return this.property_Season;
				}
				
			    public String property_Year;

				public String getProperty_Year () {
					return this.property_Year;
				}
				
			    public String property_Asset_Type;

				public String getProperty_Asset_Type () {
					return this.property_Asset_Type;
				}
				
			    public String property_Asset_Subtype;

				public String getProperty_Asset_Subtype () {
					return this.property_Asset_Subtype;
				}
				
			    public String userCreated;

				public String getUserCreated () {
					return this.userCreated;
				}
				
			    public String filename;

				public String getFilename () {
					return this.filename;
				}
				
			    public String property_Gender;

				public String getProperty_Gender () {
					return this.property_Gender;
				}
				
			    public String property_Age_Group;

				public String getProperty_Age_Group () {
					return this.property_Age_Group;
				}
				
			    public String property_Sub_Division;

				public String getProperty_Sub_Division () {
					return this.property_Sub_Division;
				}
				
			    public String property_Division;

				public String getProperty_Division () {
					return this.property_Division;
				}
				
			    public String Terms_of_Use;

				public String getTerms_of_Use () {
					return this.Terms_of_Use;
				}
				
			    public String webimage;

				public String getWebimage () {
					return this.webimage;
				}
				
			    public String thul;

				public String getThul () {
					return this.thul;
				}
				
			    public String property_Photo_View;

				public String getProperty_Photo_View () {
					return this.property_Photo_View;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.id = readString(dis);
					
					this.description = readString(dis);
					
					this.type = readString(dis);
					
					this.idHash = readString(dis);
					
					this.tags = readString(dis);
					
					this.brandId = readString(dis);
					
					this.name = readString(dis);
					
					this.property_Color_Code = readString(dis);
					
					this.property_Style_Code = readString(dis);
					
					this.property_Brand = readString(dis);
					
					this.extension = readString(dis);
					
					this.property_Style_Reference = readString(dis);
					
					this.isPublic = readString(dis);
					
					this.property_Season = readString(dis);
					
					this.property_Year = readString(dis);
					
					this.property_Asset_Type = readString(dis);
					
					this.property_Asset_Subtype = readString(dis);
					
					this.userCreated = readString(dis);
					
					this.filename = readString(dis);
					
					this.property_Gender = readString(dis);
					
					this.property_Age_Group = readString(dis);
					
					this.property_Sub_Division = readString(dis);
					
					this.property_Division = readString(dis);
					
					this.Terms_of_Use = readString(dis);
					
					this.webimage = readString(dis);
					
					this.thul = readString(dis);
					
					this.property_Photo_View = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.id,dos);
					
					// String
				
						writeString(this.description,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.idHash,dos);
					
					// String
				
						writeString(this.tags,dos);
					
					// String
				
						writeString(this.brandId,dos);
					
					// String
				
						writeString(this.name,dos);
					
					// String
				
						writeString(this.property_Color_Code,dos);
					
					// String
				
						writeString(this.property_Style_Code,dos);
					
					// String
				
						writeString(this.property_Brand,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// String
				
						writeString(this.property_Style_Reference,dos);
					
					// String
				
						writeString(this.isPublic,dos);
					
					// String
				
						writeString(this.property_Season,dos);
					
					// String
				
						writeString(this.property_Year,dos);
					
					// String
				
						writeString(this.property_Asset_Type,dos);
					
					// String
				
						writeString(this.property_Asset_Subtype,dos);
					
					// String
				
						writeString(this.userCreated,dos);
					
					// String
				
						writeString(this.filename,dos);
					
					// String
				
						writeString(this.property_Gender,dos);
					
					// String
				
						writeString(this.property_Age_Group,dos);
					
					// String
				
						writeString(this.property_Sub_Division,dos);
					
					// String
				
						writeString(this.property_Division,dos);
					
					// String
				
						writeString(this.Terms_of_Use,dos);
					
					// String
				
						writeString(this.webimage,dos);
					
					// String
				
						writeString(this.thul,dos);
					
					// String
				
						writeString(this.property_Photo_View,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+id);
		sb.append(",description="+description);
		sb.append(",type="+type);
		sb.append(",idHash="+idHash);
		sb.append(",tags="+tags);
		sb.append(",brandId="+brandId);
		sb.append(",name="+name);
		sb.append(",property_Color_Code="+property_Color_Code);
		sb.append(",property_Style_Code="+property_Style_Code);
		sb.append(",property_Brand="+property_Brand);
		sb.append(",extension="+extension);
		sb.append(",property_Style_Reference="+property_Style_Reference);
		sb.append(",isPublic="+isPublic);
		sb.append(",property_Season="+property_Season);
		sb.append(",property_Year="+property_Year);
		sb.append(",property_Asset_Type="+property_Asset_Type);
		sb.append(",property_Asset_Subtype="+property_Asset_Subtype);
		sb.append(",userCreated="+userCreated);
		sb.append(",filename="+filename);
		sb.append(",property_Gender="+property_Gender);
		sb.append(",property_Age_Group="+property_Age_Group);
		sb.append(",property_Sub_Division="+property_Sub_Division);
		sb.append(",property_Division="+property_Division);
		sb.append(",Terms_of_Use="+Terms_of_Use);
		sb.append(",webimage="+webimage);
		sb.append(",thul="+thul);
		sb.append(",property_Photo_View="+property_Photo_View);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out3Struct implements routines.system.IPersistableRow<out3Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String id;

				public String getId () {
					return this.id;
				}
				
			    public String description;

				public String getDescription () {
					return this.description;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String idHash;

				public String getIdHash () {
					return this.idHash;
				}
				
			    public String tags;

				public String getTags () {
					return this.tags;
				}
				
			    public String brandId;

				public String getBrandId () {
					return this.brandId;
				}
				
			    public String name;

				public String getName () {
					return this.name;
				}
				
			    public String property_Color_Code;

				public String getProperty_Color_Code () {
					return this.property_Color_Code;
				}
				
			    public String property_Style_Code;

				public String getProperty_Style_Code () {
					return this.property_Style_Code;
				}
				
			    public String property_Brand;

				public String getProperty_Brand () {
					return this.property_Brand;
				}
				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}
				
			    public String property_Style_Reference;

				public String getProperty_Style_Reference () {
					return this.property_Style_Reference;
				}
				
			    public String isPublic;

				public String getIsPublic () {
					return this.isPublic;
				}
				
			    public String property_Season;

				public String getProperty_Season () {
					return this.property_Season;
				}
				
			    public String property_Year;

				public String getProperty_Year () {
					return this.property_Year;
				}
				
			    public String property_Asset_Type;

				public String getProperty_Asset_Type () {
					return this.property_Asset_Type;
				}
				
			    public String property_Asset_Subtype;

				public String getProperty_Asset_Subtype () {
					return this.property_Asset_Subtype;
				}
				
			    public String userCreated;

				public String getUserCreated () {
					return this.userCreated;
				}
				
			    public String filename;

				public String getFilename () {
					return this.filename;
				}
				
			    public String property_Gender;

				public String getProperty_Gender () {
					return this.property_Gender;
				}
				
			    public String property_Age_Group;

				public String getProperty_Age_Group () {
					return this.property_Age_Group;
				}
				
			    public String property_Sub_Division;

				public String getProperty_Sub_Division () {
					return this.property_Sub_Division;
				}
				
			    public String property_Division;

				public String getProperty_Division () {
					return this.property_Division;
				}
				
			    public String Terms_of_Use;

				public String getTerms_of_Use () {
					return this.Terms_of_Use;
				}
				
			    public String webimage;

				public String getWebimage () {
					return this.webimage;
				}
				
			    public String thul;

				public String getThul () {
					return this.thul;
				}
				
			    public String property_Photo_View;

				public String getProperty_Photo_View () {
					return this.property_Photo_View;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.id = readString(dis);
					
					this.description = readString(dis);
					
					this.type = readString(dis);
					
					this.idHash = readString(dis);
					
					this.tags = readString(dis);
					
					this.brandId = readString(dis);
					
					this.name = readString(dis);
					
					this.property_Color_Code = readString(dis);
					
					this.property_Style_Code = readString(dis);
					
					this.property_Brand = readString(dis);
					
					this.extension = readString(dis);
					
					this.property_Style_Reference = readString(dis);
					
					this.isPublic = readString(dis);
					
					this.property_Season = readString(dis);
					
					this.property_Year = readString(dis);
					
					this.property_Asset_Type = readString(dis);
					
					this.property_Asset_Subtype = readString(dis);
					
					this.userCreated = readString(dis);
					
					this.filename = readString(dis);
					
					this.property_Gender = readString(dis);
					
					this.property_Age_Group = readString(dis);
					
					this.property_Sub_Division = readString(dis);
					
					this.property_Division = readString(dis);
					
					this.Terms_of_Use = readString(dis);
					
					this.webimage = readString(dis);
					
					this.thul = readString(dis);
					
					this.property_Photo_View = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.id,dos);
					
					// String
				
						writeString(this.description,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.idHash,dos);
					
					// String
				
						writeString(this.tags,dos);
					
					// String
				
						writeString(this.brandId,dos);
					
					// String
				
						writeString(this.name,dos);
					
					// String
				
						writeString(this.property_Color_Code,dos);
					
					// String
				
						writeString(this.property_Style_Code,dos);
					
					// String
				
						writeString(this.property_Brand,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// String
				
						writeString(this.property_Style_Reference,dos);
					
					// String
				
						writeString(this.isPublic,dos);
					
					// String
				
						writeString(this.property_Season,dos);
					
					// String
				
						writeString(this.property_Year,dos);
					
					// String
				
						writeString(this.property_Asset_Type,dos);
					
					// String
				
						writeString(this.property_Asset_Subtype,dos);
					
					// String
				
						writeString(this.userCreated,dos);
					
					// String
				
						writeString(this.filename,dos);
					
					// String
				
						writeString(this.property_Gender,dos);
					
					// String
				
						writeString(this.property_Age_Group,dos);
					
					// String
				
						writeString(this.property_Sub_Division,dos);
					
					// String
				
						writeString(this.property_Division,dos);
					
					// String
				
						writeString(this.Terms_of_Use,dos);
					
					// String
				
						writeString(this.webimage,dos);
					
					// String
				
						writeString(this.thul,dos);
					
					// String
				
						writeString(this.property_Photo_View,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+id);
		sb.append(",description="+description);
		sb.append(",type="+type);
		sb.append(",idHash="+idHash);
		sb.append(",tags="+tags);
		sb.append(",brandId="+brandId);
		sb.append(",name="+name);
		sb.append(",property_Color_Code="+property_Color_Code);
		sb.append(",property_Style_Code="+property_Style_Code);
		sb.append(",property_Brand="+property_Brand);
		sb.append(",extension="+extension);
		sb.append(",property_Style_Reference="+property_Style_Reference);
		sb.append(",isPublic="+isPublic);
		sb.append(",property_Season="+property_Season);
		sb.append(",property_Year="+property_Year);
		sb.append(",property_Asset_Type="+property_Asset_Type);
		sb.append(",property_Asset_Subtype="+property_Asset_Subtype);
		sb.append(",userCreated="+userCreated);
		sb.append(",filename="+filename);
		sb.append(",property_Gender="+property_Gender);
		sb.append(",property_Age_Group="+property_Age_Group);
		sb.append(",property_Sub_Division="+property_Sub_Division);
		sb.append(",property_Division="+property_Division);
		sb.append(",Terms_of_Use="+Terms_of_Use);
		sb.append(",webimage="+webimage);
		sb.append(",thul="+thul);
		sb.append(",property_Photo_View="+property_Photo_View);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out4Struct implements routines.system.IPersistableRow<out4Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String var1;

				public String getVar1 () {
					return this.var1;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.var1 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.var1,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("var1="+var1);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String id;

				public String getId () {
					return this.id;
				}
				
			    public String description;

				public String getDescription () {
					return this.description;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String idHash;

				public String getIdHash () {
					return this.idHash;
				}
				
			    public String tags;

				public String getTags () {
					return this.tags;
				}
				
			    public String brandId;

				public String getBrandId () {
					return this.brandId;
				}
				
			    public String name;

				public String getName () {
					return this.name;
				}
				
			    public String property_Color_Code;

				public String getProperty_Color_Code () {
					return this.property_Color_Code;
				}
				
			    public String property_Style_Code;

				public String getProperty_Style_Code () {
					return this.property_Style_Code;
				}
				
			    public String property_Brand;

				public String getProperty_Brand () {
					return this.property_Brand;
				}
				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}
				
			    public String property_Style_Reference;

				public String getProperty_Style_Reference () {
					return this.property_Style_Reference;
				}
				
			    public String isPublic;

				public String getIsPublic () {
					return this.isPublic;
				}
				
			    public String property_Season;

				public String getProperty_Season () {
					return this.property_Season;
				}
				
			    public String property_Year;

				public String getProperty_Year () {
					return this.property_Year;
				}
				
			    public String property_Asset_Type;

				public String getProperty_Asset_Type () {
					return this.property_Asset_Type;
				}
				
			    public String property_Asset_Subtype;

				public String getProperty_Asset_Subtype () {
					return this.property_Asset_Subtype;
				}
				
			    public String userCreated;

				public String getUserCreated () {
					return this.userCreated;
				}
				
			    public String filename;

				public String getFilename () {
					return this.filename;
				}
				
			    public String property_Gender;

				public String getProperty_Gender () {
					return this.property_Gender;
				}
				
			    public String property_Age_Group;

				public String getProperty_Age_Group () {
					return this.property_Age_Group;
				}
				
			    public String property_Sub_Division;

				public String getProperty_Sub_Division () {
					return this.property_Sub_Division;
				}
				
			    public String property_Division;

				public String getProperty_Division () {
					return this.property_Division;
				}
				
			    public String Terms_of_Use;

				public String getTerms_of_Use () {
					return this.Terms_of_Use;
				}
				
			    public String webimage;

				public String getWebimage () {
					return this.webimage;
				}
				
			    public String thul;

				public String getThul () {
					return this.thul;
				}
				
			    public String property_Photo_View;

				public String getProperty_Photo_View () {
					return this.property_Photo_View;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.id = readString(dis);
					
					this.description = readString(dis);
					
					this.type = readString(dis);
					
					this.idHash = readString(dis);
					
					this.tags = readString(dis);
					
					this.brandId = readString(dis);
					
					this.name = readString(dis);
					
					this.property_Color_Code = readString(dis);
					
					this.property_Style_Code = readString(dis);
					
					this.property_Brand = readString(dis);
					
					this.extension = readString(dis);
					
					this.property_Style_Reference = readString(dis);
					
					this.isPublic = readString(dis);
					
					this.property_Season = readString(dis);
					
					this.property_Year = readString(dis);
					
					this.property_Asset_Type = readString(dis);
					
					this.property_Asset_Subtype = readString(dis);
					
					this.userCreated = readString(dis);
					
					this.filename = readString(dis);
					
					this.property_Gender = readString(dis);
					
					this.property_Age_Group = readString(dis);
					
					this.property_Sub_Division = readString(dis);
					
					this.property_Division = readString(dis);
					
					this.Terms_of_Use = readString(dis);
					
					this.webimage = readString(dis);
					
					this.thul = readString(dis);
					
					this.property_Photo_View = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.id,dos);
					
					// String
				
						writeString(this.description,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.idHash,dos);
					
					// String
				
						writeString(this.tags,dos);
					
					// String
				
						writeString(this.brandId,dos);
					
					// String
				
						writeString(this.name,dos);
					
					// String
				
						writeString(this.property_Color_Code,dos);
					
					// String
				
						writeString(this.property_Style_Code,dos);
					
					// String
				
						writeString(this.property_Brand,dos);
					
					// String
				
						writeString(this.extension,dos);
					
					// String
				
						writeString(this.property_Style_Reference,dos);
					
					// String
				
						writeString(this.isPublic,dos);
					
					// String
				
						writeString(this.property_Season,dos);
					
					// String
				
						writeString(this.property_Year,dos);
					
					// String
				
						writeString(this.property_Asset_Type,dos);
					
					// String
				
						writeString(this.property_Asset_Subtype,dos);
					
					// String
				
						writeString(this.userCreated,dos);
					
					// String
				
						writeString(this.filename,dos);
					
					// String
				
						writeString(this.property_Gender,dos);
					
					// String
				
						writeString(this.property_Age_Group,dos);
					
					// String
				
						writeString(this.property_Sub_Division,dos);
					
					// String
				
						writeString(this.property_Division,dos);
					
					// String
				
						writeString(this.Terms_of_Use,dos);
					
					// String
				
						writeString(this.webimage,dos);
					
					// String
				
						writeString(this.thul,dos);
					
					// String
				
						writeString(this.property_Photo_View,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+id);
		sb.append(",description="+description);
		sb.append(",type="+type);
		sb.append(",idHash="+idHash);
		sb.append(",tags="+tags);
		sb.append(",brandId="+brandId);
		sb.append(",name="+name);
		sb.append(",property_Color_Code="+property_Color_Code);
		sb.append(",property_Style_Code="+property_Style_Code);
		sb.append(",property_Brand="+property_Brand);
		sb.append(",extension="+extension);
		sb.append(",property_Style_Reference="+property_Style_Reference);
		sb.append(",isPublic="+isPublic);
		sb.append(",property_Season="+property_Season);
		sb.append(",property_Year="+property_Year);
		sb.append(",property_Asset_Type="+property_Asset_Type);
		sb.append(",property_Asset_Subtype="+property_Asset_Subtype);
		sb.append(",userCreated="+userCreated);
		sb.append(",filename="+filename);
		sb.append(",property_Gender="+property_Gender);
		sb.append(",property_Age_Group="+property_Age_Group);
		sb.append(",property_Sub_Division="+property_Sub_Division);
		sb.append(",property_Division="+property_Division);
		sb.append(",Terms_of_Use="+Terms_of_Use);
		sb.append(",webimage="+webimage);
		sb.append(",thul="+thul);
		sb.append(",property_Photo_View="+property_Photo_View);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public routines.system.Document body;

				public routines.system.Document getBody () {
					return this.body;
				}
				
			    public String string;

				public String getString () {
					return this.string;
				}
				
			    public Integer statusCode;

				public Integer getStatusCode () {
					return this.statusCode;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
						this.body = (routines.system.Document) dis.readObject();
					
					this.string = readString(dis);
					
						this.statusCode = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Document
				
       			    	dos.writeObject(this.body);
					
					// String
				
						writeString(this.string,dos);
					
					// Integer
				
						writeInteger(this.statusCode,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("body="+String.valueOf(body));
		sb.append(",string="+string);
		sb.append(",statusCode="+String.valueOf(statusCode));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String FileName;

				public String getFileName () {
					return this.FileName;
				}
				
			    public String AssetName;

				public String getAssetName () {
					return this.AssetName;
				}
				
			    public String StyleCode;

				public String getStyleCode () {
					return this.StyleCode;
				}
				
			    public String ColorCode;

				public String getColorCode () {
					return this.ColorCode;
				}
				
			    public String NewTags;

				public String getNewTags () {
					return this.NewTags;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.FileName = readString(dis);
					
					this.AssetName = readString(dis);
					
					this.StyleCode = readString(dis);
					
					this.ColorCode = readString(dis);
					
					this.NewTags = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FileName,dos);
					
					// String
				
						writeString(this.AssetName,dos);
					
					// String
				
						writeString(this.StyleCode,dos);
					
					// String
				
						writeString(this.ColorCode,dos);
					
					// String
				
						writeString(this.NewTags,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FileName="+FileName);
		sb.append(",AssetName="+AssetName);
		sb.append(",StyleCode="+StyleCode);
		sb.append(",ColorCode="+ColorCode);
		sb.append(",NewTags="+NewTags);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String FileName;

				public String getFileName () {
					return this.FileName;
				}
				
			    public String AssetName;

				public String getAssetName () {
					return this.AssetName;
				}
				
			    public String StyleCode;

				public String getStyleCode () {
					return this.StyleCode;
				}
				
			    public String ColorCode;

				public String getColorCode () {
					return this.ColorCode;
				}
				
			    public String NewTags;

				public String getNewTags () {
					return this.NewTags;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.FileName = readString(dis);
					
					this.AssetName = readString(dis);
					
					this.StyleCode = readString(dis);
					
					this.ColorCode = readString(dis);
					
					this.NewTags = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FileName,dos);
					
					// String
				
						writeString(this.AssetName,dos);
					
					// String
				
						writeString(this.StyleCode,dos);
					
					// String
				
						writeString(this.ColorCode,dos);
					
					// String
				
						writeString(this.NewTags,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FileName="+FileName);
		sb.append(",AssetName="+AssetName);
		sb.append(",StyleCode="+StyleCode);
		sb.append(",ColorCode="+ColorCode);
		sb.append(",NewTags="+NewTags);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tFileInputDelimited_1Struct implements routines.system.IPersistableRow<after_tFileInputDelimited_1Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String FileName;

				public String getFileName () {
					return this.FileName;
				}
				
			    public String AssetName;

				public String getAssetName () {
					return this.AssetName;
				}
				
			    public String StyleCode;

				public String getStyleCode () {
					return this.StyleCode;
				}
				
			    public String ColorCode;

				public String getColorCode () {
					return this.ColorCode;
				}
				
			    public String NewTags;

				public String getNewTags () {
					return this.NewTags;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.FileName = readString(dis);
					
					this.AssetName = readString(dis);
					
					this.StyleCode = readString(dis);
					
					this.ColorCode = readString(dis);
					
					this.NewTags = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FileName,dos);
					
					// String
				
						writeString(this.AssetName,dos);
					
					// String
				
						writeString(this.StyleCode,dos);
					
					// String
				
						writeString(this.ColorCode,dos);
					
					// String
				
						writeString(this.NewTags,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FileName="+FileName);
		sb.append(",AssetName="+AssetName);
		sb.append(",StyleCode="+StyleCode);
		sb.append(",ColorCode="+ColorCode);
		sb.append(",NewTags="+NewTags);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tFileInputDelimited_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tFileInputDelimited_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tFileInputDelimited_7Process(globalMap);

		row6Struct row6 = new row6Struct();
row7Struct row7 = new row7Struct();
row1Struct row1 = new row1Struct();
row4Struct row4 = new row4Struct();
out3Struct out3 = new out3Struct();
row25Struct row25 = new row25Struct();
out4Struct out4 = new out4Struct();
row5Struct row5 = new row5Struct();









	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";

	
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
    fileName_tFileOutputDelimited_1 = (new java.io.File("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
        if(filetFileOutputDelimited_1.exists()){
            isFileGenerated_tFileOutputDelimited_1 = false;
        }
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, true),"ISO-8859-15"));
                                    if(filetFileOutputDelimited_1.length()==0){
                                        outtFileOutputDelimited_1.write("id");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("description");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("type");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("idHash");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("tags");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("brandId");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("name");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("property_Color_Code");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("property_Style_Code");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("property_Brand");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("extension");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("property_Style_Reference");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("isPublic");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("property_Season");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("property_Year");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("property_Asset_Type");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("property_Asset_Subtype");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("userCreated");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("filename");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("property_Gender");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("property_Age_Group");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("property_Sub_Division");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("property_Division");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("Terms_of_Use");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("webimage");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("thul");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("property_Photo_View");
                                        outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.flush();
                                    }


        resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tFilterRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_1", false);
		start_Hash.put("tFilterRow_1", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_1";

	
		int tos_count_tFilterRow_1 = 0;
		
    int nb_line_tFilterRow_1 = 0;
    int nb_line_ok_tFilterRow_1 = 0;
    int nb_line_reject_tFilterRow_1 = 0;

    class Operator_tFilterRow_1 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_1(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_1 begin ] stop
 */





	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";

	
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tUniqRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_2", false);
		start_Hash.put("tUniqRow_2", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_2";

	
		int tos_count_tUniqRow_2 = 0;
		

int nb_uniques_tUniqRow_2 = 0;
int nb_duplicates_tUniqRow_2 = 0; 

 



/**
 * [tUniqRow_2 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";

	
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct> tHash_Lookup_row27 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct>) 
					globalMap.get( "tHash_Lookup_row27" ))
					;					
					
	

row27Struct row27HashKey = new row27Struct();
row27Struct row27Default = new row27Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
	String var1;
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
out3Struct out3_tmp = new out3Struct();
out4Struct out4_tmp = new out4Struct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tExtractJSONFields_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tExtractJSONFields_1", false);
		start_Hash.put("tExtractJSONFields_1", System.currentTimeMillis());
		
	
	currentComponent="tExtractJSONFields_1";

	
		int tos_count_tExtractJSONFields_1 = 0;
		

int nb_line_tExtractJSONFields_1 = 0;
String jsonStr_tExtractJSONFields_1 = "";

	

class JsonPathCache_tExtractJSONFields_1 {
	final java.util.Map<String,com.jayway.jsonpath.JsonPath> jsonPathString2compiledJsonPath = new java.util.HashMap<String,com.jayway.jsonpath.JsonPath>();
	
	public com.jayway.jsonpath.JsonPath getCompiledJsonPath(String jsonPath) {
		if(jsonPathString2compiledJsonPath.containsKey(jsonPath)) {
			return jsonPathString2compiledJsonPath.get(jsonPath);
		} else {
			com.jayway.jsonpath.JsonPath compiledLoopPath = com.jayway.jsonpath.JsonPath.compile(jsonPath);
			jsonPathString2compiledJsonPath.put(jsonPath,compiledLoopPath);
			return compiledLoopPath;
		}
	}
}

JsonPathCache_tExtractJSONFields_1 jsonPathCache_tExtractJSONFields_1 = new JsonPathCache_tExtractJSONFields_1();

 



/**
 * [tExtractJSONFields_1 begin ] stop
 */



	
	/**
	 * [tRESTClient_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRESTClient_1", false);
		start_Hash.put("tRESTClient_1", System.currentTimeMillis());
		
	
	currentComponent="tRESTClient_1";

	
		int tos_count_tRESTClient_1 = 0;
		

 



/**
 * [tRESTClient_1 begin ] stop
 */



	
	/**
	 * [tUniqRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_1", false);
		start_Hash.put("tUniqRow_1", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_1";

	
		int tos_count_tUniqRow_1 = 0;
		

	
		class KeyStruct_tUniqRow_1 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String StyleCode;
					String ColorCode;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.StyleCode == null) ? 0 : this.StyleCode.hashCode());
								
								result = prime * result + ((this.ColorCode == null) ? 0 : this.ColorCode.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_1 other = (KeyStruct_tUniqRow_1) obj;
				
									if (this.StyleCode == null) {
										if (other.StyleCode != null) 
											return false;
								
									} else if (!this.StyleCode.equals(other.StyleCode))
								 
										return false;
								
									if (this.ColorCode == null) {
										if (other.ColorCode != null) 
											return false;
								
									} else if (!this.ColorCode.equals(other.ColorCode))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_1 = 0;
int nb_duplicates_tUniqRow_1 = 0;
KeyStruct_tUniqRow_1 finder_tUniqRow_1 = new KeyStruct_tUniqRow_1();
java.util.Set<KeyStruct_tUniqRow_1> keystUniqRow_1 = new java.util.HashSet<KeyStruct_tUniqRow_1>(); 

 



/**
 * [tUniqRow_1 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_1", false);
		start_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_1";

	
		int tos_count_tFileInputDelimited_1 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_1 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_1 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_1 = null;
				int limit_tFileInputDelimited_1 = -1;
				try{
					
						Object filename_tFileInputDelimited_1 = "C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/input"+ "/FileAssetsName.csv";
						if(filename_tFileInputDelimited_1 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_1 = 0, random_value_tFileInputDelimited_1 = -1;
			if(footer_value_tFileInputDelimited_1 >0 || random_value_tFileInputDelimited_1 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_1 = new org.talend.fileprocess.FileInputDelimited("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/input"+ "/FileAssetsName.csv", "ISO-8859-15",";","\n",true,0,0,
									limit_tFileInputDelimited_1
								,-1, false);
						} catch(java.lang.Exception e) {
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_1!=null && fid_tFileInputDelimited_1.nextRecord()) {
						rowstate_tFileInputDelimited_1.reset();
						
			    						row6 = null;			
												
									boolean whetherReject_tFileInputDelimited_1 = false;
									row6 = new row6Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_1 = 0;
				
					columnIndexWithD_tFileInputDelimited_1 = 0;
					
							row6.FileName = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 1;
					
							row6.AssetName = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 2;
					
							row6.StyleCode = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 3;
					
							row6.ColorCode = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 4;
					
							row6.NewTags = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
				
										
										if(rowstate_tFileInputDelimited_1.getException()!=null) {
											throw rowstate_tFileInputDelimited_1.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
			        					whetherReject_tFileInputDelimited_1 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row6 = null;
			                				
			    					}
								

 



/**
 * [tFileInputDelimited_1 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";

	

 


	tos_count_tFileInputDelimited_1++;

/**
 * [tFileInputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";

	

 



/**
 * [tFileInputDelimited_1 process_data_begin ] stop
 */
// Start of branch "row6"
if(row6 != null) { 



	
	/**
	 * [tUniqRow_1 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";

	
row7 = null;			
if(row6.StyleCode == null){
	finder_tUniqRow_1.StyleCode = null;
}else{
	finder_tUniqRow_1.StyleCode = row6.StyleCode.toLowerCase();
}
if(row6.ColorCode == null){
	finder_tUniqRow_1.ColorCode = null;
}else{
	finder_tUniqRow_1.ColorCode = row6.ColorCode.toLowerCase();
}	
finder_tUniqRow_1.hashCodeDirty = true;
if (!keystUniqRow_1.contains(finder_tUniqRow_1)) {
		KeyStruct_tUniqRow_1 new_tUniqRow_1 = new KeyStruct_tUniqRow_1();

		
if(row6.StyleCode == null){
	new_tUniqRow_1.StyleCode = null;
}else{
	new_tUniqRow_1.StyleCode = row6.StyleCode.toLowerCase();
}
if(row6.ColorCode == null){
	new_tUniqRow_1.ColorCode = null;
}else{
	new_tUniqRow_1.ColorCode = row6.ColorCode.toLowerCase();
}
		
		keystUniqRow_1.add(new_tUniqRow_1);if(row7 == null){ 
	
	row7 = new row7Struct();
}row7.FileName = row6.FileName;			row7.AssetName = row6.AssetName;			row7.StyleCode = row6.StyleCode;			row7.ColorCode = row6.ColorCode;			row7.NewTags = row6.NewTags;					
		nb_uniques_tUniqRow_1++;
	} else {
	  nb_duplicates_tUniqRow_1++;
	}

 


	tos_count_tUniqRow_1++;

/**
 * [tUniqRow_1 main ] stop
 */
	
	/**
	 * [tUniqRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";

	

 



/**
 * [tUniqRow_1 process_data_begin ] stop
 */
// Start of branch "row7"
if(row7 != null) { 



	
	/**
	 * [tRESTClient_1 main ] start
	 */

	

	
	
	currentComponent="tRESTClient_1";

	
	row1 = null;

// expected response body
Object responseDoc_tRESTClient_1 = null;

try {
	// request body
	org.dom4j.Document requestDoc_tRESTClient_1 = null;
	String requestString_tRESTClient_1 = null;

	Object requestBody_tRESTClient_1 = requestDoc_tRESTClient_1 != null ? requestDoc_tRESTClient_1 : requestString_tRESTClient_1;

	

    //resposne class name
	Class<?> responseClass_tRESTClient_1
		= String.class;

	// create web client instance
	org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean factoryBean_tRESTClient_1 =
			new org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean();

	boolean inOSGi = routines.system.BundleUtils.inOSGi();

	final java.util.List<org.apache.cxf.feature.Feature> features_tRESTClient_1 =
			new java.util.ArrayList<org.apache.cxf.feature.Feature>();

	
		String url = "https://haddadbrand.bynder.com/api/v4/media/?";
		// {baseUri}tRESTClient
		factoryBean_tRESTClient_1.setServiceName(new javax.xml.namespace.QName(url, "tRESTClient"));
		factoryBean_tRESTClient_1.setAddress(url);
	

	

	
		features_tRESTClient_1.add(new org.apache.cxf.feature.LoggingFeature());
	

	

	factoryBean_tRESTClient_1.setFeatures(features_tRESTClient_1);


	java.util.List<Object> providers_tRESTClient_1 = new java.util.ArrayList<Object>();
	providers_tRESTClient_1.add(new org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider() {
		// workaround for https://jira.talendforge.org/browse/TESB-7276
		public org.dom4j.Document readFrom(Class<org.dom4j.Document> cls,
											java.lang.reflect.Type type,
											java.lang.annotation.Annotation[] anns,
											javax.ws.rs.core.MediaType mt,
											javax.ws.rs.core.MultivaluedMap<String, String> headers,
											java.io.InputStream is)
				throws IOException, javax.ws.rs.WebApplicationException {
			String contentLength = headers.getFirst("Content-Length");
			if (!org.apache.cxf.common.util.StringUtils.isEmpty(contentLength)
					&& Integer.valueOf(contentLength) <= 0) {
				try {
					return org.dom4j.DocumentHelper.parseText("<root/>");
				} catch (org.dom4j.DocumentException e_tRESTClient_1) {
					e_tRESTClient_1.printStackTrace();
				}
				return null;
			}
			return super.readFrom(cls, type, anns, mt, headers, is);
		}
	});
	org.apache.cxf.jaxrs.provider.json.JSONProvider jsonProvider_tRESTClient_1 =
			new org.apache.cxf.jaxrs.provider.json.JSONProvider();
		jsonProvider_tRESTClient_1.setIgnoreNamespaces(true);
		jsonProvider_tRESTClient_1.setAttributesToElements(true);
	
	
		jsonProvider_tRESTClient_1.setSupportUnwrapped(true);
		jsonProvider_tRESTClient_1.setWrapperName("root");
	
	
		jsonProvider_tRESTClient_1.setDropRootElement(false);
		jsonProvider_tRESTClient_1.setConvertTypesToStrings(true);
	providers_tRESTClient_1.add(jsonProvider_tRESTClient_1);
	factoryBean_tRESTClient_1.setProviders(providers_tRESTClient_1);
	factoryBean_tRESTClient_1.setTransportId("http://cxf.apache.org/transports/http");

	boolean use_auth_tRESTClient_1 = false;
	if (use_auth_tRESTClient_1 && "SAML".equals("OAUTH2_BEARER")) {
		if (!inOSGi) {
			throw new IllegalArgumentException("SAML based security scenarios are not supported in Studio (standalone)");
		}
		// set SAML Token authentication
		
		 
	final String decryptedPassword_tRESTClient_1 = routines.system.PasswordEncryptUtil.decryptPassword("ENC:[R9jR8tr2k6ypECe9tHJFqG8RG26RcP/sSPdsXbwggZn2OtPp8do=]");

		org.apache.cxf.ws.security.trust.STSClient stsClient =
			org.talend.esb.security.saml.STSClientUtils.createSTSClient(factoryBean_tRESTClient_1.getBus(),
				"otman.nikraj@haddadeurope.com.partial", decryptedPassword_tRESTClient_1);
		
		org.talend.esb.security.saml.SAMLRESTUtils.configureClient(factoryBean_tRESTClient_1, stsClient);
	}

	org.apache.cxf.jaxrs.client.WebClient webClient_tRESTClient_1 = factoryBean_tRESTClient_1.createWebClient();

	// set request path
	webClient_tRESTClient_1.path("");

	// set connection properties
	org.apache.cxf.jaxrs.client.ClientConfiguration clientConfig_tRESTClient_1 = org.apache.cxf.jaxrs.client.WebClient.getConfig(webClient_tRESTClient_1);
	org.apache.cxf.transport.http.HTTPConduit conduit_tRESTClient_1 = clientConfig_tRESTClient_1.getHttpConduit();

    if (clientConfig_tRESTClient_1.getEndpoint() != null
            && clientConfig_tRESTClient_1.getEndpoint().getEndpointInfo() != null) {
        clientConfig_tRESTClient_1.getEndpoint().getEndpointInfo().setProperty("enable.webclient.operation.reporting",
                                                                          true);
    }

	

        org.apache.cxf.configuration.jsse.TLSClientParameters tlsClientParameters_tRESTClient_1 = new org.apache.cxf.configuration.jsse.TLSClientParameters();
        tlsClientParameters_tRESTClient_1.setDisableCNCheck(true);
        conduit_tRESTClient_1.setTlsClientParameters(tlsClientParameters_tRESTClient_1);

	

	if (use_auth_tRESTClient_1 && "BASIC".equals("OAUTH2_BEARER")) {
		// set BASIC auth
		
		 
	final String decryptedPassword_tRESTClient_1 = routines.system.PasswordEncryptUtil.decryptPassword("ENC:[hmOlsu0++CUwU47DmQzftUBBpqpUNvgvWoS395TWtTLSFAKSXtE=]");

		org.apache.cxf.configuration.security.AuthorizationPolicy authPolicy_tRESTClient_1 = new org.apache.cxf.configuration.security.AuthorizationPolicy();
			authPolicy_tRESTClient_1.setAuthorizationType("Basic");
			authPolicy_tRESTClient_1.setUserName("otman.nikraj@haddadeurope.com.partial");
			authPolicy_tRESTClient_1.setPassword(decryptedPassword_tRESTClient_1);
		conduit_tRESTClient_1.setAuthorization(authPolicy_tRESTClient_1);
	} else if (use_auth_tRESTClient_1 && "HTTP Digest".equals("OAUTH2_BEARER")) {
		// set Digest auth
		
		 
	final String decryptedPassword_tRESTClient_1 = routines.system.PasswordEncryptUtil.decryptPassword("ENC:[r1+aFinUjZWkD1K6mEBdHTD6QDjzBiASf2d0SvSR6+n3uZKJCnk=]");

		org.apache.cxf.configuration.security.AuthorizationPolicy authPolicy_tRESTClient_1 = new org.apache.cxf.configuration.security.AuthorizationPolicy();
		authPolicy_tRESTClient_1.setAuthorizationType("Digest");
		authPolicy_tRESTClient_1.setUserName("otman.nikraj@haddadeurope.com.partial");
		authPolicy_tRESTClient_1.setPassword(decryptedPassword_tRESTClient_1);
		conduit_tRESTClient_1.setAuthorization(authPolicy_tRESTClient_1);
	}

	if (!inOSGi) {
		conduit_tRESTClient_1.getClient().setReceiveTimeout((long)(60 * 1000L));
		conduit_tRESTClient_1.getClient().setConnectionTimeout((long)(30 * 1000L));
		boolean use_proxy_tRESTClient_1 = false;
		if (use_proxy_tRESTClient_1) {
			
			 
	final String decryptedPassword_tRESTClient_1 = routines.system.PasswordEncryptUtil.decryptPassword("ENC:[ul5iQnH+jy20brz7yvxew75cWMS7LdzCvMb0Cw==]");

			conduit_tRESTClient_1.getClient().setProxyServer("61.163.92.4");
			conduit_tRESTClient_1.getClient().setProxyServerPort(Integer.valueOf(8080));
			conduit_tRESTClient_1.getProxyAuthorization().setUserName("");
			conduit_tRESTClient_1.getProxyAuthorization().setPassword(decryptedPassword_tRESTClient_1);
		}
	}
	
	
		conduit_tRESTClient_1.getClient().setAutoRedirect(true);
		clientConfig_tRESTClient_1.getRequestContext().put("http.redirect.relative.uri", true);
		clientConfig_tRESTClient_1.getRequestContext().put("http.redirect.same.host.only", false);
	

	

	

	
		// set Accept-Type
		webClient_tRESTClient_1.accept("application/json");
	

	
		// set optional query and header properties if any
	
		webClient_tRESTClient_1.header("Authorization", globalMap.get("tokentype")+ " " +globalMap.get("accesstoken"));
	
		webClient_tRESTClient_1.header("Accept", "application/json");
	
		webClient_tRESTClient_1.header("content-Type", "application/json");
	
	if (use_auth_tRESTClient_1 && "OAUTH2_BEARER".equals("OAUTH2_BEARER")) {
		// set oAuth2 bearer token
		webClient_tRESTClient_1.header("Authorization", "Bearer " + globalMap.get("tokentype")+ " " +globalMap.get("accesstoken"));
	}
	
	if (use_auth_tRESTClient_1 && "OIDC_PASSWORD_GRANT".equals("OAUTH2_BEARER")) {
 
	final String decryptedPassword_tRESTClient_1 = routines.system.PasswordEncryptUtil.decryptPassword("ENC:[vLBLzmVXfsD3h4YHNdLFpX2Dt6sKIbh8ZvmCZzlWDNSk0jV6mwQ=]");

        String username_tRESTClient_1 = "otman.nikraj@haddadeurope.com.partial";
        String password_tRESTClient_1 = decryptedPassword_tRESTClient_1;

        String bearerHeader_tRESTClient_1 = null;

        try {
			if (!inOSGi) {
				org.springframework.context.support.ClassPathXmlApplicationContext context_tRESTClient_1 =
					new org.springframework.context.support.ClassPathXmlApplicationContext("META-INF/tesb/oidc-context.xml");
				org.talend.esb.security.oidc.OidcConfiguration oidcConfiguration_tRESTClient_1 = context_tRESTClient_1.getBean(org.talend.esb.security.oidc.OidcConfiguration.class);
				bearerHeader_tRESTClient_1 = org.talend.esb.security.oidc.OidcClientUtils.oidcClientBearer(username_tRESTClient_1, password_tRESTClient_1, oidcConfiguration_tRESTClient_1);
			}else{
				bearerHeader_tRESTClient_1 = org.talend.esb.security.oidc.OidcClientUtils.oidcClientBearer(username_tRESTClient_1, password_tRESTClient_1);
			}
		} catch (Exception ex) {
            throw new javax.ws.rs.WebApplicationException("Failed to get OIDC access token: ", ex);
        }

		webClient_tRESTClient_1.header("Authorization", bearerHeader_tRESTClient_1);
	}
    
	// if FORM request then capture query parameters into Form, otherwise set them as queries
	
		
			webClient_tRESTClient_1.query("property_Style_Code" ,row7.StyleCode.replace(" ","_"));
		
			webClient_tRESTClient_1.query("property_Color_Code" ,row7.ColorCode);
		
	


	try {
		// start send request
		
			responseDoc_tRESTClient_1 = webClient_tRESTClient_1.get(responseClass_tRESTClient_1);
		


		int webClientResponseStatus_tRESTClient_1 = webClient_tRESTClient_1.getResponse().getStatus();
		if (webClientResponseStatus_tRESTClient_1 >= 300) {
			throw new javax.ws.rs.WebApplicationException(webClient_tRESTClient_1.getResponse());
		}

		
			if (row1 == null) {
				row1 = new row1Struct();
			}

			row1.statusCode = webClientResponseStatus_tRESTClient_1;
			
				
				{
					Object responseObj_tRESTClient_1 = responseDoc_tRESTClient_1;
				
				if(responseObj_tRESTClient_1 != null){
					if (responseClass_tRESTClient_1 == String.class) {
						row1.string = (String) responseObj_tRESTClient_1;
					} else {
						routines.system.Document responseTalendDoc_tRESTClient_1 = null;
						if (null != responseObj_tRESTClient_1) {
							responseTalendDoc_tRESTClient_1 = new routines.system.Document();
							responseTalendDoc_tRESTClient_1.setDocument((org.dom4j.Document) responseObj_tRESTClient_1);
						}
						row1.body = responseTalendDoc_tRESTClient_1;
					}
				}
			}
			


			globalMap.put("tRESTClient_1_HEADERS", webClient_tRESTClient_1.getResponse().getHeaders());
			
			
			
		

	} catch (javax.ws.rs.WebApplicationException ex_tRESTClient_1) {
		
			throw ex_tRESTClient_1;
		
	}

} catch(Exception e_tRESTClient_1) {
	
		throw new TalendException(e_tRESTClient_1, currentComponent, globalMap);
	
}


 


	tos_count_tRESTClient_1++;

/**
 * [tRESTClient_1 main ] stop
 */
	
	/**
	 * [tRESTClient_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRESTClient_1";

	

 



/**
 * [tRESTClient_1 process_data_begin ] stop
 */
// Start of branch "row1"
if(row1 != null) { 



	
	/**
	 * [tExtractJSONFields_1 main ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_1";

	

            if(row1.string!=null){// C_01
                jsonStr_tExtractJSONFields_1 = row1.string.toString();
   
row4 = null;

	

String loopPath_tExtractJSONFields_1 = "$";
java.util.List<Object> resultset_tExtractJSONFields_1 = new java.util.ArrayList<Object>();

boolean isStructError_tExtractJSONFields_1 = true;
com.jayway.jsonpath.ReadContext document_tExtractJSONFields_1 = null;
try {
	document_tExtractJSONFields_1 = com.jayway.jsonpath.JsonPath.parse(jsonStr_tExtractJSONFields_1);
	com.jayway.jsonpath.JsonPath compiledLoopPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(loopPath_tExtractJSONFields_1);
	Object result_tExtractJSONFields_1 = document_tExtractJSONFields_1.read(compiledLoopPath_tExtractJSONFields_1,net.minidev.json.JSONObject.class);
	if (result_tExtractJSONFields_1 instanceof net.minidev.json.JSONArray) {
		resultset_tExtractJSONFields_1 = (net.minidev.json.JSONArray) result_tExtractJSONFields_1;
	} else {
		resultset_tExtractJSONFields_1.add(result_tExtractJSONFields_1);
	}
	
	isStructError_tExtractJSONFields_1 = false;
} catch (java.lang.Exception ex_tExtractJSONFields_1) {
		System.err.println(ex_tExtractJSONFields_1.getMessage());
}

String jsonPath_tExtractJSONFields_1 = null;
com.jayway.jsonpath.JsonPath compiledJsonPath_tExtractJSONFields_1 = null;

Object value_tExtractJSONFields_1 = null;

Object root_tExtractJSONFields_1 = null;
for(int i_tExtractJSONFields_1=0; isStructError_tExtractJSONFields_1 || (i_tExtractJSONFields_1 < resultset_tExtractJSONFields_1.size());i_tExtractJSONFields_1++){
	if(!isStructError_tExtractJSONFields_1){
		Object row_tExtractJSONFields_1 = resultset_tExtractJSONFields_1.get(i_tExtractJSONFields_1);
            row4 = null;
	row4 = new row4Struct();
	nb_line_tExtractJSONFields_1++;
	try {
		jsonPath_tExtractJSONFields_1 = "$.id";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.id = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.id = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.description";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.description = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.description = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.type";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.type = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.type = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.idHash";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.idHash = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.idHash = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.tags";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.tags = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.tags = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.brandId";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.brandId = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.brandId = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.name";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.name = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.name = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.property_Color_Code";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.property_Color_Code = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.property_Color_Code = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.property_Style_Code";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.property_Style_Code = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.property_Style_Code = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.property_Brand";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.property_Brand = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.property_Brand = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.extension";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.extension = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.extension = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.property_Style_Reference";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.property_Style_Reference = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.property_Style_Reference = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.isPublic";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.isPublic = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.isPublic = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.property_Season";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.property_Season = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.property_Season = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.property_Year";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.property_Year = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.property_Year = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.property_Asset_Type";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.property_Asset_Type = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.property_Asset_Type = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.property_Asset_Subtype";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.property_Asset_Subtype = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.property_Asset_Subtype = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.userCreated";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.userCreated = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.userCreated = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.filename";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.filename = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.filename = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.property_Gender";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.property_Gender = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.property_Gender = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.property_Age_Group";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.property_Age_Group = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.property_Age_Group = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.property_Division";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.property_Sub_Division = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.property_Sub_Division = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.property_Sub_Division";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.property_Division = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.property_Division = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.Terms_of_Use";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.Terms_of_Use = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.Terms_of_Use = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.thumbnails.webimage";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.webimage = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.webimage = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.thumbnails.thul";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.thul = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.thul = 

		null

;
		}
		jsonPath_tExtractJSONFields_1 = "$.property_Photo_View";
		compiledJsonPath_tExtractJSONFields_1 = jsonPathCache_tExtractJSONFields_1.getCompiledJsonPath(jsonPath_tExtractJSONFields_1);
		
		try {
		    
		        value_tExtractJSONFields_1 = compiledJsonPath_tExtractJSONFields_1.read(row_tExtractJSONFields_1);
		    
				row4.property_Photo_View = value_tExtractJSONFields_1 == null ? 

		null

 : value_tExtractJSONFields_1.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_1) {
			row4.property_Photo_View = 

		null

;
		}	
	} catch (java.lang.Exception ex_tExtractJSONFields_1) {
		    System.err.println(ex_tExtractJSONFields_1.getMessage());
		    row4 = null;	
	}
	
	}
    
	isStructError_tExtractJSONFields_1 = false;
	
//}


 


	tos_count_tExtractJSONFields_1++;

/**
 * [tExtractJSONFields_1 main ] stop
 */
	
	/**
	 * [tExtractJSONFields_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_1";

	

 



/**
 * [tExtractJSONFields_1 process_data_begin ] stop
 */
// Start of branch "row4"
if(row4 != null) { 



	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_1 = false;
		  boolean mainRowRejected_tMap_1 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row27" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow27 = false;
       		  	    	
       		  	    	
 							row27Struct row27ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		row27HashKey.AssetName = row4.name ;
                        		    		

								
		                        	row27HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row27.lookup( row27HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row27.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_1 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row27 != null && tHash_Lookup_row27.getCount(row27HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row27' and it contains more one result from keys :  row27.AssetName = '" + row27HashKey.AssetName + "'");
								} // G 071
							

							row27Struct row27 = null;
                    		  	 
							   
                    		  	 
	       		  	    	row27Struct fromLookup_row27 = null;
							row27 = row27Default;
										 
							
								 
							
							
								if (tHash_Lookup_row27 !=null && tHash_Lookup_row27.hasNext()) { // G 099
								
							
								
								fromLookup_row27 = tHash_Lookup_row27.next();

							
							
								} // G 099
							
							

							if(fromLookup_row27 != null) {
								row27 = fromLookup_row27;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;
Var.var1 = "'" + StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Style_Code , "\"\\]", "").replace("_", " ")  , "\\[\"", "")  + "-" + StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Color_Code , "\"\\]", "")  , "\\[\"", "") + "'," ;// ###############################
        // ###############################
        // # Output tables

out3 = null;
out4 = null;

if(!rejectedInnerJoin_tMap_1 ) {

// # Output table : 'out3'
out3_tmp.id = row4.id ;
out3_tmp.description = row4.description ;
out3_tmp.type = row4.type ;
out3_tmp.idHash = row4.idHash ;
out3_tmp.tags = StringHandling.CHANGE(StringHandling.CHANGE(StringHandling.CHANGE(row4.tags , "\"\\]", "")  , "\\[\"", "") , "\"" ,"") ;
out3_tmp.brandId = row4.brandId ;
out3_tmp.name = row4.name ;
out3_tmp.property_Color_Code = StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Color_Code , "\"\\]", "")  , "\\[\"", "") ;
out3_tmp.property_Style_Code = StringHandling.DOWNCASE(StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Style_Code , "\"\\]", "")  , "\\[\"", "").replace("_", " ") ) ;
out3_tmp.property_Brand = StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Brand , "\"\\]", "")  , "\\[\"", "") ;
out3_tmp.extension = StringHandling.CHANGE(StringHandling.CHANGE(row4.extension , "\"\\]", "")  , "\\[\"", "") ;
out3_tmp.property_Style_Reference = StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Style_Reference  , "\"\\]", "")  , "\\[\"", "") ;
out3_tmp.isPublic = row4.isPublic ;
out3_tmp.property_Season = StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Season  , "\"\\]", "")  , "\\[\"", "") ;
out3_tmp.property_Year = StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Year  , "\"\\]", "")  , "\\[\"", "") ;
out3_tmp.property_Asset_Type = StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Asset_Type  , "\"\\]", "")  , "\\[\"", "") ;
out3_tmp.property_Asset_Subtype = StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Asset_Subtype  , "\"\\]", "")  , "\\[\"", "") ;
out3_tmp.userCreated = row4.userCreated ;
out3_tmp.filename = row4.filename ;
out3_tmp.property_Gender = StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Gender  , "\"\\]", "")  , "\\[\"", "") ;
out3_tmp.property_Age_Group = StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Age_Group  , "\"\\]", "")  , "\\[\"", "") ;
out3_tmp.property_Sub_Division = StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Sub_Division  , "\"\\]", "")  , "\\[\"", "") ;
out3_tmp.property_Division = StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Division  , "\"\\]", "")  , "\\[\"", "") ;
out3_tmp.Terms_of_Use = row4.Terms_of_Use ;
out3_tmp.webimage = row4.webimage ;
out3_tmp.thul = row4.thul ;
out3_tmp.property_Photo_View = StringHandling.CHANGE(StringHandling.CHANGE(StringHandling.CHANGE(row4.property_Photo_View , "\"\\]", "")  , "\\[\"", "") , "\"" ,"") ;
out3 = out3_tmp;

// # Output table : 'out4'
out4_tmp.var1 = Var.var1 ;
out4 = out4_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "out3"
if(out3 != null) { 



	
	/**
	 * [tFilterRow_1 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";

	

          row25 = null;
    Operator_tFilterRow_1 ope_tFilterRow_1 = new Operator_tFilterRow_1("&&");
            ope_tFilterRow_1.matches((out3.property_Style_Code == null? false : out3.property_Style_Code.compareTo("") != 0)
                           , "property_Style_Code.compareTo(\"\") != 0 failed");
    
    if (ope_tFilterRow_1.getMatchFlag()) {
              if(row25 == null){ 
                row25 = new row25Struct();
              }
               row25.id = out3.id;
               row25.description = out3.description;
               row25.type = out3.type;
               row25.idHash = out3.idHash;
               row25.tags = out3.tags;
               row25.brandId = out3.brandId;
               row25.name = out3.name;
               row25.property_Color_Code = out3.property_Color_Code;
               row25.property_Style_Code = out3.property_Style_Code;
               row25.property_Brand = out3.property_Brand;
               row25.extension = out3.extension;
               row25.property_Style_Reference = out3.property_Style_Reference;
               row25.isPublic = out3.isPublic;
               row25.property_Season = out3.property_Season;
               row25.property_Year = out3.property_Year;
               row25.property_Asset_Type = out3.property_Asset_Type;
               row25.property_Asset_Subtype = out3.property_Asset_Subtype;
               row25.userCreated = out3.userCreated;
               row25.filename = out3.filename;
               row25.property_Gender = out3.property_Gender;
               row25.property_Age_Group = out3.property_Age_Group;
               row25.property_Sub_Division = out3.property_Sub_Division;
               row25.property_Division = out3.property_Division;
               row25.Terms_of_Use = out3.Terms_of_Use;
               row25.webimage = out3.webimage;
               row25.thul = out3.thul;
               row25.property_Photo_View = out3.property_Photo_View;    
      nb_line_ok_tFilterRow_1++;
    } else {
      nb_line_reject_tFilterRow_1++;
    }

nb_line_tFilterRow_1++;

 


	tos_count_tFilterRow_1++;

/**
 * [tFilterRow_1 main ] stop
 */
	
	/**
	 * [tFilterRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";

	

 



/**
 * [tFilterRow_1 process_data_begin ] stop
 */
// Start of branch "row25"
if(row25 != null) { 



	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";

	


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            if(row25.id != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.id
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.description != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.description
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.type != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.type
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.idHash != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.idHash
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.tags != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.tags
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.brandId != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.brandId
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.name != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.name
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.property_Color_Code != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.property_Color_Code
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.property_Style_Code != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.property_Style_Code
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.property_Brand != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.property_Brand
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.extension != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.extension
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.property_Style_Reference != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.property_Style_Reference
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.isPublic != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.isPublic
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.property_Season != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.property_Season
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.property_Year != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.property_Year
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.property_Asset_Type != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.property_Asset_Type
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.property_Asset_Subtype != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.property_Asset_Subtype
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.userCreated != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.userCreated
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.filename != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.filename
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.property_Gender != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.property_Gender
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.property_Age_Group != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.property_Age_Group
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.property_Sub_Division != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.property_Sub_Division
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.property_Division != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.property_Division
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.Terms_of_Use != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.Terms_of_Use
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.webimage != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.webimage
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.thul != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.thul
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row25.property_Photo_View != null) {
                        sb_tFileOutputDelimited_1.append(
                            row25.property_Photo_View
                        );
                            }
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());




 


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";

	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";

	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */

} // End of branch "row25"




	
	/**
	 * [tFilterRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";

	

 



/**
 * [tFilterRow_1 process_data_end ] stop
 */

} // End of branch "out3"




// Start of branch "out4"
if(out4 != null) { 



	
	/**
	 * [tUniqRow_2 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";

	
row5.var1 = out4.var1;			

 


	tos_count_tUniqRow_2++;

/**
 * [tUniqRow_2 main ] stop
 */
	
	/**
	 * [tUniqRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";

	

 



/**
 * [tUniqRow_2 process_data_begin ] stop
 */
// Start of branch "row5"
if(row5 != null) { 



	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";

	

    // code sample:
//
// multiply by 2 the row identifier
// output_row.id = row5.id * 2;
//
// lowercase the name

System.out.println(row5.var1);


globalMap.put("All_StyleColor", (String)globalMap.get("All_StyleColor") + row5.var1); 
//System.out.println("(String)globalMap.get()5 ::  " + (String)globalMap.get("All_StyleColor")  );






    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";

	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";

	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */

} // End of branch "row5"




	
	/**
	 * [tUniqRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";

	

 



/**
 * [tUniqRow_2 process_data_end ] stop
 */

} // End of branch "out4"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 process_data_end ] stop
 */

} // End of branch "row4"

		// end for
	}


	
		} // C_01
	
	
	/**
	 * [tExtractJSONFields_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_1";

	

 



/**
 * [tExtractJSONFields_1 process_data_end ] stop
 */

} // End of branch "row1"




	
	/**
	 * [tRESTClient_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRESTClient_1";

	

 



/**
 * [tRESTClient_1 process_data_end ] stop
 */

} // End of branch "row7"




	
	/**
	 * [tUniqRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";

	

 



/**
 * [tUniqRow_1 process_data_end ] stop
 */

} // End of branch "row6"




	
	/**
	 * [tFileInputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";

	

 



/**
 * [tFileInputDelimited_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";

	



            }
            }finally{
                if(!((Object)("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/input"+ "/FileAssetsName.csv") instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_1!=null){
                		fid_tFileInputDelimited_1.close();
                	}
                }
                if(fid_tFileInputDelimited_1!=null){
                	globalMap.put("tFileInputDelimited_1_NB_LINE", fid_tFileInputDelimited_1.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_1", true);
end_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());




/**
 * [tFileInputDelimited_1 end ] stop
 */

	
	/**
	 * [tUniqRow_1 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";

	

globalMap.put("tUniqRow_1_NB_UNIQUES",nb_uniques_tUniqRow_1);
globalMap.put("tUniqRow_1_NB_DUPLICATES",nb_duplicates_tUniqRow_1);

 

ok_Hash.put("tUniqRow_1", true);
end_Hash.put("tUniqRow_1", System.currentTimeMillis());




/**
 * [tUniqRow_1 end ] stop
 */

	
	/**
	 * [tRESTClient_1 end ] start
	 */

	

	
	
	currentComponent="tRESTClient_1";

	


if (globalMap.get("tRESTClient_1_NB_LINE") == null) {
	globalMap.put("tRESTClient_1_NB_LINE", 1);
}

// [tRESTCliend_end]
 

ok_Hash.put("tRESTClient_1", true);
end_Hash.put("tRESTClient_1", System.currentTimeMillis());




/**
 * [tRESTClient_1 end ] stop
 */

	
	/**
	 * [tExtractJSONFields_1 end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_1";

	
   globalMap.put("tExtractJSONFields_1_NB_LINE", nb_line_tExtractJSONFields_1);


 

ok_Hash.put("tExtractJSONFields_1", true);
end_Hash.put("tExtractJSONFields_1", System.currentTimeMillis());




/**
 * [tExtractJSONFields_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row27 != null) {
						tHash_Lookup_row27.endGet();
					}
					globalMap.remove( "tHash_Lookup_row27" );

					
					
				
// ###############################      





 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tFilterRow_1 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";

	
    globalMap.put("tFilterRow_1_NB_LINE", nb_line_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_OK", nb_line_ok_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_REJECT", nb_line_reject_tFilterRow_1);
    

 

ok_Hash.put("tFilterRow_1", true);
end_Hash.put("tFilterRow_1", System.currentTimeMillis());




/**
 * [tFilterRow_1 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";

	



		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_1 end ] stop
 */







	
	/**
	 * [tUniqRow_2 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";

	

globalMap.put("tUniqRow_2_NB_UNIQUES",nb_uniques_tUniqRow_2);
globalMap.put("tUniqRow_2_NB_DUPLICATES",nb_duplicates_tUniqRow_2);

 

ok_Hash.put("tUniqRow_2", true);
end_Hash.put("tUniqRow_2", System.currentTimeMillis());




/**
 * [tUniqRow_2 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";

	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());

				tJava_1Process(globalMap);



/**
 * [tJavaRow_2 end ] stop
 */


















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileInputDelimited_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
							tSalesforceConnection_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row27"); 
				     			
				try{
					
	
	/**
	 * [tFileInputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";

	

 



/**
 * [tFileInputDelimited_1 finally ] stop
 */

	
	/**
	 * [tUniqRow_1 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";

	

 



/**
 * [tUniqRow_1 finally ] stop
 */

	
	/**
	 * [tRESTClient_1 finally ] start
	 */

	

	
	
	currentComponent="tRESTClient_1";

	

 



/**
 * [tRESTClient_1 finally ] stop
 */

	
	/**
	 * [tExtractJSONFields_1 finally ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_1";

	

 



/**
 * [tExtractJSONFields_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tFilterRow_1 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";

	

 



/**
 * [tFilterRow_1 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";

	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */







	
	/**
	 * [tUniqRow_2 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";

	

 



/**
 * [tUniqRow_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";

	

 



/**
 * [tJavaRow_2 finally ] stop
 */


















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 1);
	}
	

public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";

	
		int tos_count_tJava_1 = 0;
		



//(String)globalMap.get("All_StyleColor").remove(Character.valueOf(','));
System.out.println("(String)globalMap.get()length ::  " + globalMap.get("All_StyleColor").toString().length()  );

System.out.println("(String)globalMap.get()1 ::  " + (String)globalMap.get("All_StyleColor")  );

//StringHandling.RIGHT((String)globalMap.get("All_StyleColor")  , globalMap.get("All_StyleColor").toString().length() - 1 )

if ( globalMap.get("All_StyleColor").toString().length() > 0) {
  globalMap.put("All_StyleColor", StringHandling.LEFT((String)globalMap.get("All_StyleColor") , globalMap.get("All_StyleColor").toString().length() - 1 ));
} else {
  globalMap.put("All_StyleColor", null);
}



System.out.println("(String)globalMap.get()2 IMAGE  ------ ::  " + (String)globalMap.get("All_StyleColor")  );
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	

public void tSalesforceConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tSalesforceConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tSalesforceConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tSalesforceConnection_1", false);
		start_Hash.put("tSalesforceConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tSalesforceConnection_1";

	
		int tos_count_tSalesforceConnection_1 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tSalesforceConnection_1 =
        new org.talend.components.salesforce.tsalesforceconnection.TSalesforceConnectionDefinition();

org.talend.components.salesforce.SalesforceConnectionProperties props_tSalesforceConnection_1 =
        (org.talend.components.salesforce.SalesforceConnectionProperties) def_tSalesforceConnection_1.createRuntimeProperties();
 		                    props_tSalesforceConnection_1.setValue("endpoint",
 		                    "https://login.salesforce.com/services/Soap/u/45.0");
 		                    
 		                    props_tSalesforceConnection_1.setValue("loginType",
 		                        org.talend.components.salesforce.SalesforceConnectionProperties.LoginType.Basic);
 		                    
 		                    props_tSalesforceConnection_1.setValue("bulkConnection",
 		                    false);
 		                    
 		                    props_tSalesforceConnection_1.setValue("reuseSession",
 		                    false);
 		                    
 		                    props_tSalesforceConnection_1.setValue("needCompression",
 		                    false);
 		                    
 		                    props_tSalesforceConnection_1.setValue("timeout",
 		                    60000);
 		                    
 		                    props_tSalesforceConnection_1.setValue("httpChunked",
 		                    true);
 		                    
 		                    props_tSalesforceConnection_1.setValue("clientId",
 		                    "systemuser@haddadeurope.com");
 		                    
 		                        props_tSalesforceConnection_1.userPassword.setValue("securityKey",
 		                        routines.system.PasswordEncryptUtil.decryptPassword("ENC:[vSU2qOHkQV3l48dSaMjfXnkoKQY1PvG4MaDbYFLCPXaXujyk4oKK7MViMw6kr7hZIHGoqg8=]"));
 		                        
 		                    props_tSalesforceConnection_1.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceConnection_1.userPassword.setValue("userId",
 		                    "systemuser@haddadeurope.com");
 		                    
 		                        props_tSalesforceConnection_1.userPassword.setValue("password",
 		                        routines.system.PasswordEncryptUtil.decryptPassword("ENC:[312rhI5QqvIJ0oBM4TYhz9M/W+144n185jX/OpGeNtK87JZGU34LK14yPnQY]"));
 		                        
 		                    props_tSalesforceConnection_1.proxy.setValue("useProxy",
 		                    false);
 		                    
 		                    props_tSalesforceConnection_1.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceConnection_1.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceConnection_1.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceConnection_1 = props_tSalesforceConnection_1.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceConnection_1 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceConnection_1 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceConnection_1 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceConnection_1.referencedComponent.setReference(referencedComponentProperties_tSalesforceConnection_1);
        }
    }
globalMap.put("tSalesforceConnection_1_COMPONENT_RUNTIME_PROPERTIES", props_tSalesforceConnection_1);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tSalesforceConnection_1= this.getClass().getResource("/xmlMappings");
globalMap.put("tSalesforceConnection_1_MAPPINGS_URL", mappings_url_tSalesforceConnection_1);

org.talend.components.api.container.RuntimeContainer container_tSalesforceConnection_1 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tSalesforceConnection_1";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tSalesforceConnection_1 = 0;

org.talend.components.api.component.ConnectorTopology topology_tSalesforceConnection_1 = null;
topology_tSalesforceConnection_1 = org.talend.components.api.component.ConnectorTopology.NONE;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tSalesforceConnection_1 = def_tSalesforceConnection_1.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tSalesforceConnection_1, topology_tSalesforceConnection_1);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tSalesforceConnection_1 = def_tSalesforceConnection_1.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tSalesforceConnection_1 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tSalesforceConnection_1.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tSalesforceConnection_1 = componentRuntime_tSalesforceConnection_1.initialize(container_tSalesforceConnection_1, props_tSalesforceConnection_1);

if (initVr_tSalesforceConnection_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tSalesforceConnection_1.getMessage());
}

if(componentRuntime_tSalesforceConnection_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tSalesforceConnection_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tSalesforceConnection_1;
	compDriverInitialization_tSalesforceConnection_1.runAtDriver(container_tSalesforceConnection_1);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tSalesforceConnection_1 = null;
if(componentRuntime_tSalesforceConnection_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tSalesforceConnection_1 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tSalesforceConnection_1;
	org.talend.daikon.properties.ValidationResult vr_tSalesforceConnection_1 = sourceOrSink_tSalesforceConnection_1.validate(container_tSalesforceConnection_1);
	if (vr_tSalesforceConnection_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tSalesforceConnection_1.getMessage());
	}
}

 



/**
 * [tSalesforceConnection_1 begin ] stop
 */
	
	/**
	 * [tSalesforceConnection_1 main ] start
	 */

	

	
	
	currentComponent="tSalesforceConnection_1";

	


 


	tos_count_tSalesforceConnection_1++;

/**
 * [tSalesforceConnection_1 main ] stop
 */
	
	/**
	 * [tSalesforceConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSalesforceConnection_1";

	


 



/**
 * [tSalesforceConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tSalesforceConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tSalesforceConnection_1";

	


 



/**
 * [tSalesforceConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tSalesforceConnection_1 end ] start
	 */

	

	
	
	currentComponent="tSalesforceConnection_1";

	
// end of generic

 

ok_Hash.put("tSalesforceConnection_1", true);
end_Hash.put("tSalesforceConnection_1", System.currentTimeMillis());




/**
 * [tSalesforceConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tSalesforceConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
							tSalesforceInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tSalesforceConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tSalesforceConnection_1";

	
// finally of generic

 



/**
 * [tSalesforceConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tSalesforceConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_5_Link_Haddad__c;

				public String getImage_5_Link_Haddad__c () {
					return this.Image_5_Link_Haddad__c;
				}
				
			    public String Image_5_Link_Type__c;

				public String getImage_5_Link_Type__c () {
					return this.Image_5_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_5_Link_Haddad__c = readString(dis);
					
					this.Image_5_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_5_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_5_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_5_Link_Haddad__c="+Image_5_Link_Haddad__c);
		sb.append(",Image_5_Link_Type__c="+Image_5_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_5_Link_Haddad__c;

				public String getImage_5_Link_Haddad__c () {
					return this.Image_5_Link_Haddad__c;
				}
				
			    public String Image_5_Link_Type__c;

				public String getImage_5_Link_Type__c () {
					return this.Image_5_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_5_Link_Haddad__c = readString(dis);
					
					this.Image_5_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_5_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_5_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_5_Link_Haddad__c="+Image_5_Link_Haddad__c);
		sb.append(",Image_5_Link_Type__c="+Image_5_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfcopyOfcopyOfUpdate_Back_ImageStruct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfUpdate_Back_ImageStruct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_5_Link_Haddad__c;

				public String getImage_5_Link_Haddad__c () {
					return this.Image_5_Link_Haddad__c;
				}
				
			    public String Image_5_Link_Type__c;

				public String getImage_5_Link_Type__c () {
					return this.Image_5_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_5_Link_Haddad__c = readString(dis);
					
					this.Image_5_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_5_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_5_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_5_Link_Haddad__c="+Image_5_Link_Haddad__c);
		sb.append(",Image_5_Link_Type__c="+Image_5_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfUpdate_Back_ImageStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_4_Link_Haddad__c;

				public String getImage_4_Link_Haddad__c () {
					return this.Image_4_Link_Haddad__c;
				}
				
			    public String Image_4_Link_Type__c;

				public String getImage_4_Link_Type__c () {
					return this.Image_4_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_4_Link_Haddad__c = readString(dis);
					
					this.Image_4_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_4_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_4_Link_Haddad__c="+Image_4_Link_Haddad__c);
		sb.append(",Image_4_Link_Type__c="+Image_4_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_4_Link_Haddad__c;

				public String getImage_4_Link_Haddad__c () {
					return this.Image_4_Link_Haddad__c;
				}
				
			    public String Image_4_Link_Type__c;

				public String getImage_4_Link_Type__c () {
					return this.Image_4_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_4_Link_Haddad__c = readString(dis);
					
					this.Image_4_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_4_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_4_Link_Haddad__c="+Image_4_Link_Haddad__c);
		sb.append(",Image_4_Link_Type__c="+Image_4_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfcopyOfUpdate_Back_ImageStruct implements routines.system.IPersistableRow<copyOfcopyOfUpdate_Back_ImageStruct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_4_Link_Haddad__c;

				public String getImage_4_Link_Haddad__c () {
					return this.Image_4_Link_Haddad__c;
				}
				
			    public String Image_4_Link_Type__c;

				public String getImage_4_Link_Type__c () {
					return this.Image_4_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_4_Link_Haddad__c = readString(dis);
					
					this.Image_4_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_4_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_4_Link_Haddad__c="+Image_4_Link_Haddad__c);
		sb.append(",Image_4_Link_Type__c="+Image_4_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfUpdate_Back_ImageStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_3_Link_Haddad__c;

				public String getImage_3_Link_Haddad__c () {
					return this.Image_3_Link_Haddad__c;
				}
				
			    public String Image_3_Link_Type__c;

				public String getImage_3_Link_Type__c () {
					return this.Image_3_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_3_Link_Haddad__c = readString(dis);
					
					this.Image_3_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_3_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_3_Link_Haddad__c="+Image_3_Link_Haddad__c);
		sb.append(",Image_3_Link_Type__c="+Image_3_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_3_Link_Haddad__c;

				public String getImage_3_Link_Haddad__c () {
					return this.Image_3_Link_Haddad__c;
				}
				
			    public String Image_3_Link_Type__c;

				public String getImage_3_Link_Type__c () {
					return this.Image_3_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_3_Link_Haddad__c = readString(dis);
					
					this.Image_3_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_3_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_3_Link_Haddad__c="+Image_3_Link_Haddad__c);
		sb.append(",Image_3_Link_Type__c="+Image_3_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfUpdate_Back_ImageStruct implements routines.system.IPersistableRow<copyOfUpdate_Back_ImageStruct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_3_Link_Haddad__c;

				public String getImage_3_Link_Haddad__c () {
					return this.Image_3_Link_Haddad__c;
				}
				
			    public String Image_3_Link_Type__c;

				public String getImage_3_Link_Type__c () {
					return this.Image_3_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_3_Link_Haddad__c = readString(dis);
					
					this.Image_3_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_3_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_3_Link_Haddad__c="+Image_3_Link_Haddad__c);
		sb.append(",Image_3_Link_Type__c="+Image_3_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfUpdate_Back_ImageStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_2_Link_Haddad__c;

				public String getImage_2_Link_Haddad__c () {
					return this.Image_2_Link_Haddad__c;
				}
				
			    public String Image_2_Link_Type__c;

				public String getImage_2_Link_Type__c () {
					return this.Image_2_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_2_Link_Haddad__c = readString(dis);
					
					this.Image_2_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_2_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_2_Link_Haddad__c="+Image_2_Link_Haddad__c);
		sb.append(",Image_2_Link_Type__c="+Image_2_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_2_Link_Haddad__c;

				public String getImage_2_Link_Haddad__c () {
					return this.Image_2_Link_Haddad__c;
				}
				
			    public String Image_2_Link_Type__c;

				public String getImage_2_Link_Type__c () {
					return this.Image_2_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_2_Link_Haddad__c = readString(dis);
					
					this.Image_2_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_2_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_2_Link_Haddad__c="+Image_2_Link_Haddad__c);
		sb.append(",Image_2_Link_Type__c="+Image_2_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Update_Back_ImageStruct implements routines.system.IPersistableRow<Update_Back_ImageStruct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_2_Link_Haddad__c;

				public String getImage_2_Link_Haddad__c () {
					return this.Image_2_Link_Haddad__c;
				}
				
			    public String Image_2_Link_Type__c;

				public String getImage_2_Link_Type__c () {
					return this.Image_2_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_2_Link_Haddad__c = readString(dis);
					
					this.Image_2_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_2_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_2_Link_Haddad__c="+Image_2_Link_Haddad__c);
		sb.append(",Image_2_Link_Type__c="+Image_2_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Update_Back_ImageStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_1_Link_Haddad__c;

				public String getImage_1_Link_Haddad__c () {
					return this.Image_1_Link_Haddad__c;
				}
				
			    public String Image_1_Link_Type__c;

				public String getImage_1_Link_Type__c () {
					return this.Image_1_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_1_Link_Haddad__c = readString(dis);
					
					this.Image_1_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_1_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_1_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_1_Link_Haddad__c="+Image_1_Link_Haddad__c);
		sb.append(",Image_1_Link_Type__c="+Image_1_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_1_Link_Haddad__c;

				public String getImage_1_Link_Haddad__c () {
					return this.Image_1_Link_Haddad__c;
				}
				
			    public String Image_1_Link_Type__c;

				public String getImage_1_Link_Type__c () {
					return this.Image_1_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_1_Link_Haddad__c = readString(dis);
					
					this.Image_1_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_1_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_1_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_1_Link_Haddad__c="+Image_1_Link_Haddad__c);
		sb.append(",Image_1_Link_Type__c="+Image_1_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class updateSF_Front_ImageStruct implements routines.system.IPersistableRow<updateSF_Front_ImageStruct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String Image_1_Link_Haddad__c;

				public String getImage_1_Link_Haddad__c () {
					return this.Image_1_Link_Haddad__c;
				}
				
			    public String Image_1_Link_Type__c;

				public String getImage_1_Link_Type__c () {
					return this.Image_1_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.Image_1_Link_Haddad__c = readString(dis);
					
					this.Image_1_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.Image_1_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_1_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",Image_1_Link_Haddad__c="+Image_1_Link_Haddad__c);
		sb.append(",Image_1_Link_Type__c="+Image_1_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(updateSF_Front_ImageStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out1Struct implements routines.system.IPersistableRow<out1Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String ProductCode;

				public String getProductCode () {
					return this.ProductCode;
				}
				
			    public String Product_Code_External_Id__c;

				public String getProduct_Code_External_Id__c () {
					return this.Product_Code_External_Id__c;
				}
				
			    public String Color_Code_Haddad__c;

				public String getColor_Code_Haddad__c () {
					return this.Color_Code_Haddad__c;
				}
				
			    public String Color_Haddad__r_Name;

				public String getColor_Haddad__r_Name () {
					return this.Color_Haddad__r_Name;
				}
				
			    public String Color_Haddad__r_Color_Name_External__c;

				public String getColor_Haddad__r_Color_Name_External__c () {
					return this.Color_Haddad__r_Color_Name_External__c;
				}
				
			    public String Name;

				public String getName () {
					return this.Name;
				}
				
			    public String Ref__c;

				public String getRef__c () {
					return this.Ref__c;
				}
				
			    public String Style_Haddad__r_Name;

				public String getStyle_Haddad__r_Name () {
					return this.Style_Haddad__r_Name;
				}
				
			    public String Image_1_Link_Haddad__c;

				public String getImage_1_Link_Haddad__c () {
					return this.Image_1_Link_Haddad__c;
				}
				
			    public String Image_2_Link_Haddad__c;

				public String getImage_2_Link_Haddad__c () {
					return this.Image_2_Link_Haddad__c;
				}
				
			    public String Image_3_Link_Haddad__c;

				public String getImage_3_Link_Haddad__c () {
					return this.Image_3_Link_Haddad__c;
				}
				
			    public String Image_4_Link_Haddad__c;

				public String getImage_4_Link_Haddad__c () {
					return this.Image_4_Link_Haddad__c;
				}
				
			    public String Image_1_Link_Type__c;

				public String getImage_1_Link_Type__c () {
					return this.Image_1_Link_Type__c;
				}
				
			    public String Image_2_Link_Type__c;

				public String getImage_2_Link_Type__c () {
					return this.Image_2_Link_Type__c;
				}
				
			    public String Image_3_Link_Type__c;

				public String getImage_3_Link_Type__c () {
					return this.Image_3_Link_Type__c;
				}
				
			    public String Image_4_Link_Type__c;

				public String getImage_4_Link_Type__c () {
					return this.Image_4_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.ProductCode = readString(dis);
					
					this.Product_Code_External_Id__c = readString(dis);
					
					this.Color_Code_Haddad__c = readString(dis);
					
					this.Color_Haddad__r_Name = readString(dis);
					
					this.Color_Haddad__r_Color_Name_External__c = readString(dis);
					
					this.Name = readString(dis);
					
					this.Ref__c = readString(dis);
					
					this.Style_Haddad__r_Name = readString(dis);
					
					this.Image_1_Link_Haddad__c = readString(dis);
					
					this.Image_2_Link_Haddad__c = readString(dis);
					
					this.Image_3_Link_Haddad__c = readString(dis);
					
					this.Image_4_Link_Haddad__c = readString(dis);
					
					this.Image_1_Link_Type__c = readString(dis);
					
					this.Image_2_Link_Type__c = readString(dis);
					
					this.Image_3_Link_Type__c = readString(dis);
					
					this.Image_4_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.ProductCode,dos);
					
					// String
				
						writeString(this.Product_Code_External_Id__c,dos);
					
					// String
				
						writeString(this.Color_Code_Haddad__c,dos);
					
					// String
				
						writeString(this.Color_Haddad__r_Name,dos);
					
					// String
				
						writeString(this.Color_Haddad__r_Color_Name_External__c,dos);
					
					// String
				
						writeString(this.Name,dos);
					
					// String
				
						writeString(this.Ref__c,dos);
					
					// String
				
						writeString(this.Style_Haddad__r_Name,dos);
					
					// String
				
						writeString(this.Image_1_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_1_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",ProductCode="+ProductCode);
		sb.append(",Product_Code_External_Id__c="+Product_Code_External_Id__c);
		sb.append(",Color_Code_Haddad__c="+Color_Code_Haddad__c);
		sb.append(",Color_Haddad__r_Name="+Color_Haddad__r_Name);
		sb.append(",Color_Haddad__r_Color_Name_External__c="+Color_Haddad__r_Color_Name_External__c);
		sb.append(",Name="+Name);
		sb.append(",Ref__c="+Ref__c);
		sb.append(",Style_Haddad__r_Name="+Style_Haddad__r_Name);
		sb.append(",Image_1_Link_Haddad__c="+Image_1_Link_Haddad__c);
		sb.append(",Image_2_Link_Haddad__c="+Image_2_Link_Haddad__c);
		sb.append(",Image_3_Link_Haddad__c="+Image_3_Link_Haddad__c);
		sb.append(",Image_4_Link_Haddad__c="+Image_4_Link_Haddad__c);
		sb.append(",Image_1_Link_Type__c="+Image_1_Link_Type__c);
		sb.append(",Image_2_Link_Type__c="+Image_2_Link_Type__c);
		sb.append(",Image_3_Link_Type__c="+Image_3_Link_Type__c);
		sb.append(",Image_4_Link_Type__c="+Image_4_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out_2Struct implements routines.system.IPersistableRow<out_2Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String ProductCode;

				public String getProductCode () {
					return this.ProductCode;
				}
				
			    public String Product_Code_External_Id__c;

				public String getProduct_Code_External_Id__c () {
					return this.Product_Code_External_Id__c;
				}
				
			    public String Color_Code_Haddad__c;

				public String getColor_Code_Haddad__c () {
					return this.Color_Code_Haddad__c;
				}
				
			    public String Color_Haddad__r_Name;

				public String getColor_Haddad__r_Name () {
					return this.Color_Haddad__r_Name;
				}
				
			    public String Color_Haddad__r_Color_Name_External__c;

				public String getColor_Haddad__r_Color_Name_External__c () {
					return this.Color_Haddad__r_Color_Name_External__c;
				}
				
			    public String Name;

				public String getName () {
					return this.Name;
				}
				
			    public String Ref__c;

				public String getRef__c () {
					return this.Ref__c;
				}
				
			    public String Style_Haddad__r_Name;

				public String getStyle_Haddad__r_Name () {
					return this.Style_Haddad__r_Name;
				}
				
			    public String Image_1_Link_Haddad__c;

				public String getImage_1_Link_Haddad__c () {
					return this.Image_1_Link_Haddad__c;
				}
				
			    public String Image_2_Link_Haddad__c;

				public String getImage_2_Link_Haddad__c () {
					return this.Image_2_Link_Haddad__c;
				}
				
			    public String Image_3_Link_Haddad__c;

				public String getImage_3_Link_Haddad__c () {
					return this.Image_3_Link_Haddad__c;
				}
				
			    public String Image_4_Link_Haddad__c;

				public String getImage_4_Link_Haddad__c () {
					return this.Image_4_Link_Haddad__c;
				}
				
			    public String Image_1_Link_Type__c;

				public String getImage_1_Link_Type__c () {
					return this.Image_1_Link_Type__c;
				}
				
			    public String Image_2_Link_Type__c;

				public String getImage_2_Link_Type__c () {
					return this.Image_2_Link_Type__c;
				}
				
			    public String Image_3_Link_Type__c;

				public String getImage_3_Link_Type__c () {
					return this.Image_3_Link_Type__c;
				}
				
			    public String Image_4_Link_Type__c;

				public String getImage_4_Link_Type__c () {
					return this.Image_4_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.ProductCode = readString(dis);
					
					this.Product_Code_External_Id__c = readString(dis);
					
					this.Color_Code_Haddad__c = readString(dis);
					
					this.Color_Haddad__r_Name = readString(dis);
					
					this.Color_Haddad__r_Color_Name_External__c = readString(dis);
					
					this.Name = readString(dis);
					
					this.Ref__c = readString(dis);
					
					this.Style_Haddad__r_Name = readString(dis);
					
					this.Image_1_Link_Haddad__c = readString(dis);
					
					this.Image_2_Link_Haddad__c = readString(dis);
					
					this.Image_3_Link_Haddad__c = readString(dis);
					
					this.Image_4_Link_Haddad__c = readString(dis);
					
					this.Image_1_Link_Type__c = readString(dis);
					
					this.Image_2_Link_Type__c = readString(dis);
					
					this.Image_3_Link_Type__c = readString(dis);
					
					this.Image_4_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.ProductCode,dos);
					
					// String
				
						writeString(this.Product_Code_External_Id__c,dos);
					
					// String
				
						writeString(this.Color_Code_Haddad__c,dos);
					
					// String
				
						writeString(this.Color_Haddad__r_Name,dos);
					
					// String
				
						writeString(this.Color_Haddad__r_Color_Name_External__c,dos);
					
					// String
				
						writeString(this.Name,dos);
					
					// String
				
						writeString(this.Ref__c,dos);
					
					// String
				
						writeString(this.Style_Haddad__r_Name,dos);
					
					// String
				
						writeString(this.Image_1_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_1_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",ProductCode="+ProductCode);
		sb.append(",Product_Code_External_Id__c="+Product_Code_External_Id__c);
		sb.append(",Color_Code_Haddad__c="+Color_Code_Haddad__c);
		sb.append(",Color_Haddad__r_Name="+Color_Haddad__r_Name);
		sb.append(",Color_Haddad__r_Color_Name_External__c="+Color_Haddad__r_Color_Name_External__c);
		sb.append(",Name="+Name);
		sb.append(",Ref__c="+Ref__c);
		sb.append(",Style_Haddad__r_Name="+Style_Haddad__r_Name);
		sb.append(",Image_1_Link_Haddad__c="+Image_1_Link_Haddad__c);
		sb.append(",Image_2_Link_Haddad__c="+Image_2_Link_Haddad__c);
		sb.append(",Image_3_Link_Haddad__c="+Image_3_Link_Haddad__c);
		sb.append(",Image_4_Link_Haddad__c="+Image_4_Link_Haddad__c);
		sb.append(",Image_1_Link_Type__c="+Image_1_Link_Type__c);
		sb.append(",Image_2_Link_Type__c="+Image_2_Link_Type__c);
		sb.append(",Image_3_Link_Type__c="+Image_3_Link_Type__c);
		sb.append(",Image_4_Link_Type__c="+Image_4_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out_2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out_3Struct implements routines.system.IPersistableRow<out_3Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String ProductCode;

				public String getProductCode () {
					return this.ProductCode;
				}
				
			    public String Product_Code_External_Id__c;

				public String getProduct_Code_External_Id__c () {
					return this.Product_Code_External_Id__c;
				}
				
			    public String Color_Code_Haddad__c;

				public String getColor_Code_Haddad__c () {
					return this.Color_Code_Haddad__c;
				}
				
			    public String Color_Haddad__r_Name;

				public String getColor_Haddad__r_Name () {
					return this.Color_Haddad__r_Name;
				}
				
			    public String Color_Haddad__r_Color_Name_External__c;

				public String getColor_Haddad__r_Color_Name_External__c () {
					return this.Color_Haddad__r_Color_Name_External__c;
				}
				
			    public String Name;

				public String getName () {
					return this.Name;
				}
				
			    public String Ref__c;

				public String getRef__c () {
					return this.Ref__c;
				}
				
			    public String Style_Haddad__r_Name;

				public String getStyle_Haddad__r_Name () {
					return this.Style_Haddad__r_Name;
				}
				
			    public String Image_1_Link_Haddad__c;

				public String getImage_1_Link_Haddad__c () {
					return this.Image_1_Link_Haddad__c;
				}
				
			    public String Image_2_Link_Haddad__c;

				public String getImage_2_Link_Haddad__c () {
					return this.Image_2_Link_Haddad__c;
				}
				
			    public String Image_3_Link_Haddad__c;

				public String getImage_3_Link_Haddad__c () {
					return this.Image_3_Link_Haddad__c;
				}
				
			    public String Image_4_Link_Haddad__c;

				public String getImage_4_Link_Haddad__c () {
					return this.Image_4_Link_Haddad__c;
				}
				
			    public String Image_1_Link_Type__c;

				public String getImage_1_Link_Type__c () {
					return this.Image_1_Link_Type__c;
				}
				
			    public String Image_2_Link_Type__c;

				public String getImage_2_Link_Type__c () {
					return this.Image_2_Link_Type__c;
				}
				
			    public String Image_3_Link_Type__c;

				public String getImage_3_Link_Type__c () {
					return this.Image_3_Link_Type__c;
				}
				
			    public String Image_4_Link_Type__c;

				public String getImage_4_Link_Type__c () {
					return this.Image_4_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.ProductCode = readString(dis);
					
					this.Product_Code_External_Id__c = readString(dis);
					
					this.Color_Code_Haddad__c = readString(dis);
					
					this.Color_Haddad__r_Name = readString(dis);
					
					this.Color_Haddad__r_Color_Name_External__c = readString(dis);
					
					this.Name = readString(dis);
					
					this.Ref__c = readString(dis);
					
					this.Style_Haddad__r_Name = readString(dis);
					
					this.Image_1_Link_Haddad__c = readString(dis);
					
					this.Image_2_Link_Haddad__c = readString(dis);
					
					this.Image_3_Link_Haddad__c = readString(dis);
					
					this.Image_4_Link_Haddad__c = readString(dis);
					
					this.Image_1_Link_Type__c = readString(dis);
					
					this.Image_2_Link_Type__c = readString(dis);
					
					this.Image_3_Link_Type__c = readString(dis);
					
					this.Image_4_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.ProductCode,dos);
					
					// String
				
						writeString(this.Product_Code_External_Id__c,dos);
					
					// String
				
						writeString(this.Color_Code_Haddad__c,dos);
					
					// String
				
						writeString(this.Color_Haddad__r_Name,dos);
					
					// String
				
						writeString(this.Color_Haddad__r_Color_Name_External__c,dos);
					
					// String
				
						writeString(this.Name,dos);
					
					// String
				
						writeString(this.Ref__c,dos);
					
					// String
				
						writeString(this.Style_Haddad__r_Name,dos);
					
					// String
				
						writeString(this.Image_1_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_1_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",ProductCode="+ProductCode);
		sb.append(",Product_Code_External_Id__c="+Product_Code_External_Id__c);
		sb.append(",Color_Code_Haddad__c="+Color_Code_Haddad__c);
		sb.append(",Color_Haddad__r_Name="+Color_Haddad__r_Name);
		sb.append(",Color_Haddad__r_Color_Name_External__c="+Color_Haddad__r_Color_Name_External__c);
		sb.append(",Name="+Name);
		sb.append(",Ref__c="+Ref__c);
		sb.append(",Style_Haddad__r_Name="+Style_Haddad__r_Name);
		sb.append(",Image_1_Link_Haddad__c="+Image_1_Link_Haddad__c);
		sb.append(",Image_2_Link_Haddad__c="+Image_2_Link_Haddad__c);
		sb.append(",Image_3_Link_Haddad__c="+Image_3_Link_Haddad__c);
		sb.append(",Image_4_Link_Haddad__c="+Image_4_Link_Haddad__c);
		sb.append(",Image_1_Link_Type__c="+Image_1_Link_Type__c);
		sb.append(",Image_2_Link_Type__c="+Image_2_Link_Type__c);
		sb.append(",Image_3_Link_Type__c="+Image_3_Link_Type__c);
		sb.append(",Image_4_Link_Type__c="+Image_4_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out_3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out_4Struct implements routines.system.IPersistableRow<out_4Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String ProductCode;

				public String getProductCode () {
					return this.ProductCode;
				}
				
			    public String Product_Code_External_Id__c;

				public String getProduct_Code_External_Id__c () {
					return this.Product_Code_External_Id__c;
				}
				
			    public String Color_Code_Haddad__c;

				public String getColor_Code_Haddad__c () {
					return this.Color_Code_Haddad__c;
				}
				
			    public String Color_Haddad__r_Name;

				public String getColor_Haddad__r_Name () {
					return this.Color_Haddad__r_Name;
				}
				
			    public String Color_Haddad__r_Color_Name_External__c;

				public String getColor_Haddad__r_Color_Name_External__c () {
					return this.Color_Haddad__r_Color_Name_External__c;
				}
				
			    public String Name;

				public String getName () {
					return this.Name;
				}
				
			    public String Ref__c;

				public String getRef__c () {
					return this.Ref__c;
				}
				
			    public String Style_Haddad__r_Name;

				public String getStyle_Haddad__r_Name () {
					return this.Style_Haddad__r_Name;
				}
				
			    public String Image_1_Link_Haddad__c;

				public String getImage_1_Link_Haddad__c () {
					return this.Image_1_Link_Haddad__c;
				}
				
			    public String Image_2_Link_Haddad__c;

				public String getImage_2_Link_Haddad__c () {
					return this.Image_2_Link_Haddad__c;
				}
				
			    public String Image_3_Link_Haddad__c;

				public String getImage_3_Link_Haddad__c () {
					return this.Image_3_Link_Haddad__c;
				}
				
			    public String Image_4_Link_Haddad__c;

				public String getImage_4_Link_Haddad__c () {
					return this.Image_4_Link_Haddad__c;
				}
				
			    public String Image_1_Link_Type__c;

				public String getImage_1_Link_Type__c () {
					return this.Image_1_Link_Type__c;
				}
				
			    public String Image_2_Link_Type__c;

				public String getImage_2_Link_Type__c () {
					return this.Image_2_Link_Type__c;
				}
				
			    public String Image_3_Link_Type__c;

				public String getImage_3_Link_Type__c () {
					return this.Image_3_Link_Type__c;
				}
				
			    public String Image_4_Link_Type__c;

				public String getImage_4_Link_Type__c () {
					return this.Image_4_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.ProductCode = readString(dis);
					
					this.Product_Code_External_Id__c = readString(dis);
					
					this.Color_Code_Haddad__c = readString(dis);
					
					this.Color_Haddad__r_Name = readString(dis);
					
					this.Color_Haddad__r_Color_Name_External__c = readString(dis);
					
					this.Name = readString(dis);
					
					this.Ref__c = readString(dis);
					
					this.Style_Haddad__r_Name = readString(dis);
					
					this.Image_1_Link_Haddad__c = readString(dis);
					
					this.Image_2_Link_Haddad__c = readString(dis);
					
					this.Image_3_Link_Haddad__c = readString(dis);
					
					this.Image_4_Link_Haddad__c = readString(dis);
					
					this.Image_1_Link_Type__c = readString(dis);
					
					this.Image_2_Link_Type__c = readString(dis);
					
					this.Image_3_Link_Type__c = readString(dis);
					
					this.Image_4_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.ProductCode,dos);
					
					// String
				
						writeString(this.Product_Code_External_Id__c,dos);
					
					// String
				
						writeString(this.Color_Code_Haddad__c,dos);
					
					// String
				
						writeString(this.Color_Haddad__r_Name,dos);
					
					// String
				
						writeString(this.Color_Haddad__r_Color_Name_External__c,dos);
					
					// String
				
						writeString(this.Name,dos);
					
					// String
				
						writeString(this.Ref__c,dos);
					
					// String
				
						writeString(this.Style_Haddad__r_Name,dos);
					
					// String
				
						writeString(this.Image_1_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_1_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",ProductCode="+ProductCode);
		sb.append(",Product_Code_External_Id__c="+Product_Code_External_Id__c);
		sb.append(",Color_Code_Haddad__c="+Color_Code_Haddad__c);
		sb.append(",Color_Haddad__r_Name="+Color_Haddad__r_Name);
		sb.append(",Color_Haddad__r_Color_Name_External__c="+Color_Haddad__r_Color_Name_External__c);
		sb.append(",Name="+Name);
		sb.append(",Ref__c="+Ref__c);
		sb.append(",Style_Haddad__r_Name="+Style_Haddad__r_Name);
		sb.append(",Image_1_Link_Haddad__c="+Image_1_Link_Haddad__c);
		sb.append(",Image_2_Link_Haddad__c="+Image_2_Link_Haddad__c);
		sb.append(",Image_3_Link_Haddad__c="+Image_3_Link_Haddad__c);
		sb.append(",Image_4_Link_Haddad__c="+Image_4_Link_Haddad__c);
		sb.append(",Image_1_Link_Type__c="+Image_1_Link_Type__c);
		sb.append(",Image_2_Link_Type__c="+Image_2_Link_Type__c);
		sb.append(",Image_3_Link_Type__c="+Image_3_Link_Type__c);
		sb.append(",Image_4_Link_Type__c="+Image_4_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out_4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out_5Struct implements routines.system.IPersistableRow<out_5Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String ProductCode;

				public String getProductCode () {
					return this.ProductCode;
				}
				
			    public String Product_Code_External_Id__c;

				public String getProduct_Code_External_Id__c () {
					return this.Product_Code_External_Id__c;
				}
				
			    public String Color_Code_Haddad__c;

				public String getColor_Code_Haddad__c () {
					return this.Color_Code_Haddad__c;
				}
				
			    public String Color_Haddad__r_Name;

				public String getColor_Haddad__r_Name () {
					return this.Color_Haddad__r_Name;
				}
				
			    public String Color_Haddad__r_Color_Name_External__c;

				public String getColor_Haddad__r_Color_Name_External__c () {
					return this.Color_Haddad__r_Color_Name_External__c;
				}
				
			    public String Name;

				public String getName () {
					return this.Name;
				}
				
			    public String Ref__c;

				public String getRef__c () {
					return this.Ref__c;
				}
				
			    public String Style_Haddad__r_Name;

				public String getStyle_Haddad__r_Name () {
					return this.Style_Haddad__r_Name;
				}
				
			    public String Image_1_Link_Haddad__c;

				public String getImage_1_Link_Haddad__c () {
					return this.Image_1_Link_Haddad__c;
				}
				
			    public String Image_2_Link_Haddad__c;

				public String getImage_2_Link_Haddad__c () {
					return this.Image_2_Link_Haddad__c;
				}
				
			    public String Image_3_Link_Haddad__c;

				public String getImage_3_Link_Haddad__c () {
					return this.Image_3_Link_Haddad__c;
				}
				
			    public String Image_4_Link_Haddad__c;

				public String getImage_4_Link_Haddad__c () {
					return this.Image_4_Link_Haddad__c;
				}
				
			    public String Image_5_Link_Haddad__c;

				public String getImage_5_Link_Haddad__c () {
					return this.Image_5_Link_Haddad__c;
				}
				
			    public String Image_5_Link__c;

				public String getImage_5_Link__c () {
					return this.Image_5_Link__c;
				}
				
			    public String Image_1_Link_Type__c;

				public String getImage_1_Link_Type__c () {
					return this.Image_1_Link_Type__c;
				}
				
			    public String Image_2_Link_Type__c;

				public String getImage_2_Link_Type__c () {
					return this.Image_2_Link_Type__c;
				}
				
			    public String Image_3_Link_Type__c;

				public String getImage_3_Link_Type__c () {
					return this.Image_3_Link_Type__c;
				}
				
			    public String Image_4_Link_Type__c;

				public String getImage_4_Link_Type__c () {
					return this.Image_4_Link_Type__c;
				}
				
			    public String Image_5_Link_Type__c;

				public String getImage_5_Link_Type__c () {
					return this.Image_5_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.ProductCode = readString(dis);
					
					this.Product_Code_External_Id__c = readString(dis);
					
					this.Color_Code_Haddad__c = readString(dis);
					
					this.Color_Haddad__r_Name = readString(dis);
					
					this.Color_Haddad__r_Color_Name_External__c = readString(dis);
					
					this.Name = readString(dis);
					
					this.Ref__c = readString(dis);
					
					this.Style_Haddad__r_Name = readString(dis);
					
					this.Image_1_Link_Haddad__c = readString(dis);
					
					this.Image_2_Link_Haddad__c = readString(dis);
					
					this.Image_3_Link_Haddad__c = readString(dis);
					
					this.Image_4_Link_Haddad__c = readString(dis);
					
					this.Image_5_Link_Haddad__c = readString(dis);
					
					this.Image_5_Link__c = readString(dis);
					
					this.Image_1_Link_Type__c = readString(dis);
					
					this.Image_2_Link_Type__c = readString(dis);
					
					this.Image_3_Link_Type__c = readString(dis);
					
					this.Image_4_Link_Type__c = readString(dis);
					
					this.Image_5_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.ProductCode,dos);
					
					// String
				
						writeString(this.Product_Code_External_Id__c,dos);
					
					// String
				
						writeString(this.Color_Code_Haddad__c,dos);
					
					// String
				
						writeString(this.Color_Haddad__r_Name,dos);
					
					// String
				
						writeString(this.Color_Haddad__r_Color_Name_External__c,dos);
					
					// String
				
						writeString(this.Name,dos);
					
					// String
				
						writeString(this.Ref__c,dos);
					
					// String
				
						writeString(this.Style_Haddad__r_Name,dos);
					
					// String
				
						writeString(this.Image_1_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_5_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_5_Link__c,dos);
					
					// String
				
						writeString(this.Image_1_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_5_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",ProductCode="+ProductCode);
		sb.append(",Product_Code_External_Id__c="+Product_Code_External_Id__c);
		sb.append(",Color_Code_Haddad__c="+Color_Code_Haddad__c);
		sb.append(",Color_Haddad__r_Name="+Color_Haddad__r_Name);
		sb.append(",Color_Haddad__r_Color_Name_External__c="+Color_Haddad__r_Color_Name_External__c);
		sb.append(",Name="+Name);
		sb.append(",Ref__c="+Ref__c);
		sb.append(",Style_Haddad__r_Name="+Style_Haddad__r_Name);
		sb.append(",Image_1_Link_Haddad__c="+Image_1_Link_Haddad__c);
		sb.append(",Image_2_Link_Haddad__c="+Image_2_Link_Haddad__c);
		sb.append(",Image_3_Link_Haddad__c="+Image_3_Link_Haddad__c);
		sb.append(",Image_4_Link_Haddad__c="+Image_4_Link_Haddad__c);
		sb.append(",Image_5_Link_Haddad__c="+Image_5_Link_Haddad__c);
		sb.append(",Image_5_Link__c="+Image_5_Link__c);
		sb.append(",Image_1_Link_Type__c="+Image_1_Link_Type__c);
		sb.append(",Image_2_Link_Type__c="+Image_2_Link_Type__c);
		sb.append(",Image_3_Link_Type__c="+Image_3_Link_Type__c);
		sb.append(",Image_4_Link_Type__c="+Image_4_Link_Type__c);
		sb.append(",Image_5_Link_Type__c="+Image_5_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out_5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String Id;

				public String getId () {
					return this.Id;
				}
				
			    public String ProductCode;

				public String getProductCode () {
					return this.ProductCode;
				}
				
			    public String Product_Code_External_Id__c;

				public String getProduct_Code_External_Id__c () {
					return this.Product_Code_External_Id__c;
				}
				
			    public String Color_Code_Haddad__c;

				public String getColor_Code_Haddad__c () {
					return this.Color_Code_Haddad__c;
				}
				
			    public String Color_Haddad__r_Name;

				public String getColor_Haddad__r_Name () {
					return this.Color_Haddad__r_Name;
				}
				
			    public String Color_Haddad__r_Color_Name_External__c;

				public String getColor_Haddad__r_Color_Name_External__c () {
					return this.Color_Haddad__r_Color_Name_External__c;
				}
				
			    public String Name;

				public String getName () {
					return this.Name;
				}
				
			    public String Ref__c;

				public String getRef__c () {
					return this.Ref__c;
				}
				
			    public String Style_Haddad__r_Name;

				public String getStyle_Haddad__r_Name () {
					return this.Style_Haddad__r_Name;
				}
				
			    public String Image_1_Link_Haddad__c;

				public String getImage_1_Link_Haddad__c () {
					return this.Image_1_Link_Haddad__c;
				}
				
			    public String Image_2_Link_Haddad__c;

				public String getImage_2_Link_Haddad__c () {
					return this.Image_2_Link_Haddad__c;
				}
				
			    public String Image_3_Link_Haddad__c;

				public String getImage_3_Link_Haddad__c () {
					return this.Image_3_Link_Haddad__c;
				}
				
			    public String Image_4_Link_Haddad__c;

				public String getImage_4_Link_Haddad__c () {
					return this.Image_4_Link_Haddad__c;
				}
				
			    public String Image_5_Link_Haddad__c;

				public String getImage_5_Link_Haddad__c () {
					return this.Image_5_Link_Haddad__c;
				}
				
			    public String Image_5_Link__c;

				public String getImage_5_Link__c () {
					return this.Image_5_Link__c;
				}
				
			    public String Image_1_Link_Type__c;

				public String getImage_1_Link_Type__c () {
					return this.Image_1_Link_Type__c;
				}
				
			    public String Image_2_Link_Type__c;

				public String getImage_2_Link_Type__c () {
					return this.Image_2_Link_Type__c;
				}
				
			    public String Image_3_Link_Type__c;

				public String getImage_3_Link_Type__c () {
					return this.Image_3_Link_Type__c;
				}
				
			    public String Image_4_Link_Type__c;

				public String getImage_4_Link_Type__c () {
					return this.Image_4_Link_Type__c;
				}
				
			    public String Image_5_Link_Type__c;

				public String getImage_5_Link_Type__c () {
					return this.Image_5_Link_Type__c;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.Id = readString(dis);
					
					this.ProductCode = readString(dis);
					
					this.Product_Code_External_Id__c = readString(dis);
					
					this.Color_Code_Haddad__c = readString(dis);
					
					this.Color_Haddad__r_Name = readString(dis);
					
					this.Color_Haddad__r_Color_Name_External__c = readString(dis);
					
					this.Name = readString(dis);
					
					this.Ref__c = readString(dis);
					
					this.Style_Haddad__r_Name = readString(dis);
					
					this.Image_1_Link_Haddad__c = readString(dis);
					
					this.Image_2_Link_Haddad__c = readString(dis);
					
					this.Image_3_Link_Haddad__c = readString(dis);
					
					this.Image_4_Link_Haddad__c = readString(dis);
					
					this.Image_5_Link_Haddad__c = readString(dis);
					
					this.Image_5_Link__c = readString(dis);
					
					this.Image_1_Link_Type__c = readString(dis);
					
					this.Image_2_Link_Type__c = readString(dis);
					
					this.Image_3_Link_Type__c = readString(dis);
					
					this.Image_4_Link_Type__c = readString(dis);
					
					this.Image_5_Link_Type__c = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Id,dos);
					
					// String
				
						writeString(this.ProductCode,dos);
					
					// String
				
						writeString(this.Product_Code_External_Id__c,dos);
					
					// String
				
						writeString(this.Color_Code_Haddad__c,dos);
					
					// String
				
						writeString(this.Color_Haddad__r_Name,dos);
					
					// String
				
						writeString(this.Color_Haddad__r_Color_Name_External__c,dos);
					
					// String
				
						writeString(this.Name,dos);
					
					// String
				
						writeString(this.Ref__c,dos);
					
					// String
				
						writeString(this.Style_Haddad__r_Name,dos);
					
					// String
				
						writeString(this.Image_1_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_5_Link_Haddad__c,dos);
					
					// String
				
						writeString(this.Image_5_Link__c,dos);
					
					// String
				
						writeString(this.Image_1_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_2_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_3_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_4_Link_Type__c,dos);
					
					// String
				
						writeString(this.Image_5_Link_Type__c,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id="+Id);
		sb.append(",ProductCode="+ProductCode);
		sb.append(",Product_Code_External_Id__c="+Product_Code_External_Id__c);
		sb.append(",Color_Code_Haddad__c="+Color_Code_Haddad__c);
		sb.append(",Color_Haddad__r_Name="+Color_Haddad__r_Name);
		sb.append(",Color_Haddad__r_Color_Name_External__c="+Color_Haddad__r_Color_Name_External__c);
		sb.append(",Name="+Name);
		sb.append(",Ref__c="+Ref__c);
		sb.append(",Style_Haddad__r_Name="+Style_Haddad__r_Name);
		sb.append(",Image_1_Link_Haddad__c="+Image_1_Link_Haddad__c);
		sb.append(",Image_2_Link_Haddad__c="+Image_2_Link_Haddad__c);
		sb.append(",Image_3_Link_Haddad__c="+Image_3_Link_Haddad__c);
		sb.append(",Image_4_Link_Haddad__c="+Image_4_Link_Haddad__c);
		sb.append(",Image_5_Link_Haddad__c="+Image_5_Link_Haddad__c);
		sb.append(",Image_5_Link__c="+Image_5_Link__c);
		sb.append(",Image_1_Link_Type__c="+Image_1_Link_Type__c);
		sb.append(",Image_2_Link_Type__c="+Image_2_Link_Type__c);
		sb.append(",Image_3_Link_Type__c="+Image_3_Link_Type__c);
		sb.append(",Image_4_Link_Type__c="+Image_4_Link_Type__c);
		sb.append(",Image_5_Link_Type__c="+Image_5_Link_Type__c);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tSalesforceInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tSalesforceInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();
out1Struct out1 = new out1Struct();
updateSF_Front_ImageStruct updateSF_Front_Image = new updateSF_Front_ImageStruct();
row12Struct row12 = new row12Struct();
row10Struct row10 = new row10Struct();
out_2Struct out_2 = new out_2Struct();
Update_Back_ImageStruct Update_Back_Image = new Update_Back_ImageStruct();
row13Struct row13 = new row13Struct();
row21Struct row21 = new row21Struct();
out_3Struct out_3 = new out_3Struct();
copyOfUpdate_Back_ImageStruct copyOfUpdate_Back_Image = new copyOfUpdate_Back_ImageStruct();
row17Struct row17 = new row17Struct();
row22Struct row22 = new row22Struct();
out_4Struct out_4 = new out_4Struct();
copyOfcopyOfUpdate_Back_ImageStruct copyOfcopyOfUpdate_Back_Image = new copyOfcopyOfUpdate_Back_ImageStruct();
row19Struct row19 = new row19Struct();
row23Struct row23 = new row23Struct();
out_5Struct out_5 = new out_5Struct();
copyOfcopyOfcopyOfUpdate_Back_ImageStruct copyOfcopyOfcopyOfUpdate_Back_Image = new copyOfcopyOfcopyOfUpdate_Back_ImageStruct();
row11Struct row11 = new row11Struct();
row20Struct row20 = new row20Struct();








	
	/**
	 * [tLogRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_1", false);
		start_Hash.put("tLogRow_1", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_1";

	
		int tos_count_tLogRow_1 = 0;
		

	///////////////////////
	
		final String OUTPUT_FIELD_SEPARATOR_tLogRow_1 = "|";
		java.io.PrintStream consoleOut_tLogRow_1 = null;	

 		StringBuilder strBuffer_tLogRow_1 = null;
		int nb_line_tLogRow_1 = 0;
///////////////////////    			



 



/**
 * [tLogRow_1 begin ] stop
 */



	
	/**
	 * [tSalesforceOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tSalesforceOutput_1", false);
		start_Hash.put("tSalesforceOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tSalesforceOutput_1";

	
		int tos_count_tSalesforceOutput_1 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tSalesforceOutput_1 =
        new org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputDefinition();

org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputProperties props_tSalesforceOutput_1 =
        (org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputProperties) def_tSalesforceOutput_1.createRuntimeProperties();
 		                    props_tSalesforceOutput_1.setValue("extendInsert",
 		                    true);
 		                    
 		                    props_tSalesforceOutput_1.setValue("ceaseForError",
 		                    true);
 		                    
 		                    props_tSalesforceOutput_1.setValue("ignoreNull",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_1.setValue("commitLevel",
 		                    200);
 		                    
 		                    props_tSalesforceOutput_1.setValue("logFileName",
 		                    "");
 		                    
 		                    props_tSalesforceOutput_1.setValue("outputAction",
 		                        org.talend.components.salesforce.SalesforceOutputProperties.OutputAction.UPDATE);
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_1_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"updateSF_Front_Image\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_1_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Image_1_Link_Haddad__c\",\"talend.field.dbColumnName\":\"Image_1_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_1_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_1_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_1_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_1_Link_Type__c\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tSalesforceOutput_1\",\"di.table.label\":\"updateSF_Front_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_1_1_fisrt sst_tSalesforceOutput_1_1_fisrt = new SchemaSettingTool_tSalesforceOutput_1_1_fisrt();
 		                    
 		                    props_tSalesforceOutput_1.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_1_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_1_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_1_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Image_1_Link_Haddad__c\",\"talend.field.dbColumnName\":\"Image_1_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_1_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_1_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_1_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_1_Link_Type__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorFields\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tSalesforceOutput_1\",\"di.table.label\":\"updateSF_Front_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_1_2_fisrt sst_tSalesforceOutput_1_2_fisrt = new SchemaSettingTool_tSalesforceOutput_1_2_fisrt();
 		                    
 		                    props_tSalesforceOutput_1.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_1_2_fisrt.getSchemaValue()));
 		                    
 		                    props_tSalesforceOutput_1.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_1.connection.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_1.connection.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tSalesforceOutput_1.connection.referencedComponent.setValue("componentInstanceId",
 		                    "tSalesforceConnection_1");
 		                    
 		                    props_tSalesforceOutput_1.connection.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
 		                    props_tSalesforceOutput_1.module.setValue("moduleName",
 		                    "Product2");
 		                    
 		                    props_tSalesforceOutput_1.module.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_1.module.connection.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_1.module.connection.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tSalesforceOutput_1.module.connection.referencedComponent.setValue("componentInstanceId",
 		                    "tSalesforceConnection_1");
 		                    
 		                    props_tSalesforceOutput_1.module.connection.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_1_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"updateSF_Front_Image\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_1_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Image_1_Link_Haddad__c\",\"talend.field.dbColumnName\":\"Image_1_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_1_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_1_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_1_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_1_Link_Type__c\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tSalesforceOutput_1\",\"di.table.label\":\"updateSF_Front_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_1_3_fisrt sst_tSalesforceOutput_1_3_fisrt = new SchemaSettingTool_tSalesforceOutput_1_3_fisrt();
 		                    
 		                    props_tSalesforceOutput_1.module.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_1_3_fisrt.getSchemaValue()));
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceOutput_1.connection.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceOutput_1 = props_tSalesforceOutput_1.connection.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceOutput_1 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceOutput_1 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceOutput_1 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceOutput_1.connection.referencedComponent.setReference(referencedComponentProperties_tSalesforceOutput_1);
        }
    }
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceOutput_1.module.connection.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceOutput_1 = props_tSalesforceOutput_1.module.connection.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceOutput_1 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceOutput_1 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceOutput_1 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceOutput_1.module.connection.referencedComponent.setReference(referencedComponentProperties_tSalesforceOutput_1);
        }
    }
globalMap.put("tSalesforceOutput_1_COMPONENT_RUNTIME_PROPERTIES", props_tSalesforceOutput_1);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tSalesforceOutput_1= this.getClass().getResource("/xmlMappings");
globalMap.put("tSalesforceOutput_1_MAPPINGS_URL", mappings_url_tSalesforceOutput_1);

org.talend.components.api.container.RuntimeContainer container_tSalesforceOutput_1 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tSalesforceOutput_1";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tSalesforceOutput_1 = 0;

org.talend.components.api.component.ConnectorTopology topology_tSalesforceOutput_1 = null;
topology_tSalesforceOutput_1 = org.talend.components.api.component.ConnectorTopology.INCOMING_AND_OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tSalesforceOutput_1 = def_tSalesforceOutput_1.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tSalesforceOutput_1, topology_tSalesforceOutput_1);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tSalesforceOutput_1 = def_tSalesforceOutput_1.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tSalesforceOutput_1 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tSalesforceOutput_1.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tSalesforceOutput_1 = componentRuntime_tSalesforceOutput_1.initialize(container_tSalesforceOutput_1, props_tSalesforceOutput_1);

if (initVr_tSalesforceOutput_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tSalesforceOutput_1.getMessage());
}

if(componentRuntime_tSalesforceOutput_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tSalesforceOutput_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tSalesforceOutput_1;
	compDriverInitialization_tSalesforceOutput_1.runAtDriver(container_tSalesforceOutput_1);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tSalesforceOutput_1 = null;
if(componentRuntime_tSalesforceOutput_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tSalesforceOutput_1 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tSalesforceOutput_1;
	org.talend.daikon.properties.ValidationResult vr_tSalesforceOutput_1 = sourceOrSink_tSalesforceOutput_1.validate(container_tSalesforceOutput_1);
	if (vr_tSalesforceOutput_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tSalesforceOutput_1.getMessage());
	}
}

    org.talend.components.api.component.runtime.Sink sink_tSalesforceOutput_1 =
            (org.talend.components.api.component.runtime.Sink)sourceOrSink_tSalesforceOutput_1;
    org.talend.components.api.component.runtime.WriteOperation writeOperation_tSalesforceOutput_1 = sink_tSalesforceOutput_1.createWriteOperation();
    writeOperation_tSalesforceOutput_1.initialize(container_tSalesforceOutput_1);
    org.talend.components.api.component.runtime.Writer writer_tSalesforceOutput_1 = writeOperation_tSalesforceOutput_1.createWriter(container_tSalesforceOutput_1);
    writer_tSalesforceOutput_1.open("tSalesforceOutput_1");

    resourceMap.put("writer_tSalesforceOutput_1", writer_tSalesforceOutput_1);

    org.talend.components.api.component.Connector c_tSalesforceOutput_1 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tSalesforceOutput_1.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tSalesforceOutput_1 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tSalesforceOutput_1 = props_tSalesforceOutput_1.getSchema(c_tSalesforceOutput_1, false);
    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tSalesforceOutput_1
            = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tSalesforceOutput_1);
                c_tSalesforceOutput_1 = null;
                for (org.talend.components.api.component.Connector currentConnector : props_tSalesforceOutput_1.getAvailableConnectors(null, true)) {
                    if (currentConnector.getName().equals("MAIN")) {
                        c_tSalesforceOutput_1 = currentConnector;
                    }
                }
                org.apache.avro.Schema mainSchema_tSalesforceOutput_1 = props_tSalesforceOutput_1.getSchema(c_tSalesforceOutput_1, true);
        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tSalesforceOutput_1OutMain = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(mainSchema_tSalesforceOutput_1, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tSalesforceOutput_1OutMain = null;
                java.lang.Iterable<?> outgoingMainRecordsList_tSalesforceOutput_1 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tSalesforceOutput_1 = null;


 



/**
 * [tSalesforceOutput_1 begin ] stop
 */



	
	/**
	 * [tUniqRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_3", false);
		start_Hash.put("tUniqRow_3", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_3";

	
		int tos_count_tUniqRow_3 = 0;
		

	
		class KeyStruct_tUniqRow_3 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String Id;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.Id == null) ? 0 : this.Id.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_3 other = (KeyStruct_tUniqRow_3) obj;
				
									if (this.Id == null) {
										if (other.Id != null) 
											return false;
								
									} else if (!this.Id.equals(other.Id))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_3 = 0;
int nb_duplicates_tUniqRow_3 = 0;
KeyStruct_tUniqRow_3 finder_tUniqRow_3 = new KeyStruct_tUniqRow_3();
java.util.Set<KeyStruct_tUniqRow_3> keystUniqRow_3 = new java.util.HashSet<KeyStruct_tUniqRow_3>(); 

 



/**
 * [tUniqRow_3 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";

	
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct> tHash_Lookup_row9 = null;					
					
	

row9Struct row9HashKey = new row9Struct();
row9Struct row9Default = new row9Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
updateSF_Front_ImageStruct updateSF_Front_Image_tmp = new updateSF_Front_ImageStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */







	
	/**
	 * [tLogRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_2", false);
		start_Hash.put("tLogRow_2", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_2";

	
		int tos_count_tLogRow_2 = 0;
		

	///////////////////////
	
		final String OUTPUT_FIELD_SEPARATOR_tLogRow_2 = "|";
		java.io.PrintStream consoleOut_tLogRow_2 = null;	

 		StringBuilder strBuffer_tLogRow_2 = null;
		int nb_line_tLogRow_2 = 0;
///////////////////////    			



 



/**
 * [tLogRow_2 begin ] stop
 */



	
	/**
	 * [tSalesforceOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tSalesforceOutput_2", false);
		start_Hash.put("tSalesforceOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tSalesforceOutput_2";

	
		int tos_count_tSalesforceOutput_2 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tSalesforceOutput_2 =
        new org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputDefinition();

org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputProperties props_tSalesforceOutput_2 =
        (org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputProperties) def_tSalesforceOutput_2.createRuntimeProperties();
 		                    props_tSalesforceOutput_2.setValue("extendInsert",
 		                    true);
 		                    
 		                    props_tSalesforceOutput_2.setValue("ceaseForError",
 		                    true);
 		                    
 		                    props_tSalesforceOutput_2.setValue("ignoreNull",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_2.setValue("commitLevel",
 		                    200);
 		                    
 		                    props_tSalesforceOutput_2.setValue("logFileName",
 		                    "");
 		                    
 		                    props_tSalesforceOutput_2.setValue("outputAction",
 		                        org.talend.components.salesforce.SalesforceOutputProperties.OutputAction.UPDATE);
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_2_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"Update_Back_Image\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_2_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"Image_2_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_2_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_2_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_2_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_2_Link_Type__c\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tSalesforceOutput_2\",\"di.table.label\":\"Update_Back_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_2_1_fisrt sst_tSalesforceOutput_2_1_fisrt = new SchemaSettingTool_tSalesforceOutput_2_1_fisrt();
 		                    
 		                    props_tSalesforceOutput_2.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_2_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_2_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_2_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"Image_2_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_2_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_2_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_2_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_2_Link_Type__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorFields\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tSalesforceOutput_2\",\"di.table.label\":\"Update_Back_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_2_2_fisrt sst_tSalesforceOutput_2_2_fisrt = new SchemaSettingTool_tSalesforceOutput_2_2_fisrt();
 		                    
 		                    props_tSalesforceOutput_2.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_2_2_fisrt.getSchemaValue()));
 		                    
 		                    props_tSalesforceOutput_2.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_2.connection.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_2.connection.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tSalesforceOutput_2.connection.referencedComponent.setValue("componentInstanceId",
 		                    "tSalesforceConnection_1");
 		                    
 		                    props_tSalesforceOutput_2.connection.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
 		                    props_tSalesforceOutput_2.module.setValue("moduleName",
 		                    "Product2");
 		                    
 		                    props_tSalesforceOutput_2.module.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_2.module.connection.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_2.module.connection.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tSalesforceOutput_2.module.connection.referencedComponent.setValue("componentInstanceId",
 		                    "tSalesforceConnection_1");
 		                    
 		                    props_tSalesforceOutput_2.module.connection.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_2_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"Update_Back_Image\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_2_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbColumnName\":\"Image_2_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_2_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_2_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_2_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_2_Link_Type__c\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tSalesforceOutput_2\",\"di.table.label\":\"Update_Back_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_2_3_fisrt sst_tSalesforceOutput_2_3_fisrt = new SchemaSettingTool_tSalesforceOutput_2_3_fisrt();
 		                    
 		                    props_tSalesforceOutput_2.module.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_2_3_fisrt.getSchemaValue()));
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceOutput_2.connection.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceOutput_2 = props_tSalesforceOutput_2.connection.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceOutput_2 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceOutput_2 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceOutput_2 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceOutput_2.connection.referencedComponent.setReference(referencedComponentProperties_tSalesforceOutput_2);
        }
    }
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceOutput_2.module.connection.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceOutput_2 = props_tSalesforceOutput_2.module.connection.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceOutput_2 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceOutput_2 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceOutput_2 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceOutput_2.module.connection.referencedComponent.setReference(referencedComponentProperties_tSalesforceOutput_2);
        }
    }
globalMap.put("tSalesforceOutput_2_COMPONENT_RUNTIME_PROPERTIES", props_tSalesforceOutput_2);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tSalesforceOutput_2= this.getClass().getResource("/xmlMappings");
globalMap.put("tSalesforceOutput_2_MAPPINGS_URL", mappings_url_tSalesforceOutput_2);

org.talend.components.api.container.RuntimeContainer container_tSalesforceOutput_2 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tSalesforceOutput_2";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tSalesforceOutput_2 = 0;

org.talend.components.api.component.ConnectorTopology topology_tSalesforceOutput_2 = null;
topology_tSalesforceOutput_2 = org.talend.components.api.component.ConnectorTopology.INCOMING_AND_OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tSalesforceOutput_2 = def_tSalesforceOutput_2.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tSalesforceOutput_2, topology_tSalesforceOutput_2);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tSalesforceOutput_2 = def_tSalesforceOutput_2.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tSalesforceOutput_2 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tSalesforceOutput_2.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tSalesforceOutput_2 = componentRuntime_tSalesforceOutput_2.initialize(container_tSalesforceOutput_2, props_tSalesforceOutput_2);

if (initVr_tSalesforceOutput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tSalesforceOutput_2.getMessage());
}

if(componentRuntime_tSalesforceOutput_2 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tSalesforceOutput_2 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tSalesforceOutput_2;
	compDriverInitialization_tSalesforceOutput_2.runAtDriver(container_tSalesforceOutput_2);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tSalesforceOutput_2 = null;
if(componentRuntime_tSalesforceOutput_2 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tSalesforceOutput_2 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tSalesforceOutput_2;
	org.talend.daikon.properties.ValidationResult vr_tSalesforceOutput_2 = sourceOrSink_tSalesforceOutput_2.validate(container_tSalesforceOutput_2);
	if (vr_tSalesforceOutput_2.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tSalesforceOutput_2.getMessage());
	}
}

    org.talend.components.api.component.runtime.Sink sink_tSalesforceOutput_2 =
            (org.talend.components.api.component.runtime.Sink)sourceOrSink_tSalesforceOutput_2;
    org.talend.components.api.component.runtime.WriteOperation writeOperation_tSalesforceOutput_2 = sink_tSalesforceOutput_2.createWriteOperation();
    writeOperation_tSalesforceOutput_2.initialize(container_tSalesforceOutput_2);
    org.talend.components.api.component.runtime.Writer writer_tSalesforceOutput_2 = writeOperation_tSalesforceOutput_2.createWriter(container_tSalesforceOutput_2);
    writer_tSalesforceOutput_2.open("tSalesforceOutput_2");

    resourceMap.put("writer_tSalesforceOutput_2", writer_tSalesforceOutput_2);

    org.talend.components.api.component.Connector c_tSalesforceOutput_2 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tSalesforceOutput_2.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tSalesforceOutput_2 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tSalesforceOutput_2 = props_tSalesforceOutput_2.getSchema(c_tSalesforceOutput_2, false);
    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tSalesforceOutput_2
            = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tSalesforceOutput_2);
                c_tSalesforceOutput_2 = null;
                for (org.talend.components.api.component.Connector currentConnector : props_tSalesforceOutput_2.getAvailableConnectors(null, true)) {
                    if (currentConnector.getName().equals("MAIN")) {
                        c_tSalesforceOutput_2 = currentConnector;
                    }
                }
                org.apache.avro.Schema mainSchema_tSalesforceOutput_2 = props_tSalesforceOutput_2.getSchema(c_tSalesforceOutput_2, true);
        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tSalesforceOutput_2OutMain = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(mainSchema_tSalesforceOutput_2, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tSalesforceOutput_2OutMain = null;
                java.lang.Iterable<?> outgoingMainRecordsList_tSalesforceOutput_2 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tSalesforceOutput_2 = null;


 



/**
 * [tSalesforceOutput_2 begin ] stop
 */



	
	/**
	 * [tUniqRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_4", false);
		start_Hash.put("tUniqRow_4", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_4";

	
		int tos_count_tUniqRow_4 = 0;
		

	
		class KeyStruct_tUniqRow_4 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String Id;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.Id == null) ? 0 : this.Id.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_4 other = (KeyStruct_tUniqRow_4) obj;
				
									if (this.Id == null) {
										if (other.Id != null) 
											return false;
								
									} else if (!this.Id.equals(other.Id))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_4 = 0;
int nb_duplicates_tUniqRow_4 = 0;
KeyStruct_tUniqRow_4 finder_tUniqRow_4 = new KeyStruct_tUniqRow_4();
java.util.Set<KeyStruct_tUniqRow_4> keystUniqRow_4 = new java.util.HashSet<KeyStruct_tUniqRow_4>(); 

 



/**
 * [tUniqRow_4 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";

	
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct> tHash_Lookup_row14 = null;					
					
	

row14Struct row14HashKey = new row14Struct();
row14Struct row14Default = new row14Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
Update_Back_ImageStruct Update_Back_Image_tmp = new Update_Back_ImageStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */







	
	/**
	 * [tLogRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_3", false);
		start_Hash.put("tLogRow_3", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_3";

	
		int tos_count_tLogRow_3 = 0;
		

	///////////////////////
	
		final String OUTPUT_FIELD_SEPARATOR_tLogRow_3 = "|";
		java.io.PrintStream consoleOut_tLogRow_3 = null;	

 		StringBuilder strBuffer_tLogRow_3 = null;
		int nb_line_tLogRow_3 = 0;
///////////////////////    			



 



/**
 * [tLogRow_3 begin ] stop
 */



	
	/**
	 * [tSalesforceOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tSalesforceOutput_3", false);
		start_Hash.put("tSalesforceOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tSalesforceOutput_3";

	
		int tos_count_tSalesforceOutput_3 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tSalesforceOutput_3 =
        new org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputDefinition();

org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputProperties props_tSalesforceOutput_3 =
        (org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputProperties) def_tSalesforceOutput_3.createRuntimeProperties();
 		                    props_tSalesforceOutput_3.setValue("extendInsert",
 		                    true);
 		                    
 		                    props_tSalesforceOutput_3.setValue("ceaseForError",
 		                    true);
 		                    
 		                    props_tSalesforceOutput_3.setValue("ignoreNull",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_3.setValue("commitLevel",
 		                    200);
 		                    
 		                    props_tSalesforceOutput_3.setValue("logFileName",
 		                    "");
 		                    
 		                    props_tSalesforceOutput_3.setValue("outputAction",
 		                        org.talend.components.salesforce.SalesforceOutputProperties.OutputAction.UPDATE);
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_3_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"Update_Back_Image\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_3_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Image_2_Link_Haddad__c\",\"talend.field.dbColumnName\":\"Image_3_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_3_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_3_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_3_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_3_Link_Type__c\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tSalesforceOutput_3\",\"di.table.label\":\"Update_Back_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_3_1_fisrt sst_tSalesforceOutput_3_1_fisrt = new SchemaSettingTool_tSalesforceOutput_3_1_fisrt();
 		                    
 		                    props_tSalesforceOutput_3.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_3_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_3_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_3_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Image_2_Link_Haddad__c\",\"talend.field.dbColumnName\":\"Image_3_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_3_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_3_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_3_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_3_Link_Type__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorFields\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tSalesforceOutput_3\",\"di.table.label\":\"Update_Back_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_3_2_fisrt sst_tSalesforceOutput_3_2_fisrt = new SchemaSettingTool_tSalesforceOutput_3_2_fisrt();
 		                    
 		                    props_tSalesforceOutput_3.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_3_2_fisrt.getSchemaValue()));
 		                    
 		                    props_tSalesforceOutput_3.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_3.connection.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_3.connection.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tSalesforceOutput_3.connection.referencedComponent.setValue("componentInstanceId",
 		                    "tSalesforceConnection_1");
 		                    
 		                    props_tSalesforceOutput_3.connection.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
 		                    props_tSalesforceOutput_3.module.setValue("moduleName",
 		                    "Product2");
 		                    
 		                    props_tSalesforceOutput_3.module.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_3.module.connection.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_3.module.connection.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tSalesforceOutput_3.module.connection.referencedComponent.setValue("componentInstanceId",
 		                    "tSalesforceConnection_1");
 		                    
 		                    props_tSalesforceOutput_3.module.connection.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_3_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"Update_Back_Image\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_3_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Image_2_Link_Haddad__c\",\"talend.field.dbColumnName\":\"Image_3_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_3_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_3_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_3_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_3_Link_Type__c\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tSalesforceOutput_3\",\"di.table.label\":\"Update_Back_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_3_3_fisrt sst_tSalesforceOutput_3_3_fisrt = new SchemaSettingTool_tSalesforceOutput_3_3_fisrt();
 		                    
 		                    props_tSalesforceOutput_3.module.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_3_3_fisrt.getSchemaValue()));
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceOutput_3.connection.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceOutput_3 = props_tSalesforceOutput_3.connection.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceOutput_3 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceOutput_3 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceOutput_3 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceOutput_3.connection.referencedComponent.setReference(referencedComponentProperties_tSalesforceOutput_3);
        }
    }
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceOutput_3.module.connection.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceOutput_3 = props_tSalesforceOutput_3.module.connection.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceOutput_3 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceOutput_3 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceOutput_3 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceOutput_3.module.connection.referencedComponent.setReference(referencedComponentProperties_tSalesforceOutput_3);
        }
    }
globalMap.put("tSalesforceOutput_3_COMPONENT_RUNTIME_PROPERTIES", props_tSalesforceOutput_3);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tSalesforceOutput_3= this.getClass().getResource("/xmlMappings");
globalMap.put("tSalesforceOutput_3_MAPPINGS_URL", mappings_url_tSalesforceOutput_3);

org.talend.components.api.container.RuntimeContainer container_tSalesforceOutput_3 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tSalesforceOutput_3";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tSalesforceOutput_3 = 0;

org.talend.components.api.component.ConnectorTopology topology_tSalesforceOutput_3 = null;
topology_tSalesforceOutput_3 = org.talend.components.api.component.ConnectorTopology.INCOMING_AND_OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tSalesforceOutput_3 = def_tSalesforceOutput_3.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tSalesforceOutput_3, topology_tSalesforceOutput_3);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tSalesforceOutput_3 = def_tSalesforceOutput_3.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tSalesforceOutput_3 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tSalesforceOutput_3.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tSalesforceOutput_3 = componentRuntime_tSalesforceOutput_3.initialize(container_tSalesforceOutput_3, props_tSalesforceOutput_3);

if (initVr_tSalesforceOutput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tSalesforceOutput_3.getMessage());
}

if(componentRuntime_tSalesforceOutput_3 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tSalesforceOutput_3 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tSalesforceOutput_3;
	compDriverInitialization_tSalesforceOutput_3.runAtDriver(container_tSalesforceOutput_3);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tSalesforceOutput_3 = null;
if(componentRuntime_tSalesforceOutput_3 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tSalesforceOutput_3 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tSalesforceOutput_3;
	org.talend.daikon.properties.ValidationResult vr_tSalesforceOutput_3 = sourceOrSink_tSalesforceOutput_3.validate(container_tSalesforceOutput_3);
	if (vr_tSalesforceOutput_3.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tSalesforceOutput_3.getMessage());
	}
}

    org.talend.components.api.component.runtime.Sink sink_tSalesforceOutput_3 =
            (org.talend.components.api.component.runtime.Sink)sourceOrSink_tSalesforceOutput_3;
    org.talend.components.api.component.runtime.WriteOperation writeOperation_tSalesforceOutput_3 = sink_tSalesforceOutput_3.createWriteOperation();
    writeOperation_tSalesforceOutput_3.initialize(container_tSalesforceOutput_3);
    org.talend.components.api.component.runtime.Writer writer_tSalesforceOutput_3 = writeOperation_tSalesforceOutput_3.createWriter(container_tSalesforceOutput_3);
    writer_tSalesforceOutput_3.open("tSalesforceOutput_3");

    resourceMap.put("writer_tSalesforceOutput_3", writer_tSalesforceOutput_3);

    org.talend.components.api.component.Connector c_tSalesforceOutput_3 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tSalesforceOutput_3.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tSalesforceOutput_3 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tSalesforceOutput_3 = props_tSalesforceOutput_3.getSchema(c_tSalesforceOutput_3, false);
    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tSalesforceOutput_3
            = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tSalesforceOutput_3);
                c_tSalesforceOutput_3 = null;
                for (org.talend.components.api.component.Connector currentConnector : props_tSalesforceOutput_3.getAvailableConnectors(null, true)) {
                    if (currentConnector.getName().equals("MAIN")) {
                        c_tSalesforceOutput_3 = currentConnector;
                    }
                }
                org.apache.avro.Schema mainSchema_tSalesforceOutput_3 = props_tSalesforceOutput_3.getSchema(c_tSalesforceOutput_3, true);
        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tSalesforceOutput_3OutMain = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(mainSchema_tSalesforceOutput_3, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tSalesforceOutput_3OutMain = null;
                java.lang.Iterable<?> outgoingMainRecordsList_tSalesforceOutput_3 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tSalesforceOutput_3 = null;


 



/**
 * [tSalesforceOutput_3 begin ] stop
 */



	
	/**
	 * [tUniqRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_5", false);
		start_Hash.put("tUniqRow_5", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_5";

	
		int tos_count_tUniqRow_5 = 0;
		

	
		class KeyStruct_tUniqRow_5 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String Id;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.Id == null) ? 0 : this.Id.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_5 other = (KeyStruct_tUniqRow_5) obj;
				
									if (this.Id == null) {
										if (other.Id != null) 
											return false;
								
									} else if (!this.Id.equals(other.Id))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_5 = 0;
int nb_duplicates_tUniqRow_5 = 0;
KeyStruct_tUniqRow_5 finder_tUniqRow_5 = new KeyStruct_tUniqRow_5();
java.util.Set<KeyStruct_tUniqRow_5> keystUniqRow_5 = new java.util.HashSet<KeyStruct_tUniqRow_5>(); 

 



/**
 * [tUniqRow_5 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";

	
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 = null;					
					
	

row16Struct row16HashKey = new row16Struct();
row16Struct row16Default = new row16Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfUpdate_Back_ImageStruct copyOfUpdate_Back_Image_tmp = new copyOfUpdate_Back_ImageStruct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */







	
	/**
	 * [tLogRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_4", false);
		start_Hash.put("tLogRow_4", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_4";

	
		int tos_count_tLogRow_4 = 0;
		

	///////////////////////
	
		final String OUTPUT_FIELD_SEPARATOR_tLogRow_4 = "|";
		java.io.PrintStream consoleOut_tLogRow_4 = null;	

 		StringBuilder strBuffer_tLogRow_4 = null;
		int nb_line_tLogRow_4 = 0;
///////////////////////    			



 



/**
 * [tLogRow_4 begin ] stop
 */



	
	/**
	 * [tSalesforceOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tSalesforceOutput_4", false);
		start_Hash.put("tSalesforceOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tSalesforceOutput_4";

	
		int tos_count_tSalesforceOutput_4 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tSalesforceOutput_4 =
        new org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputDefinition();

org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputProperties props_tSalesforceOutput_4 =
        (org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputProperties) def_tSalesforceOutput_4.createRuntimeProperties();
 		                    props_tSalesforceOutput_4.setValue("extendInsert",
 		                    true);
 		                    
 		                    props_tSalesforceOutput_4.setValue("ceaseForError",
 		                    true);
 		                    
 		                    props_tSalesforceOutput_4.setValue("ignoreNull",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_4.setValue("commitLevel",
 		                    200);
 		                    
 		                    props_tSalesforceOutput_4.setValue("logFileName",
 		                    "");
 		                    
 		                    props_tSalesforceOutput_4.setValue("outputAction",
 		                        org.talend.components.salesforce.SalesforceOutputProperties.OutputAction.UPDATE);
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_4_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"Update_Back_Image\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_4_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Image_2_Link_Haddad__c\",\"talend.field.dbColumnName\":\"Image_4_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_4_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_4_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_4_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_4_Link_Type__c\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tSalesforceOutput_4\",\"di.table.label\":\"Update_Back_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_4_1_fisrt sst_tSalesforceOutput_4_1_fisrt = new SchemaSettingTool_tSalesforceOutput_4_1_fisrt();
 		                    
 		                    props_tSalesforceOutput_4.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_4_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_4_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_4_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Image_2_Link_Haddad__c\",\"talend.field.dbColumnName\":\"Image_4_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_4_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_4_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_4_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_4_Link_Type__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorFields\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tSalesforceOutput_4\",\"di.table.label\":\"Update_Back_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_4_2_fisrt sst_tSalesforceOutput_4_2_fisrt = new SchemaSettingTool_tSalesforceOutput_4_2_fisrt();
 		                    
 		                    props_tSalesforceOutput_4.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_4_2_fisrt.getSchemaValue()));
 		                    
 		                    props_tSalesforceOutput_4.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_4.connection.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_4.connection.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tSalesforceOutput_4.connection.referencedComponent.setValue("componentInstanceId",
 		                    "tSalesforceConnection_1");
 		                    
 		                    props_tSalesforceOutput_4.connection.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
 		                    props_tSalesforceOutput_4.module.setValue("moduleName",
 		                    "Product2");
 		                    
 		                    props_tSalesforceOutput_4.module.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_4.module.connection.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_4.module.connection.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tSalesforceOutput_4.module.connection.referencedComponent.setValue("componentInstanceId",
 		                    "tSalesforceConnection_1");
 		                    
 		                    props_tSalesforceOutput_4.module.connection.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_4_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"Update_Back_Image\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_4_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Image_2_Link_Haddad__c\",\"talend.field.dbColumnName\":\"Image_4_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_4_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_4_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_4_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_4_Link_Type__c\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tSalesforceOutput_4\",\"di.table.label\":\"Update_Back_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_4_3_fisrt sst_tSalesforceOutput_4_3_fisrt = new SchemaSettingTool_tSalesforceOutput_4_3_fisrt();
 		                    
 		                    props_tSalesforceOutput_4.module.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_4_3_fisrt.getSchemaValue()));
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceOutput_4.connection.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceOutput_4 = props_tSalesforceOutput_4.connection.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceOutput_4 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceOutput_4 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceOutput_4 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceOutput_4.connection.referencedComponent.setReference(referencedComponentProperties_tSalesforceOutput_4);
        }
    }
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceOutput_4.module.connection.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceOutput_4 = props_tSalesforceOutput_4.module.connection.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceOutput_4 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceOutput_4 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceOutput_4 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceOutput_4.module.connection.referencedComponent.setReference(referencedComponentProperties_tSalesforceOutput_4);
        }
    }
globalMap.put("tSalesforceOutput_4_COMPONENT_RUNTIME_PROPERTIES", props_tSalesforceOutput_4);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tSalesforceOutput_4= this.getClass().getResource("/xmlMappings");
globalMap.put("tSalesforceOutput_4_MAPPINGS_URL", mappings_url_tSalesforceOutput_4);

org.talend.components.api.container.RuntimeContainer container_tSalesforceOutput_4 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tSalesforceOutput_4";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tSalesforceOutput_4 = 0;

org.talend.components.api.component.ConnectorTopology topology_tSalesforceOutput_4 = null;
topology_tSalesforceOutput_4 = org.talend.components.api.component.ConnectorTopology.INCOMING_AND_OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tSalesforceOutput_4 = def_tSalesforceOutput_4.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tSalesforceOutput_4, topology_tSalesforceOutput_4);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tSalesforceOutput_4 = def_tSalesforceOutput_4.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tSalesforceOutput_4 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tSalesforceOutput_4.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tSalesforceOutput_4 = componentRuntime_tSalesforceOutput_4.initialize(container_tSalesforceOutput_4, props_tSalesforceOutput_4);

if (initVr_tSalesforceOutput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tSalesforceOutput_4.getMessage());
}

if(componentRuntime_tSalesforceOutput_4 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tSalesforceOutput_4 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tSalesforceOutput_4;
	compDriverInitialization_tSalesforceOutput_4.runAtDriver(container_tSalesforceOutput_4);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tSalesforceOutput_4 = null;
if(componentRuntime_tSalesforceOutput_4 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tSalesforceOutput_4 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tSalesforceOutput_4;
	org.talend.daikon.properties.ValidationResult vr_tSalesforceOutput_4 = sourceOrSink_tSalesforceOutput_4.validate(container_tSalesforceOutput_4);
	if (vr_tSalesforceOutput_4.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tSalesforceOutput_4.getMessage());
	}
}

    org.talend.components.api.component.runtime.Sink sink_tSalesforceOutput_4 =
            (org.talend.components.api.component.runtime.Sink)sourceOrSink_tSalesforceOutput_4;
    org.talend.components.api.component.runtime.WriteOperation writeOperation_tSalesforceOutput_4 = sink_tSalesforceOutput_4.createWriteOperation();
    writeOperation_tSalesforceOutput_4.initialize(container_tSalesforceOutput_4);
    org.talend.components.api.component.runtime.Writer writer_tSalesforceOutput_4 = writeOperation_tSalesforceOutput_4.createWriter(container_tSalesforceOutput_4);
    writer_tSalesforceOutput_4.open("tSalesforceOutput_4");

    resourceMap.put("writer_tSalesforceOutput_4", writer_tSalesforceOutput_4);

    org.talend.components.api.component.Connector c_tSalesforceOutput_4 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tSalesforceOutput_4.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tSalesforceOutput_4 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tSalesforceOutput_4 = props_tSalesforceOutput_4.getSchema(c_tSalesforceOutput_4, false);
    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tSalesforceOutput_4
            = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tSalesforceOutput_4);
                c_tSalesforceOutput_4 = null;
                for (org.talend.components.api.component.Connector currentConnector : props_tSalesforceOutput_4.getAvailableConnectors(null, true)) {
                    if (currentConnector.getName().equals("MAIN")) {
                        c_tSalesforceOutput_4 = currentConnector;
                    }
                }
                org.apache.avro.Schema mainSchema_tSalesforceOutput_4 = props_tSalesforceOutput_4.getSchema(c_tSalesforceOutput_4, true);
        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tSalesforceOutput_4OutMain = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(mainSchema_tSalesforceOutput_4, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tSalesforceOutput_4OutMain = null;
                java.lang.Iterable<?> outgoingMainRecordsList_tSalesforceOutput_4 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tSalesforceOutput_4 = null;


 



/**
 * [tSalesforceOutput_4 begin ] stop
 */



	
	/**
	 * [tUniqRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_6", false);
		start_Hash.put("tUniqRow_6", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_6";

	
		int tos_count_tUniqRow_6 = 0;
		

	
		class KeyStruct_tUniqRow_6 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String Id;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.Id == null) ? 0 : this.Id.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_6 other = (KeyStruct_tUniqRow_6) obj;
				
									if (this.Id == null) {
										if (other.Id != null) 
											return false;
								
									} else if (!this.Id.equals(other.Id))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_6 = 0;
int nb_duplicates_tUniqRow_6 = 0;
KeyStruct_tUniqRow_6 finder_tUniqRow_6 = new KeyStruct_tUniqRow_6();
java.util.Set<KeyStruct_tUniqRow_6> keystUniqRow_6 = new java.util.HashSet<KeyStruct_tUniqRow_6>(); 

 



/**
 * [tUniqRow_6 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";

	
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct> tHash_Lookup_row18 = null;					
					
	

row18Struct row18HashKey = new row18Struct();
row18Struct row18Default = new row18Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfUpdate_Back_ImageStruct copyOfcopyOfUpdate_Back_Image_tmp = new copyOfcopyOfUpdate_Back_ImageStruct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */







	
	/**
	 * [tLogRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_5", false);
		start_Hash.put("tLogRow_5", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_5";

	
		int tos_count_tLogRow_5 = 0;
		

	///////////////////////
	
		final String OUTPUT_FIELD_SEPARATOR_tLogRow_5 = "|";
		java.io.PrintStream consoleOut_tLogRow_5 = null;	

 		StringBuilder strBuffer_tLogRow_5 = null;
		int nb_line_tLogRow_5 = 0;
///////////////////////    			



 



/**
 * [tLogRow_5 begin ] stop
 */



	
	/**
	 * [tSalesforceOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tSalesforceOutput_5", false);
		start_Hash.put("tSalesforceOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tSalesforceOutput_5";

	
		int tos_count_tSalesforceOutput_5 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tSalesforceOutput_5 =
        new org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputDefinition();

org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputProperties props_tSalesforceOutput_5 =
        (org.talend.components.salesforce.tsalesforceoutput.TSalesforceOutputProperties) def_tSalesforceOutput_5.createRuntimeProperties();
 		                    props_tSalesforceOutput_5.setValue("extendInsert",
 		                    true);
 		                    
 		                    props_tSalesforceOutput_5.setValue("ceaseForError",
 		                    true);
 		                    
 		                    props_tSalesforceOutput_5.setValue("ignoreNull",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_5.setValue("commitLevel",
 		                    200);
 		                    
 		                    props_tSalesforceOutput_5.setValue("logFileName",
 		                    "");
 		                    
 		                    props_tSalesforceOutput_5.setValue("outputAction",
 		                        org.talend.components.salesforce.SalesforceOutputProperties.OutputAction.UPDATE);
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_5_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"Update_Back_Image\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_5_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Image_2_Link_Haddad__c\",\"talend.field.dbColumnName\":\"Image_5_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_5_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_5_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_5_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_5_Link_Type__c\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tSalesforceOutput_5\",\"di.table.label\":\"Update_Back_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_5_1_fisrt sst_tSalesforceOutput_5_1_fisrt = new SchemaSettingTool_tSalesforceOutput_5_1_fisrt();
 		                    
 		                    props_tSalesforceOutput_5.schemaFlow.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_5_1_fisrt.getSchemaValue()));
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_5_2_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"rejectOutput\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_5_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Image_2_Link_Haddad__c\",\"talend.field.dbColumnName\":\"Image_5_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_5_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_5_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_5_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_5_Link_Type__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorCode\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorFields\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"errorMessage\",\"type\":\"string\",\"talend.isLocked\":\"false\",\"talend.field.generated\":\"true\",\"talend.field.length\":\"255\"}],\"di.table.name\":\"tSalesforceOutput_5\",\"di.table.label\":\"Update_Back_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_5_2_fisrt sst_tSalesforceOutput_5_2_fisrt = new SchemaSettingTool_tSalesforceOutput_5_2_fisrt();
 		                    
 		                    props_tSalesforceOutput_5.schemaReject.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_5_2_fisrt.getSchemaValue()));
 		                    
 		                    props_tSalesforceOutput_5.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_5.connection.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_5.connection.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tSalesforceOutput_5.connection.referencedComponent.setValue("componentInstanceId",
 		                    "tSalesforceConnection_1");
 		                    
 		                    props_tSalesforceOutput_5.connection.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
 		                    props_tSalesforceOutput_5.module.setValue("moduleName",
 		                    "Product2");
 		                    
 		                    props_tSalesforceOutput_5.module.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_5.module.connection.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceOutput_5.module.connection.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tSalesforceOutput_5.module.connection.referencedComponent.setValue("componentInstanceId",
 		                    "tSalesforceConnection_1");
 		                    
 		                    props_tSalesforceOutput_5.module.connection.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
 		                    class SchemaSettingTool_tSalesforceOutput_5_3_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"Update_Back_Image\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Id\",\"talend.field.dbColumnName\":\"Id\",\"di.column.talendType\":\"id_String\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"18\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Id\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_5_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"AVRO_TECHNICAL_KEY\":\"Image_2_Link_Haddad__c\",\"talend.field.dbColumnName\":\"Image_5_Link_Haddad__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"talend.field.length\":\"255\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_5_Link_Haddad__c\",\"di.column.relatedEntity\":\"\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_5_Link_Type__c\",\"type\":[\"string\",\"null\"],\"di.table.comment\":\"\",\"talend.field.dbType\":\"\",\"talend.field.dbColumnName\":\"Image_5_Link_Type__c\",\"di.column.talendType\":\"id_String\",\"di.column.isNullable\":\"true\",\"talend.field.pattern\":\"\",\"di.column.relationshipType\":\"\",\"di.table.label\":\"Image_5_Link_Type__c\",\"di.column.relatedEntity\":\"\"}],\"di.table.name\":\"tSalesforceOutput_5\",\"di.table.label\":\"Update_Back_Image\"}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceOutput_5_3_fisrt sst_tSalesforceOutput_5_3_fisrt = new SchemaSettingTool_tSalesforceOutput_5_3_fisrt();
 		                    
 		                    props_tSalesforceOutput_5.module.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceOutput_5_3_fisrt.getSchemaValue()));
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceOutput_5.connection.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceOutput_5 = props_tSalesforceOutput_5.connection.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceOutput_5 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceOutput_5 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceOutput_5 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceOutput_5.connection.referencedComponent.setReference(referencedComponentProperties_tSalesforceOutput_5);
        }
    }
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceOutput_5.module.connection.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceOutput_5 = props_tSalesforceOutput_5.module.connection.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceOutput_5 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceOutput_5 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceOutput_5 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceOutput_5.module.connection.referencedComponent.setReference(referencedComponentProperties_tSalesforceOutput_5);
        }
    }
globalMap.put("tSalesforceOutput_5_COMPONENT_RUNTIME_PROPERTIES", props_tSalesforceOutput_5);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tSalesforceOutput_5= this.getClass().getResource("/xmlMappings");
globalMap.put("tSalesforceOutput_5_MAPPINGS_URL", mappings_url_tSalesforceOutput_5);

org.talend.components.api.container.RuntimeContainer container_tSalesforceOutput_5 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tSalesforceOutput_5";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tSalesforceOutput_5 = 0;

org.talend.components.api.component.ConnectorTopology topology_tSalesforceOutput_5 = null;
topology_tSalesforceOutput_5 = org.talend.components.api.component.ConnectorTopology.INCOMING_AND_OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tSalesforceOutput_5 = def_tSalesforceOutput_5.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tSalesforceOutput_5, topology_tSalesforceOutput_5);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tSalesforceOutput_5 = def_tSalesforceOutput_5.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tSalesforceOutput_5 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tSalesforceOutput_5.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tSalesforceOutput_5 = componentRuntime_tSalesforceOutput_5.initialize(container_tSalesforceOutput_5, props_tSalesforceOutput_5);

if (initVr_tSalesforceOutput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tSalesforceOutput_5.getMessage());
}

if(componentRuntime_tSalesforceOutput_5 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tSalesforceOutput_5 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tSalesforceOutput_5;
	compDriverInitialization_tSalesforceOutput_5.runAtDriver(container_tSalesforceOutput_5);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tSalesforceOutput_5 = null;
if(componentRuntime_tSalesforceOutput_5 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tSalesforceOutput_5 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tSalesforceOutput_5;
	org.talend.daikon.properties.ValidationResult vr_tSalesforceOutput_5 = sourceOrSink_tSalesforceOutput_5.validate(container_tSalesforceOutput_5);
	if (vr_tSalesforceOutput_5.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tSalesforceOutput_5.getMessage());
	}
}

    org.talend.components.api.component.runtime.Sink sink_tSalesforceOutput_5 =
            (org.talend.components.api.component.runtime.Sink)sourceOrSink_tSalesforceOutput_5;
    org.talend.components.api.component.runtime.WriteOperation writeOperation_tSalesforceOutput_5 = sink_tSalesforceOutput_5.createWriteOperation();
    writeOperation_tSalesforceOutput_5.initialize(container_tSalesforceOutput_5);
    org.talend.components.api.component.runtime.Writer writer_tSalesforceOutput_5 = writeOperation_tSalesforceOutput_5.createWriter(container_tSalesforceOutput_5);
    writer_tSalesforceOutput_5.open("tSalesforceOutput_5");

    resourceMap.put("writer_tSalesforceOutput_5", writer_tSalesforceOutput_5);

    org.talend.components.api.component.Connector c_tSalesforceOutput_5 = null;
    for (org.talend.components.api.component.Connector currentConnector : props_tSalesforceOutput_5.getAvailableConnectors(null, false)) {
        if (currentConnector.getName().equals("MAIN")) {
            c_tSalesforceOutput_5 = currentConnector;
            break;
        }
    }
    org.apache.avro.Schema designSchema_tSalesforceOutput_5 = props_tSalesforceOutput_5.getSchema(c_tSalesforceOutput_5, false);
    org.talend.codegen.enforcer.IncomingSchemaEnforcer incomingEnforcer_tSalesforceOutput_5
            = new org.talend.codegen.enforcer.IncomingSchemaEnforcer(designSchema_tSalesforceOutput_5);
                c_tSalesforceOutput_5 = null;
                for (org.talend.components.api.component.Connector currentConnector : props_tSalesforceOutput_5.getAvailableConnectors(null, true)) {
                    if (currentConnector.getName().equals("MAIN")) {
                        c_tSalesforceOutput_5 = currentConnector;
                    }
                }
                org.apache.avro.Schema mainSchema_tSalesforceOutput_5 = props_tSalesforceOutput_5.getSchema(c_tSalesforceOutput_5, true);
        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tSalesforceOutput_5OutMain = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(mainSchema_tSalesforceOutput_5, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tSalesforceOutput_5OutMain = null;
                java.lang.Iterable<?> outgoingMainRecordsList_tSalesforceOutput_5 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tSalesforceOutput_5 = null;


 



/**
 * [tSalesforceOutput_5 begin ] stop
 */



	
	/**
	 * [tUniqRow_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_7", false);
		start_Hash.put("tUniqRow_7", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_7";

	
		int tos_count_tUniqRow_7 = 0;
		

	
		class KeyStruct_tUniqRow_7 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String Id;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.Id == null) ? 0 : this.Id.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_7 other = (KeyStruct_tUniqRow_7) obj;
				
									if (this.Id == null) {
										if (other.Id != null) 
											return false;
								
									} else if (!this.Id.equals(other.Id))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_7 = 0;
int nb_duplicates_tUniqRow_7 = 0;
KeyStruct_tUniqRow_7 finder_tUniqRow_7 = new KeyStruct_tUniqRow_7();
java.util.Set<KeyStruct_tUniqRow_7> keystUniqRow_7 = new java.util.HashSet<KeyStruct_tUniqRow_7>(); 

 



/**
 * [tUniqRow_7 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";

	
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row24Struct> tHash_Lookup_row24 = null;					
					
	

row24Struct row24HashKey = new row24Struct();
row24Struct row24Default = new row24Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
	String var1;
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfUpdate_Back_ImageStruct copyOfcopyOfcopyOfUpdate_Back_Image_tmp = new copyOfcopyOfcopyOfUpdate_Back_ImageStruct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";

	
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
out1Struct out1_tmp = new out1Struct();
out_2Struct out_2_tmp = new out_2Struct();
out_3Struct out_3_tmp = new out_3Struct();
out_4Struct out_4_tmp = new out_4Struct();
out_5Struct out_5_tmp = new out_5Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tSalesforceInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tSalesforceInput_1", false);
		start_Hash.put("tSalesforceInput_1", System.currentTimeMillis());
		
	
	currentComponent="tSalesforceInput_1";

	
		int tos_count_tSalesforceInput_1 = 0;
		


org.talend.components.api.component.ComponentDefinition def_tSalesforceInput_1 =
        new org.talend.components.salesforce.tsalesforceinput.TSalesforceInputDefinition();

org.talend.components.salesforce.tsalesforceinput.TSalesforceInputProperties props_tSalesforceInput_1 =
        (org.talend.components.salesforce.tsalesforceinput.TSalesforceInputProperties) def_tSalesforceInput_1.createRuntimeProperties();
 		                    props_tSalesforceInput_1.setValue("queryMode",
 		                        org.talend.components.salesforce.tsalesforceinput.TSalesforceInputProperties.QueryMode.Query);
 		                    
 		                    props_tSalesforceInput_1.setValue("manualQuery",
 		                    true);
 		                    
 		                    props_tSalesforceInput_1.setValue("query",
 		                    "SELECT  Id ,ProductCode,Product_Code_External_Id__c, Color_Code_Haddad__c,Color_Haddad__r.Name, Color_Haddad__r.Color_N"
+"ame_External__c, Name, Ref__c, Style_Haddad__r.Name, Image_1_Link_Haddad__c, Image_2_Link_Haddad__c, Image_3_Link_Haddad"
+"__c, Image_4_Link_Haddad__c, Image_5_Link_Haddad__c, Image_5_Link__c, Image_1_Link_Type__c, Image_2_Link_Type__c, Image_"
+"3_Link_Type__c,  Image_4_Link_Type__c, Image_5_Link_Type__c  FROM Product2  where Name in (" + (String)globalMap.get("All_StyleColor") + ") and  Color_Haddad__c  != '' and Style_Haddad__c != ''");
 		                    
 		                    props_tSalesforceInput_1.setValue("includeDeleted",
 		                    false);
 		                    
 		                    props_tSalesforceInput_1.setValue("batchSize",
 		                    250);
 		                    
 		                    props_tSalesforceInput_1.setValue("normalizeDelimiter",
 		                    ";");
 		                    
 		                    props_tSalesforceInput_1.setValue("columnNameDelimiter",
 		                    "_");
 		                    
 		                    props_tSalesforceInput_1.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceInput_1.connection.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceInput_1.connection.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tSalesforceInput_1.connection.referencedComponent.setValue("componentInstanceId",
 		                    "tSalesforceConnection_1");
 		                    
 		                    props_tSalesforceInput_1.connection.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
 		                    props_tSalesforceInput_1.module.setValue("moduleName",
 		                    "");
 		                    
 		                    props_tSalesforceInput_1.module.connection.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceInput_1.module.connection.proxy.userPassword.setValue("useAuth",
 		                    false);
 		                    
 		                    props_tSalesforceInput_1.module.connection.referencedComponent.setValue("referenceType",
 		                        org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE);
 		                    
 		                    props_tSalesforceInput_1.module.connection.referencedComponent.setValue("componentInstanceId",
 		                    "tSalesforceConnection_1");
 		                    
 		                    props_tSalesforceInput_1.module.connection.referencedComponent.setValue("referenceDefinitionName",
 		                    "tSalesforceConnection");
 		                    
 		                    class SchemaSettingTool_tSalesforceInput_1_1_fisrt {
 		                    		
 		                    		String getSchemaValue() {
 		                    				
 		                    						StringBuilder s = new StringBuilder();
                    						
     		                    						a("{\"type\":\"record\",",s);
     		                    						
     		                    						a("\"name\":\"GuessedSchema\",\"fields\":[{",s);
     		                    						
     		                    						a("\"name\":\"Id\",\"type\":\"string\",\"talend.field.length\":\"18\"},{",s);
     		                    						
     		                    						a("\"name\":\"ProductCode\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Product_Code_External_Id__c\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Color_Code_Haddad__c\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"1300\"},{",s);
     		                    						
     		                    						a("\"name\":\"Color_Haddad__r_Name\",\"type\":\"string\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Color_Haddad__r_Color_Name_External__c\",\"type\":\"string\"},{",s);
     		                    						
     		                    						a("\"name\":\"Name\",\"type\":\"string\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Ref__c\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"1300\"},{",s);
     		                    						
     		                    						a("\"name\":\"Style_Haddad__r_Name\",\"type\":\"string\",\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_1_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_2_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_3_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_4_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_5_Link_Haddad__c\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_5_Link__c\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_1_Link_Type__c\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_2_Link_Type__c\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_3_Link_Type__c\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_4_Link_Type__c\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"255\"},{",s);
     		                    						
     		                    						a("\"name\":\"Image_5_Link_Type__c\",\"type\":[\"string\",\"null\"],\"talend.field.length\":\"255\"}]}",s);
     		                    						
     		                    				return s.toString();
     		                    		
 		                    		}
 		                    		
 		                    		void a(String part, StringBuilder strB) {
 		                    				strB.append(part);
 		                    		}
 		                    		
 		                    }
 		                    
 		                    SchemaSettingTool_tSalesforceInput_1_1_fisrt sst_tSalesforceInput_1_1_fisrt = new SchemaSettingTool_tSalesforceInput_1_1_fisrt();
 		                    
 		                    props_tSalesforceInput_1.module.main.setValue("schema",
 		                        new org.apache.avro.Schema.Parser().parse(sst_tSalesforceInput_1_1_fisrt.getSchemaValue()));
 		                    
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceInput_1.connection.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceInput_1 = props_tSalesforceInput_1.connection.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceInput_1 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceInput_1 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceInput_1 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceInput_1.connection.referencedComponent.setReference(referencedComponentProperties_tSalesforceInput_1);
        }
    }
    if (org.talend.components.api.properties.ComponentReferenceProperties.ReferenceType.COMPONENT_INSTANCE == props_tSalesforceInput_1.module.connection.referencedComponent.referenceType.getValue()) {
        final String referencedComponentInstanceId_tSalesforceInput_1 = props_tSalesforceInput_1.module.connection.referencedComponent.componentInstanceId.getStringValue();
        if (referencedComponentInstanceId_tSalesforceInput_1 != null) {
            org.talend.daikon.properties.Properties referencedComponentProperties_tSalesforceInput_1 = (org.talend.daikon.properties.Properties) globalMap.get(
                referencedComponentInstanceId_tSalesforceInput_1 + "_COMPONENT_RUNTIME_PROPERTIES");
            props_tSalesforceInput_1.module.connection.referencedComponent.setReference(referencedComponentProperties_tSalesforceInput_1);
        }
    }
globalMap.put("tSalesforceInput_1_COMPONENT_RUNTIME_PROPERTIES", props_tSalesforceInput_1);
globalMap.putIfAbsent("TALEND_PRODUCT_VERSION", "7.3");
globalMap.put("TALEND_COMPONENTS_VERSION", "0.28.0.SNAPSHOT");
java.net.URL mappings_url_tSalesforceInput_1= this.getClass().getResource("/xmlMappings");
globalMap.put("tSalesforceInput_1_MAPPINGS_URL", mappings_url_tSalesforceInput_1);

org.talend.components.api.container.RuntimeContainer container_tSalesforceInput_1 = new org.talend.components.api.container.RuntimeContainer() {
    public Object getComponentData(String componentId, String key) {
        return globalMap.get(componentId + "_" + key);
    }

    public void setComponentData(String componentId, String key, Object data) {
        globalMap.put(componentId + "_" + key, data);
    }

    public String getCurrentComponentId() {
        return "tSalesforceInput_1";
    }

    public Object getGlobalData(String key) {
    	return globalMap.get(key);
    }
};

int nb_line_tSalesforceInput_1 = 0;

org.talend.components.api.component.ConnectorTopology topology_tSalesforceInput_1 = null;
topology_tSalesforceInput_1 = org.talend.components.api.component.ConnectorTopology.OUTGOING;

org.talend.daikon.runtime.RuntimeInfo runtime_info_tSalesforceInput_1 = def_tSalesforceInput_1.getRuntimeInfo(
    org.talend.components.api.component.runtime.ExecutionEngine.DI, props_tSalesforceInput_1, topology_tSalesforceInput_1);
java.util.Set<org.talend.components.api.component.ConnectorTopology> supported_connector_topologies_tSalesforceInput_1 = def_tSalesforceInput_1.getSupportedConnectorTopologies();

org.talend.components.api.component.runtime.RuntimableRuntime componentRuntime_tSalesforceInput_1 = (org.talend.components.api.component.runtime.RuntimableRuntime)(Class.forName(runtime_info_tSalesforceInput_1.getRuntimeClassName()).newInstance());
org.talend.daikon.properties.ValidationResult initVr_tSalesforceInput_1 = componentRuntime_tSalesforceInput_1.initialize(container_tSalesforceInput_1, props_tSalesforceInput_1);

if (initVr_tSalesforceInput_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    throw new RuntimeException(initVr_tSalesforceInput_1.getMessage());
}

if(componentRuntime_tSalesforceInput_1 instanceof org.talend.components.api.component.runtime.ComponentDriverInitialization) {
	org.talend.components.api.component.runtime.ComponentDriverInitialization compDriverInitialization_tSalesforceInput_1 = (org.talend.components.api.component.runtime.ComponentDriverInitialization)componentRuntime_tSalesforceInput_1;
	compDriverInitialization_tSalesforceInput_1.runAtDriver(container_tSalesforceInput_1);
}

org.talend.components.api.component.runtime.SourceOrSink sourceOrSink_tSalesforceInput_1 = null;
if(componentRuntime_tSalesforceInput_1 instanceof org.talend.components.api.component.runtime.SourceOrSink) {
	sourceOrSink_tSalesforceInput_1 = (org.talend.components.api.component.runtime.SourceOrSink)componentRuntime_tSalesforceInput_1;
	org.talend.daikon.properties.ValidationResult vr_tSalesforceInput_1 = sourceOrSink_tSalesforceInput_1.validate(container_tSalesforceInput_1);
	if (vr_tSalesforceInput_1.getStatus() == org.talend.daikon.properties.ValidationResult.Result.ERROR ) {
    	throw new RuntimeException(vr_tSalesforceInput_1.getMessage());
	}
}

    org.talend.components.api.component.runtime.Source source_tSalesforceInput_1 =
            (org.talend.components.api.component.runtime.Source)sourceOrSink_tSalesforceInput_1;
    org.talend.components.api.component.runtime.Reader reader_tSalesforceInput_1 =
            source_tSalesforceInput_1.createReader(container_tSalesforceInput_1);
	reader_tSalesforceInput_1 = new org.talend.codegen.flowvariables.runtime.FlowVariablesReader(reader_tSalesforceInput_1, container_tSalesforceInput_1);

        boolean multi_output_is_allowed_tSalesforceInput_1 = false;
        org.talend.components.api.component.Connector c_tSalesforceInput_1 = null;
        for (org.talend.components.api.component.Connector currentConnector : props_tSalesforceInput_1.getAvailableConnectors(null, true)) {
            if (currentConnector.getName().equals("MAIN")) {
                c_tSalesforceInput_1 = currentConnector;
            }

            if (currentConnector.getName().equals("REJECT")) {//it's better to move the code to javajet
                multi_output_is_allowed_tSalesforceInput_1 = true;
            }
        }
        org.apache.avro.Schema schema_tSalesforceInput_1 = props_tSalesforceInput_1.getSchema(c_tSalesforceInput_1, true);

        org.talend.codegen.enforcer.OutgoingSchemaEnforcer outgoingEnforcer_tSalesforceInput_1 = org.talend.codegen.enforcer.EnforcerCreator.createOutgoingEnforcer(schema_tSalesforceInput_1, false);

        // Create a reusable factory that converts the output of the reader to an IndexedRecord.
        org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord> factory_tSalesforceInput_1 = null;

    // Iterate through the incoming data.
    boolean available_tSalesforceInput_1 = reader_tSalesforceInput_1.start();

    resourceMap.put("reader_tSalesforceInput_1", reader_tSalesforceInput_1);

    for (; available_tSalesforceInput_1; available_tSalesforceInput_1 = reader_tSalesforceInput_1.advance()) {
    	nb_line_tSalesforceInput_1++;

    	
        if (multi_output_is_allowed_tSalesforceInput_1) {
                row8 = null;

        }

        try {
            Object data_tSalesforceInput_1 = reader_tSalesforceInput_1.getCurrent();

                if(multi_output_is_allowed_tSalesforceInput_1) {
                    row8 = new row8Struct();
                }

        // Construct the factory once when the first data arrives.
        if (factory_tSalesforceInput_1 == null) {
            factory_tSalesforceInput_1 = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(data_tSalesforceInput_1.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tSalesforceInput_1.setWrapped(factory_tSalesforceInput_1.convertToAvro(data_tSalesforceInput_1));
                Object columnValue_0_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(0);
                        row8.Id = (String) (columnValue_0_tSalesforceInput_1);
                Object columnValue_1_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(1);
                        row8.ProductCode = (String) (columnValue_1_tSalesforceInput_1);
                Object columnValue_2_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(2);
                        row8.Product_Code_External_Id__c = (String) (columnValue_2_tSalesforceInput_1);
                Object columnValue_3_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(3);
                        row8.Color_Code_Haddad__c = (String) (columnValue_3_tSalesforceInput_1);
                Object columnValue_4_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(4);
                        row8.Color_Haddad__r_Name = (String) (columnValue_4_tSalesforceInput_1);
                Object columnValue_5_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(5);
                        row8.Color_Haddad__r_Color_Name_External__c = (String) (columnValue_5_tSalesforceInput_1);
                Object columnValue_6_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(6);
                        row8.Name = (String) (columnValue_6_tSalesforceInput_1);
                Object columnValue_7_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(7);
                        row8.Ref__c = (String) (columnValue_7_tSalesforceInput_1);
                Object columnValue_8_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(8);
                        row8.Style_Haddad__r_Name = (String) (columnValue_8_tSalesforceInput_1);
                Object columnValue_9_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(9);
                        row8.Image_1_Link_Haddad__c = (String) (columnValue_9_tSalesforceInput_1);
                Object columnValue_10_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(10);
                        row8.Image_2_Link_Haddad__c = (String) (columnValue_10_tSalesforceInput_1);
                Object columnValue_11_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(11);
                        row8.Image_3_Link_Haddad__c = (String) (columnValue_11_tSalesforceInput_1);
                Object columnValue_12_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(12);
                        row8.Image_4_Link_Haddad__c = (String) (columnValue_12_tSalesforceInput_1);
                Object columnValue_13_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(13);
                        row8.Image_5_Link_Haddad__c = (String) (columnValue_13_tSalesforceInput_1);
                Object columnValue_14_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(14);
                        row8.Image_5_Link__c = (String) (columnValue_14_tSalesforceInput_1);
                Object columnValue_15_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(15);
                        row8.Image_1_Link_Type__c = (String) (columnValue_15_tSalesforceInput_1);
                Object columnValue_16_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(16);
                        row8.Image_2_Link_Type__c = (String) (columnValue_16_tSalesforceInput_1);
                Object columnValue_17_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(17);
                        row8.Image_3_Link_Type__c = (String) (columnValue_17_tSalesforceInput_1);
                Object columnValue_18_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(18);
                        row8.Image_4_Link_Type__c = (String) (columnValue_18_tSalesforceInput_1);
                Object columnValue_19_tSalesforceInput_1 = outgoingEnforcer_tSalesforceInput_1.get(19);
                        row8.Image_5_Link_Type__c = (String) (columnValue_19_tSalesforceInput_1);
        } catch (org.talend.components.api.exception.DataRejectException e_tSalesforceInput_1) {
        	java.util.Map<String,Object> info_tSalesforceInput_1 = e_tSalesforceInput_1.getRejectInfo();
            	//TODO use a method instead of getting method by the special key "error/errorMessage"
            	Object errorMessage_tSalesforceInput_1 = null;
            	if(info_tSalesforceInput_1.containsKey("error")){
            		errorMessage_tSalesforceInput_1 = info_tSalesforceInput_1.get("error");
        		}else if(info_tSalesforceInput_1.containsKey("errorMessage")){
            		errorMessage_tSalesforceInput_1 = info_tSalesforceInput_1.get("errorMessage");
        		}else{
        			errorMessage_tSalesforceInput_1 = "Rejected but error message missing";
        		}
        		errorMessage_tSalesforceInput_1 = "Row "+ nb_line_tSalesforceInput_1 + ": "+errorMessage_tSalesforceInput_1;
    			System.err.println(errorMessage_tSalesforceInput_1);
            	// If the record is reject, the main line record should put NULL
            	row8 = null;
    }
                java.lang.Iterable<?> outgoingMainRecordsList_tSalesforceInput_1 = new java.util.ArrayList<Object>();
                java.util.Iterator outgoingMainRecordsIt_tSalesforceInput_1 = null;


 



/**
 * [tSalesforceInput_1 begin ] stop
 */
	
	/**
	 * [tSalesforceInput_1 main ] start
	 */

	

	
	
	currentComponent="tSalesforceInput_1";

	


 


	tos_count_tSalesforceInput_1++;

/**
 * [tSalesforceInput_1 main ] stop
 */
	
	/**
	 * [tSalesforceInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSalesforceInput_1";

	


 



/**
 * [tSalesforceInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_3 = false;
		  boolean mainRowRejected_tMap_3 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

out1 = null;
out_2 = null;
out_3 = null;
out_4 = null;
out_5 = null;


// # Output table : 'out1'
out1_tmp.Id = row8.Id ;
out1_tmp.ProductCode = row8.ProductCode ;
out1_tmp.Product_Code_External_Id__c = row8.Product_Code_External_Id__c ;
out1_tmp.Color_Code_Haddad__c = row8.Color_Code_Haddad__c ;
out1_tmp.Color_Haddad__r_Name = row8.Color_Haddad__r_Name ;
out1_tmp.Color_Haddad__r_Color_Name_External__c = row8.Color_Haddad__r_Color_Name_External__c ;
out1_tmp.Name = row8.Name ;
out1_tmp.Ref__c = row8.Ref__c ;
out1_tmp.Style_Haddad__r_Name = StringHandling.DOWNCASE(row8.Style_Haddad__r_Name ) ;
out1_tmp.Image_1_Link_Haddad__c = row8.Image_1_Link_Haddad__c ;
out1_tmp.Image_2_Link_Haddad__c = row8.Image_2_Link_Haddad__c ;
out1_tmp.Image_3_Link_Haddad__c = row8.Image_3_Link_Haddad__c ;
out1_tmp.Image_4_Link_Haddad__c = row8.Image_4_Link_Haddad__c ;
out1_tmp.Image_1_Link_Type__c = row8.Image_1_Link_Type__c;
out1_tmp.Image_2_Link_Type__c = row8.Image_2_Link_Type__c ;
out1_tmp.Image_3_Link_Type__c = row8.Image_3_Link_Type__c ;
out1_tmp.Image_4_Link_Type__c = row8.Image_4_Link_Type__c ;
out1 = out1_tmp;

// # Output table : 'out_2'
out_2_tmp.Id = row8.Id ;
out_2_tmp.ProductCode = row8.ProductCode ;
out_2_tmp.Product_Code_External_Id__c = row8.Product_Code_External_Id__c ;
out_2_tmp.Color_Code_Haddad__c = row8.Color_Code_Haddad__c ;
out_2_tmp.Color_Haddad__r_Name = row8.Color_Haddad__r_Name ;
out_2_tmp.Color_Haddad__r_Color_Name_External__c = row8.Color_Haddad__r_Color_Name_External__c ;
out_2_tmp.Name = row8.Name ;
out_2_tmp.Ref__c = row8.Ref__c ;
out_2_tmp.Style_Haddad__r_Name = StringHandling.DOWNCASE(row8.Style_Haddad__r_Name );
out_2_tmp.Image_1_Link_Haddad__c = row8.Image_1_Link_Haddad__c ;
out_2_tmp.Image_2_Link_Haddad__c = row8.Image_2_Link_Haddad__c ;
out_2_tmp.Image_3_Link_Haddad__c = row8.Image_3_Link_Haddad__c ;
out_2_tmp.Image_4_Link_Haddad__c = row8.Image_4_Link_Haddad__c ;
out_2_tmp.Image_1_Link_Type__c = row8.Image_1_Link_Type__c ;
out_2_tmp.Image_2_Link_Type__c = row8.Image_2_Link_Type__c ;
out_2_tmp.Image_3_Link_Type__c = row8.Image_3_Link_Type__c ;
out_2_tmp.Image_4_Link_Type__c = row8.Image_4_Link_Type__c ;
out_2 = out_2_tmp;

// # Output table : 'out_3'
out_3_tmp.Id = row8.Id ;
out_3_tmp.ProductCode = row8.ProductCode ;
out_3_tmp.Product_Code_External_Id__c = row8.Product_Code_External_Id__c ;
out_3_tmp.Color_Code_Haddad__c = row8.Color_Code_Haddad__c ;
out_3_tmp.Color_Haddad__r_Name = row8.Color_Haddad__r_Name ;
out_3_tmp.Color_Haddad__r_Color_Name_External__c = row8.Color_Haddad__r_Color_Name_External__c ;
out_3_tmp.Name = row8.Name ;
out_3_tmp.Ref__c = row8.Ref__c ;
out_3_tmp.Style_Haddad__r_Name = StringHandling.DOWNCASE(row8.Style_Haddad__r_Name );
out_3_tmp.Image_1_Link_Haddad__c = row8.Image_1_Link_Haddad__c ;
out_3_tmp.Image_2_Link_Haddad__c = row8.Image_2_Link_Haddad__c ;
out_3_tmp.Image_3_Link_Haddad__c = row8.Image_3_Link_Haddad__c ;
out_3_tmp.Image_4_Link_Haddad__c = row8.Image_4_Link_Haddad__c ;
out_3_tmp.Image_1_Link_Type__c = row8.Image_1_Link_Type__c ;
out_3_tmp.Image_2_Link_Type__c = row8.Image_2_Link_Type__c ;
out_3_tmp.Image_3_Link_Type__c = row8.Image_3_Link_Type__c ;
out_3_tmp.Image_4_Link_Type__c = row8.Image_4_Link_Type__c ;
out_3 = out_3_tmp;

// # Output table : 'out_4'
out_4_tmp.Id = row8.Id ;
out_4_tmp.ProductCode = row8.ProductCode ;
out_4_tmp.Product_Code_External_Id__c = row8.Product_Code_External_Id__c ;
out_4_tmp.Color_Code_Haddad__c = row8.Color_Code_Haddad__c ;
out_4_tmp.Color_Haddad__r_Name = row8.Color_Haddad__r_Name ;
out_4_tmp.Color_Haddad__r_Color_Name_External__c = row8.Color_Haddad__r_Color_Name_External__c ;
out_4_tmp.Name = row8.Name ;
out_4_tmp.Ref__c = row8.Ref__c ;
out_4_tmp.Style_Haddad__r_Name = StringHandling.DOWNCASE(row8.Style_Haddad__r_Name );
out_4_tmp.Image_1_Link_Haddad__c = row8.Image_1_Link_Haddad__c ;
out_4_tmp.Image_2_Link_Haddad__c = row8.Image_2_Link_Haddad__c ;
out_4_tmp.Image_3_Link_Haddad__c = row8.Image_3_Link_Haddad__c ;
out_4_tmp.Image_4_Link_Haddad__c = row8.Image_4_Link_Haddad__c ;
out_4_tmp.Image_1_Link_Type__c = row8.Image_1_Link_Type__c ;
out_4_tmp.Image_2_Link_Type__c = row8.Image_2_Link_Type__c ;
out_4_tmp.Image_3_Link_Type__c = row8.Image_3_Link_Type__c ;
out_4_tmp.Image_4_Link_Type__c = row8.Image_4_Link_Type__c ;
out_4 = out_4_tmp;

// # Output table : 'out_5'
out_5_tmp.Id = row8.Id  ;
out_5_tmp.ProductCode = row8.ProductCode  ;
out_5_tmp.Product_Code_External_Id__c = row8.Product_Code_External_Id__c  ;
out_5_tmp.Color_Code_Haddad__c = row8.Color_Code_Haddad__c  ;
out_5_tmp.Color_Haddad__r_Name = row8.Color_Haddad__r_Name  ;
out_5_tmp.Color_Haddad__r_Color_Name_External__c = row8.Color_Haddad__r_Color_Name_External__c  ;
out_5_tmp.Name = row8.Name  ;
out_5_tmp.Ref__c = row8.Ref__c  ;
out_5_tmp.Style_Haddad__r_Name = StringHandling.DOWNCASE(row8.Style_Haddad__r_Name );
out_5_tmp.Image_1_Link_Haddad__c = row8.Image_1_Link_Haddad__c  ;
out_5_tmp.Image_2_Link_Haddad__c = row8.Image_2_Link_Haddad__c  ;
out_5_tmp.Image_3_Link_Haddad__c = row8.Image_3_Link_Haddad__c  ;
out_5_tmp.Image_4_Link_Haddad__c = row8.Image_4_Link_Haddad__c  ;
out_5_tmp.Image_5_Link_Haddad__c = row8.Image_5_Link_Haddad__c ;
out_5_tmp.Image_5_Link__c = row8.Image_5_Link__c ;
out_5_tmp.Image_1_Link_Type__c = row8.Image_1_Link_Type__c  ;
out_5_tmp.Image_2_Link_Type__c = row8.Image_2_Link_Type__c  ;
out_5_tmp.Image_3_Link_Type__c = row8.Image_3_Link_Type__c  ;
out_5_tmp.Image_4_Link_Type__c = row8.Image_4_Link_Type__c  ;
out_5_tmp.Image_5_Link_Type__c = row8.Image_5_Link_Type__c ;
out_5 = out_5_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "out1"
if(out1 != null) { 



	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_4 = false;
		  boolean mainRowRejected_tMap_4 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row9" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow9 = false;
       		  	    	
       		  	    	
 							row9Struct row9ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		row9HashKey.property_Color_Code = out1.Color_Code_Haddad__c ;
                        		    		
                        		    		row9HashKey.property_Style_Code = out1.Style_Haddad__r_Name ;
                        		    		

								
		                        	row9HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
								
									tFileInputDelimited_2Process(globalMap);
									
									
										tHash_Lookup_row9 = 
										(org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct>) 
										((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct>) 
											globalMap.get( "tHash_Lookup_row9" ));
									
								
									tHash_Lookup_row9.initGet();
								
									tHash_Lookup_row9.lookup( row9HashKey );
										
									
									
										
								

	  							

 								
								  
								  if(!tHash_Lookup_row9.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_4 = true;
	  								
						
									
	
		  								forceLooprow9 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow9 = true;
			           		  	} // G 21
                    		  	
                    		

							row9Struct row9 = null;
                    		  	 
							

								while ((tHash_Lookup_row9 != null && tHash_Lookup_row9.hasNext()) || forceLooprow9) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row9'
									
                    		  	 
							   
                    		  	 
	       		  	    	row9Struct fromLookup_row9 = null;
							row9 = row9Default;
										 
							
								
								if(!forceLooprow9) { // G 46
								
							
								 
							
								
								fromLookup_row9 = tHash_Lookup_row9.next();

							

							if(fromLookup_row9 != null) {
								row9 = fromLookup_row9;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow9 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

updateSF_Front_Image = null;

if(!rejectedInnerJoin_tMap_4 ) {

// # Output table : 'updateSF_Front_Image'
// # Filter conditions 
if( 

"Front".equals(row9.property_Photo_View) ==  true

 ) {
updateSF_Front_Image_tmp.Id = out1.Id ;
updateSF_Front_Image_tmp.Image_1_Link_Haddad__c = row9.webimage ;
updateSF_Front_Image_tmp.Image_1_Link_Type__c = "Main Image";
updateSF_Front_Image = updateSF_Front_Image_tmp;
} // closing filter/reject
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "updateSF_Front_Image"
if(updateSF_Front_Image != null) { 



	
	/**
	 * [tUniqRow_3 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";

	
row12 = null;			
if(updateSF_Front_Image.Id == null){
	finder_tUniqRow_3.Id = null;
}else{
	finder_tUniqRow_3.Id = updateSF_Front_Image.Id.toLowerCase();
}	
finder_tUniqRow_3.hashCodeDirty = true;
if (!keystUniqRow_3.contains(finder_tUniqRow_3)) {
		KeyStruct_tUniqRow_3 new_tUniqRow_3 = new KeyStruct_tUniqRow_3();

		
if(updateSF_Front_Image.Id == null){
	new_tUniqRow_3.Id = null;
}else{
	new_tUniqRow_3.Id = updateSF_Front_Image.Id.toLowerCase();
}
		
		keystUniqRow_3.add(new_tUniqRow_3);if(row12 == null){ 
	
	row12 = new row12Struct();
}row12.Id = updateSF_Front_Image.Id;			row12.Image_1_Link_Haddad__c = updateSF_Front_Image.Image_1_Link_Haddad__c;			row12.Image_1_Link_Type__c = updateSF_Front_Image.Image_1_Link_Type__c;					
		nb_uniques_tUniqRow_3++;
	} else {
	  nb_duplicates_tUniqRow_3++;
	}

 


	tos_count_tUniqRow_3++;

/**
 * [tUniqRow_3 main ] stop
 */
	
	/**
	 * [tUniqRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";

	

 



/**
 * [tUniqRow_3 process_data_begin ] stop
 */
// Start of branch "row12"
if(row12 != null) { 



	
	/**
	 * [tSalesforceOutput_1 main ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_1";

	

        incomingEnforcer_tSalesforceOutput_1.createNewRecord();
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_1.getRuntimeSchema().getField("Id") != null){
                    incomingEnforcer_tSalesforceOutput_1.put("Id", row12.Id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_1.getRuntimeSchema().getField("Image_1_Link_Haddad__c") != null){
                    incomingEnforcer_tSalesforceOutput_1.put("Image_1_Link_Haddad__c", row12.Image_1_Link_Haddad__c);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_1.getRuntimeSchema().getField("Image_1_Link_Type__c") != null){
                    incomingEnforcer_tSalesforceOutput_1.put("Image_1_Link_Type__c", row12.Image_1_Link_Type__c);
                }
        org.apache.avro.generic.IndexedRecord data_tSalesforceOutput_1 = incomingEnforcer_tSalesforceOutput_1.getCurrentRecord();
        

        writer_tSalesforceOutput_1.write(data_tSalesforceOutput_1);
        
        nb_line_tSalesforceOutput_1++;
        	if(!(writer_tSalesforceOutput_1 instanceof org.talend.components.api.component.runtime.WriterWithFeedback)) {
          		// For no feedback writer,just pass the input record to the output
          		if (data_tSalesforceOutput_1!=null) {
          			outgoingMainRecordsList_tSalesforceOutput_1 = java.util.Arrays.asList(data_tSalesforceOutput_1);
              	}
                }

 


	tos_count_tSalesforceOutput_1++;

/**
 * [tSalesforceOutput_1 main ] stop
 */
	
	/**
	 * [tSalesforceOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_1";

	

                row10 = null;
            	if (writer_tSalesforceOutput_1 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
					org.talend.components.api.component.runtime.WriterWithFeedback writerWithFeedbackMain_tSalesforceOutput_1 = (org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_1;
					writerWithFeedbackMain_tSalesforceOutput_1 = new org.talend.codegen.flowvariables.runtime.FlowVariablesWriter(writerWithFeedbackMain_tSalesforceOutput_1, container_tSalesforceOutput_1);
					java.lang.Iterable<?> outgoingRecs_tSalesforceOutput_1 = writerWithFeedbackMain_tSalesforceOutput_1.getSuccessfulWrites();
                    java.util.Iterator outgoingMainRecords_tSalesforceOutput_1 = outgoingRecs_tSalesforceOutput_1.iterator();
                    Object outgoingMain_tSalesforceOutput_1 = null;
                    if (outgoingMainRecords_tSalesforceOutput_1.hasNext()) {
                    	outgoingMainRecordsList_tSalesforceOutput_1 = outgoingRecs_tSalesforceOutput_1;
                    }
              	}
            	outgoingMainRecordsIt_tSalesforceOutput_1 = outgoingMainRecordsList_tSalesforceOutput_1.iterator();
            	while(outgoingMainRecordsIt_tSalesforceOutput_1.hasNext()) { //Start of data processing while block
            		
            			if(outgoingMainRecordsIt_tSalesforceOutput_1.hasNext()) {
            				row10 = new row10Struct();
            				Object outgoingMain_tSalesforceOutput_1 = outgoingMainRecordsIt_tSalesforceOutput_1.next();
            				
        // Construct the factory once when the first data arrives.
        if (factory_tSalesforceOutput_1OutMain == null) {
            factory_tSalesforceOutput_1OutMain = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(outgoingMain_tSalesforceOutput_1.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tSalesforceOutput_1OutMain.setWrapped(factory_tSalesforceOutput_1OutMain.convertToAvro(outgoingMain_tSalesforceOutput_1));
                Object columnValue_0_tSalesforceOutput_1OutMain = outgoingEnforcer_tSalesforceOutput_1OutMain.get(0);
                        row10.Id = (String) (columnValue_0_tSalesforceOutput_1OutMain);
                Object columnValue_1_tSalesforceOutput_1OutMain = outgoingEnforcer_tSalesforceOutput_1OutMain.get(1);
                        row10.Image_1_Link_Haddad__c = (String) (columnValue_1_tSalesforceOutput_1OutMain);
                Object columnValue_2_tSalesforceOutput_1OutMain = outgoingEnforcer_tSalesforceOutput_1OutMain.get(2);
                        row10.Image_1_Link_Type__c = (String) (columnValue_2_tSalesforceOutput_1OutMain);
            			} else {
            				row10 = null;
            			}
            		

 



/**
 * [tSalesforceOutput_1 process_data_begin ] stop
 */
// Start of branch "row10"
if(row10 != null) { 



	
	/**
	 * [tLogRow_1 main ] start
	 */

	

	
	
	currentComponent="tLogRow_1";

	
///////////////////////		
						



				strBuffer_tLogRow_1 = new StringBuilder();




   				
	    		if(row10.Id != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row10.Id)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row10.Image_1_Link_Haddad__c != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row10.Image_1_Link_Haddad__c)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row10.Image_1_Link_Type__c != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row10.Image_1_Link_Type__c)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_1 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_1);
                    }
                    consoleOut_tLogRow_1.println(strBuffer_tLogRow_1.toString());
                    consoleOut_tLogRow_1.flush();
                    nb_line_tLogRow_1++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_1++;

/**
 * [tLogRow_1 main ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_1";

	

 



/**
 * [tLogRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";

	

 



/**
 * [tLogRow_1 process_data_end ] stop
 */

} // End of branch "row10"




	
	/**
	 * [tSalesforceOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_1";

	
	} //end of data processing while block
	if (writer_tSalesforceOutput_1 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
    	((org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_1).cleanWrites();
    }
	

 



/**
 * [tSalesforceOutput_1 process_data_end ] stop
 */

} // End of branch "row12"




	
	/**
	 * [tUniqRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";

	

 



/**
 * [tUniqRow_3 process_data_end ] stop
 */

} // End of branch "updateSF_Front_Image"



	
		} // close loop of lookup 'row9' // G_TM_M_043
	
	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 process_data_end ] stop
 */

} // End of branch "out1"




// Start of branch "out_2"
if(out_2 != null) { 



	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_5 = false;
		  boolean mainRowRejected_tMap_5 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row14" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow14 = false;
       		  	    	
       		  	    	
 							row14Struct row14ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		row14HashKey.property_Color_Code = out_2.Color_Code_Haddad__c ;
                        		    		
                        		    		row14HashKey.property_Style_Code = out_2.Style_Haddad__r_Name ;
                        		    		

								
		                        	row14HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
								
									tFileInputDelimited_3Process(globalMap);
									
									
										tHash_Lookup_row14 = 
										(org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct>) 
										((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct>) 
											globalMap.get( "tHash_Lookup_row14" ));
									
								
									tHash_Lookup_row14.initGet();
								
									tHash_Lookup_row14.lookup( row14HashKey );
										
									
									
										
								

	  							

 								
								  
								  if(!tHash_Lookup_row14.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_5 = true;
	  								
						
									
	
		  								forceLooprow14 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow14 = true;
			           		  	} // G 21
                    		  	
                    		

							row14Struct row14 = null;
                    		  	 
							

								while ((tHash_Lookup_row14 != null && tHash_Lookup_row14.hasNext()) || forceLooprow14) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row14'
									
                    		  	 
							   
                    		  	 
	       		  	    	row14Struct fromLookup_row14 = null;
							row14 = row14Default;
										 
							
								
								if(!forceLooprow14) { // G 46
								
							
								 
							
								
								fromLookup_row14 = tHash_Lookup_row14.next();

							

							if(fromLookup_row14 != null) {
								row14 = fromLookup_row14;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow14 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

Update_Back_Image = null;

if(!rejectedInnerJoin_tMap_5 ) {

// # Output table : 'Update_Back_Image'
// # Filter conditions 
if( 

"Back".equals(row14.property_Photo_View) ==  true

 ) {
Update_Back_Image_tmp.Id = out_2.Id ;
Update_Back_Image_tmp.Image_2_Link_Haddad__c = row14.webimage ;
Update_Back_Image_tmp.Image_2_Link_Type__c = "Back";
Update_Back_Image = Update_Back_Image_tmp;
} // closing filter/reject
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "Update_Back_Image"
if(Update_Back_Image != null) { 



	
	/**
	 * [tUniqRow_4 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";

	
row13 = null;			
if(Update_Back_Image.Id == null){
	finder_tUniqRow_4.Id = null;
}else{
	finder_tUniqRow_4.Id = Update_Back_Image.Id.toLowerCase();
}	
finder_tUniqRow_4.hashCodeDirty = true;
if (!keystUniqRow_4.contains(finder_tUniqRow_4)) {
		KeyStruct_tUniqRow_4 new_tUniqRow_4 = new KeyStruct_tUniqRow_4();

		
if(Update_Back_Image.Id == null){
	new_tUniqRow_4.Id = null;
}else{
	new_tUniqRow_4.Id = Update_Back_Image.Id.toLowerCase();
}
		
		keystUniqRow_4.add(new_tUniqRow_4);if(row13 == null){ 
	
	row13 = new row13Struct();
}row13.Id = Update_Back_Image.Id;			row13.Image_2_Link_Haddad__c = Update_Back_Image.Image_2_Link_Haddad__c;			row13.Image_2_Link_Type__c = Update_Back_Image.Image_2_Link_Type__c;					
		nb_uniques_tUniqRow_4++;
	} else {
	  nb_duplicates_tUniqRow_4++;
	}

 


	tos_count_tUniqRow_4++;

/**
 * [tUniqRow_4 main ] stop
 */
	
	/**
	 * [tUniqRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";

	

 



/**
 * [tUniqRow_4 process_data_begin ] stop
 */
// Start of branch "row13"
if(row13 != null) { 



	
	/**
	 * [tSalesforceOutput_2 main ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_2";

	

        incomingEnforcer_tSalesforceOutput_2.createNewRecord();
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_2.getRuntimeSchema().getField("Id") != null){
                    incomingEnforcer_tSalesforceOutput_2.put("Id", row13.Id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_2.getRuntimeSchema().getField("Image_2_Link_Haddad__c") != null){
                    incomingEnforcer_tSalesforceOutput_2.put("Image_2_Link_Haddad__c", row13.Image_2_Link_Haddad__c);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_2.getRuntimeSchema().getField("Image_2_Link_Type__c") != null){
                    incomingEnforcer_tSalesforceOutput_2.put("Image_2_Link_Type__c", row13.Image_2_Link_Type__c);
                }
        org.apache.avro.generic.IndexedRecord data_tSalesforceOutput_2 = incomingEnforcer_tSalesforceOutput_2.getCurrentRecord();
        

        writer_tSalesforceOutput_2.write(data_tSalesforceOutput_2);
        
        nb_line_tSalesforceOutput_2++;
        	if(!(writer_tSalesforceOutput_2 instanceof org.talend.components.api.component.runtime.WriterWithFeedback)) {
          		// For no feedback writer,just pass the input record to the output
          		if (data_tSalesforceOutput_2!=null) {
          			outgoingMainRecordsList_tSalesforceOutput_2 = java.util.Arrays.asList(data_tSalesforceOutput_2);
              	}
                }

 


	tos_count_tSalesforceOutput_2++;

/**
 * [tSalesforceOutput_2 main ] stop
 */
	
	/**
	 * [tSalesforceOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_2";

	

                row21 = null;
            	if (writer_tSalesforceOutput_2 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
					org.talend.components.api.component.runtime.WriterWithFeedback writerWithFeedbackMain_tSalesforceOutput_2 = (org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_2;
					writerWithFeedbackMain_tSalesforceOutput_2 = new org.talend.codegen.flowvariables.runtime.FlowVariablesWriter(writerWithFeedbackMain_tSalesforceOutput_2, container_tSalesforceOutput_2);
					java.lang.Iterable<?> outgoingRecs_tSalesforceOutput_2 = writerWithFeedbackMain_tSalesforceOutput_2.getSuccessfulWrites();
                    java.util.Iterator outgoingMainRecords_tSalesforceOutput_2 = outgoingRecs_tSalesforceOutput_2.iterator();
                    Object outgoingMain_tSalesforceOutput_2 = null;
                    if (outgoingMainRecords_tSalesforceOutput_2.hasNext()) {
                    	outgoingMainRecordsList_tSalesforceOutput_2 = outgoingRecs_tSalesforceOutput_2;
                    }
              	}
            	outgoingMainRecordsIt_tSalesforceOutput_2 = outgoingMainRecordsList_tSalesforceOutput_2.iterator();
            	while(outgoingMainRecordsIt_tSalesforceOutput_2.hasNext()) { //Start of data processing while block
            		
            			if(outgoingMainRecordsIt_tSalesforceOutput_2.hasNext()) {
            				row21 = new row21Struct();
            				Object outgoingMain_tSalesforceOutput_2 = outgoingMainRecordsIt_tSalesforceOutput_2.next();
            				
        // Construct the factory once when the first data arrives.
        if (factory_tSalesforceOutput_2OutMain == null) {
            factory_tSalesforceOutput_2OutMain = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(outgoingMain_tSalesforceOutput_2.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tSalesforceOutput_2OutMain.setWrapped(factory_tSalesforceOutput_2OutMain.convertToAvro(outgoingMain_tSalesforceOutput_2));
                Object columnValue_0_tSalesforceOutput_2OutMain = outgoingEnforcer_tSalesforceOutput_2OutMain.get(0);
                        row21.Id = (String) (columnValue_0_tSalesforceOutput_2OutMain);
                Object columnValue_1_tSalesforceOutput_2OutMain = outgoingEnforcer_tSalesforceOutput_2OutMain.get(1);
                        row21.Image_2_Link_Haddad__c = (String) (columnValue_1_tSalesforceOutput_2OutMain);
                Object columnValue_2_tSalesforceOutput_2OutMain = outgoingEnforcer_tSalesforceOutput_2OutMain.get(2);
                        row21.Image_2_Link_Type__c = (String) (columnValue_2_tSalesforceOutput_2OutMain);
            			} else {
            				row21 = null;
            			}
            		

 



/**
 * [tSalesforceOutput_2 process_data_begin ] stop
 */
// Start of branch "row21"
if(row21 != null) { 



	
	/**
	 * [tLogRow_2 main ] start
	 */

	

	
	
	currentComponent="tLogRow_2";

	
///////////////////////		
						



				strBuffer_tLogRow_2 = new StringBuilder();




   				
	    		if(row21.Id != null) { //              
                    							
       
				strBuffer_tLogRow_2.append(
				                String.valueOf(row21.Id)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_2.append("|");
    			


   				
	    		if(row21.Image_2_Link_Haddad__c != null) { //              
                    							
       
				strBuffer_tLogRow_2.append(
				                String.valueOf(row21.Image_2_Link_Haddad__c)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_2.append("|");
    			


   				
	    		if(row21.Image_2_Link_Type__c != null) { //              
                    							
       
				strBuffer_tLogRow_2.append(
				                String.valueOf(row21.Image_2_Link_Type__c)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_2 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_2 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_2);
                    }
                    consoleOut_tLogRow_2.println(strBuffer_tLogRow_2.toString());
                    consoleOut_tLogRow_2.flush();
                    nb_line_tLogRow_2++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_2++;

/**
 * [tLogRow_2 main ] stop
 */
	
	/**
	 * [tLogRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_2";

	

 



/**
 * [tLogRow_2 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_2";

	

 



/**
 * [tLogRow_2 process_data_end ] stop
 */

} // End of branch "row21"




	
	/**
	 * [tSalesforceOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_2";

	
	} //end of data processing while block
	if (writer_tSalesforceOutput_2 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
    	((org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_2).cleanWrites();
    }
	

 



/**
 * [tSalesforceOutput_2 process_data_end ] stop
 */

} // End of branch "row13"




	
	/**
	 * [tUniqRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";

	

 



/**
 * [tUniqRow_4 process_data_end ] stop
 */

} // End of branch "Update_Back_Image"



	
		} // close loop of lookup 'row14' // G_TM_M_043
	
	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 process_data_end ] stop
 */

} // End of branch "out_2"




// Start of branch "out_3"
if(out_3 != null) { 



	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_6 = false;
		  boolean mainRowRejected_tMap_6 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row16" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow16 = false;
       		  	    	
       		  	    	
 							row16Struct row16ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_6) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_6 = false;
								
                        		    		row16HashKey.property_Color_Code = out_3.Color_Code_Haddad__c ;
                        		    		
                        		    		row16HashKey.property_Style_Code = out_3.Style_Haddad__r_Name ;
                        		    		

								
		                        	row16HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
								
									tFileInputDelimited_4Process(globalMap);
									
									
										tHash_Lookup_row16 = 
										(org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
										((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
											globalMap.get( "tHash_Lookup_row16" ));
									
								
									tHash_Lookup_row16.initGet();
								
									tHash_Lookup_row16.lookup( row16HashKey );
										
									
									
										
								

	  							

 								
								  
								  if(!tHash_Lookup_row16.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_6 = true;
	  								
						
									
	
		  								forceLooprow16 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow16 = true;
			           		  	} // G 21
                    		  	
                    		

							row16Struct row16 = null;
                    		  	 
							

								while ((tHash_Lookup_row16 != null && tHash_Lookup_row16.hasNext()) || forceLooprow16) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row16'
									
                    		  	 
							   
                    		  	 
	       		  	    	row16Struct fromLookup_row16 = null;
							row16 = row16Default;
										 
							
								
								if(!forceLooprow16) { // G 46
								
							
								 
							
								
								fromLookup_row16 = tHash_Lookup_row16.next();

							

							if(fromLookup_row16 != null) {
								row16 = fromLookup_row16;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow16 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

copyOfUpdate_Back_Image = null;

if(!rejectedInnerJoin_tMap_6 ) {

// # Output table : 'copyOfUpdate_Back_Image'
// # Filter conditions 
if( 

"Right".equals(row16.property_Photo_View) ==  true ||
"Model".equals(row16.property_Photo_View) ==  true ||
"Left".equals(row16.property_Photo_View) ==  true ||
("Details".equals(row16.property_Photo_View) ==  true && row16.name.indexOf("_D1") >= 0)

 ) {
copyOfUpdate_Back_Image_tmp.Id = out_3.Id ;
copyOfUpdate_Back_Image_tmp.Image_3_Link_Haddad__c = row16.webimage ;
copyOfUpdate_Back_Image_tmp.Image_3_Link_Type__c = ( row16.name.indexOf("_F_R") >= 0 || row16.name.indexOf("_C_R") >= 0 || row16.name.indexOf("_M_R") >= 0 || row16.name.indexOf("_Q_R") >= 0 ? "Right" : 
	( row16.name.indexOf("_M_F") >= 0 ? "Model" : 
		( row16.name.indexOf("_F_L") >= 0 || row16.name.indexOf("_C_L") >= 0  || row16.name.indexOf("_M_L") >= 0  || row16.name.indexOf("_Q_L") >= 0 ? "Left" : 		
			"Detail"
		)
	)
) ;
copyOfUpdate_Back_Image = copyOfUpdate_Back_Image_tmp;
} // closing filter/reject
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "copyOfUpdate_Back_Image"
if(copyOfUpdate_Back_Image != null) { 



	
	/**
	 * [tUniqRow_5 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_5";

	
row17 = null;			
if(copyOfUpdate_Back_Image.Id == null){
	finder_tUniqRow_5.Id = null;
}else{
	finder_tUniqRow_5.Id = copyOfUpdate_Back_Image.Id.toLowerCase();
}	
finder_tUniqRow_5.hashCodeDirty = true;
if (!keystUniqRow_5.contains(finder_tUniqRow_5)) {
		KeyStruct_tUniqRow_5 new_tUniqRow_5 = new KeyStruct_tUniqRow_5();

		
if(copyOfUpdate_Back_Image.Id == null){
	new_tUniqRow_5.Id = null;
}else{
	new_tUniqRow_5.Id = copyOfUpdate_Back_Image.Id.toLowerCase();
}
		
		keystUniqRow_5.add(new_tUniqRow_5);if(row17 == null){ 
	
	row17 = new row17Struct();
}row17.Id = copyOfUpdate_Back_Image.Id;			row17.Image_3_Link_Haddad__c = copyOfUpdate_Back_Image.Image_3_Link_Haddad__c;			row17.Image_3_Link_Type__c = copyOfUpdate_Back_Image.Image_3_Link_Type__c;					
		nb_uniques_tUniqRow_5++;
	} else {
	  nb_duplicates_tUniqRow_5++;
	}

 


	tos_count_tUniqRow_5++;

/**
 * [tUniqRow_5 main ] stop
 */
	
	/**
	 * [tUniqRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_5";

	

 



/**
 * [tUniqRow_5 process_data_begin ] stop
 */
// Start of branch "row17"
if(row17 != null) { 



	
	/**
	 * [tSalesforceOutput_3 main ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_3";

	

        incomingEnforcer_tSalesforceOutput_3.createNewRecord();
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_3.getRuntimeSchema().getField("Id") != null){
                    incomingEnforcer_tSalesforceOutput_3.put("Id", row17.Id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_3.getRuntimeSchema().getField("Image_3_Link_Haddad__c") != null){
                    incomingEnforcer_tSalesforceOutput_3.put("Image_3_Link_Haddad__c", row17.Image_3_Link_Haddad__c);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_3.getRuntimeSchema().getField("Image_3_Link_Type__c") != null){
                    incomingEnforcer_tSalesforceOutput_3.put("Image_3_Link_Type__c", row17.Image_3_Link_Type__c);
                }
        org.apache.avro.generic.IndexedRecord data_tSalesforceOutput_3 = incomingEnforcer_tSalesforceOutput_3.getCurrentRecord();
        

        writer_tSalesforceOutput_3.write(data_tSalesforceOutput_3);
        
        nb_line_tSalesforceOutput_3++;
        	if(!(writer_tSalesforceOutput_3 instanceof org.talend.components.api.component.runtime.WriterWithFeedback)) {
          		// For no feedback writer,just pass the input record to the output
          		if (data_tSalesforceOutput_3!=null) {
          			outgoingMainRecordsList_tSalesforceOutput_3 = java.util.Arrays.asList(data_tSalesforceOutput_3);
              	}
                }

 


	tos_count_tSalesforceOutput_3++;

/**
 * [tSalesforceOutput_3 main ] stop
 */
	
	/**
	 * [tSalesforceOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_3";

	

                row22 = null;
            	if (writer_tSalesforceOutput_3 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
					org.talend.components.api.component.runtime.WriterWithFeedback writerWithFeedbackMain_tSalesforceOutput_3 = (org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_3;
					writerWithFeedbackMain_tSalesforceOutput_3 = new org.talend.codegen.flowvariables.runtime.FlowVariablesWriter(writerWithFeedbackMain_tSalesforceOutput_3, container_tSalesforceOutput_3);
					java.lang.Iterable<?> outgoingRecs_tSalesforceOutput_3 = writerWithFeedbackMain_tSalesforceOutput_3.getSuccessfulWrites();
                    java.util.Iterator outgoingMainRecords_tSalesforceOutput_3 = outgoingRecs_tSalesforceOutput_3.iterator();
                    Object outgoingMain_tSalesforceOutput_3 = null;
                    if (outgoingMainRecords_tSalesforceOutput_3.hasNext()) {
                    	outgoingMainRecordsList_tSalesforceOutput_3 = outgoingRecs_tSalesforceOutput_3;
                    }
              	}
            	outgoingMainRecordsIt_tSalesforceOutput_3 = outgoingMainRecordsList_tSalesforceOutput_3.iterator();
            	while(outgoingMainRecordsIt_tSalesforceOutput_3.hasNext()) { //Start of data processing while block
            		
            			if(outgoingMainRecordsIt_tSalesforceOutput_3.hasNext()) {
            				row22 = new row22Struct();
            				Object outgoingMain_tSalesforceOutput_3 = outgoingMainRecordsIt_tSalesforceOutput_3.next();
            				
        // Construct the factory once when the first data arrives.
        if (factory_tSalesforceOutput_3OutMain == null) {
            factory_tSalesforceOutput_3OutMain = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(outgoingMain_tSalesforceOutput_3.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tSalesforceOutput_3OutMain.setWrapped(factory_tSalesforceOutput_3OutMain.convertToAvro(outgoingMain_tSalesforceOutput_3));
                Object columnValue_0_tSalesforceOutput_3OutMain = outgoingEnforcer_tSalesforceOutput_3OutMain.get(0);
                        row22.Id = (String) (columnValue_0_tSalesforceOutput_3OutMain);
                Object columnValue_1_tSalesforceOutput_3OutMain = outgoingEnforcer_tSalesforceOutput_3OutMain.get(1);
                        row22.Image_3_Link_Haddad__c = (String) (columnValue_1_tSalesforceOutput_3OutMain);
                Object columnValue_2_tSalesforceOutput_3OutMain = outgoingEnforcer_tSalesforceOutput_3OutMain.get(2);
                        row22.Image_3_Link_Type__c = (String) (columnValue_2_tSalesforceOutput_3OutMain);
            			} else {
            				row22 = null;
            			}
            		

 



/**
 * [tSalesforceOutput_3 process_data_begin ] stop
 */
// Start of branch "row22"
if(row22 != null) { 



	
	/**
	 * [tLogRow_3 main ] start
	 */

	

	
	
	currentComponent="tLogRow_3";

	
///////////////////////		
						



				strBuffer_tLogRow_3 = new StringBuilder();




   				
	    		if(row22.Id != null) { //              
                    							
       
				strBuffer_tLogRow_3.append(
				                String.valueOf(row22.Id)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_3.append("|");
    			


   				
	    		if(row22.Image_3_Link_Haddad__c != null) { //              
                    							
       
				strBuffer_tLogRow_3.append(
				                String.valueOf(row22.Image_3_Link_Haddad__c)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_3.append("|");
    			


   				
	    		if(row22.Image_3_Link_Type__c != null) { //              
                    							
       
				strBuffer_tLogRow_3.append(
				                String.valueOf(row22.Image_3_Link_Type__c)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_3 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_3 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_3);
                    }
                    consoleOut_tLogRow_3.println(strBuffer_tLogRow_3.toString());
                    consoleOut_tLogRow_3.flush();
                    nb_line_tLogRow_3++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_3++;

/**
 * [tLogRow_3 main ] stop
 */
	
	/**
	 * [tLogRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_3";

	

 



/**
 * [tLogRow_3 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_3";

	

 



/**
 * [tLogRow_3 process_data_end ] stop
 */

} // End of branch "row22"




	
	/**
	 * [tSalesforceOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_3";

	
	} //end of data processing while block
	if (writer_tSalesforceOutput_3 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
    	((org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_3).cleanWrites();
    }
	

 



/**
 * [tSalesforceOutput_3 process_data_end ] stop
 */

} // End of branch "row17"




	
	/**
	 * [tUniqRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_5";

	

 



/**
 * [tUniqRow_5 process_data_end ] stop
 */

} // End of branch "copyOfUpdate_Back_Image"



	
		} // close loop of lookup 'row16' // G_TM_M_043
	
	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 process_data_end ] stop
 */

} // End of branch "out_3"




// Start of branch "out_4"
if(out_4 != null) { 



	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";

	

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_7 = false;
		  boolean mainRowRejected_tMap_7 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row18" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow18 = false;
       		  	    	
       		  	    	
 							row18Struct row18ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		row18HashKey.property_Color_Code = out_4.Color_Code_Haddad__c ;
                        		    		
                        		    		row18HashKey.property_Style_Code = out_4.Style_Haddad__r_Name ;
                        		    		

								
		                        	row18HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
								
									tFileInputDelimited_5Process(globalMap);
									
									
										tHash_Lookup_row18 = 
										(org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct>) 
										((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct>) 
											globalMap.get( "tHash_Lookup_row18" ));
									
								
									tHash_Lookup_row18.initGet();
								
									tHash_Lookup_row18.lookup( row18HashKey );
										
									
									
										
								

	  							

 								
								  
								  if(!tHash_Lookup_row18.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_7 = true;
	  								
						
									
	
		  								forceLooprow18 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow18 = true;
			           		  	} // G 21
                    		  	
                    		

							row18Struct row18 = null;
                    		  	 
							

								while ((tHash_Lookup_row18 != null && tHash_Lookup_row18.hasNext()) || forceLooprow18) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row18'
									
                    		  	 
							   
                    		  	 
	       		  	    	row18Struct fromLookup_row18 = null;
							row18 = row18Default;
										 
							
								
								if(!forceLooprow18) { // G 46
								
							
								 
							
								
								fromLookup_row18 = tHash_Lookup_row18.next();

							

							if(fromLookup_row18 != null) {
								row18 = fromLookup_row18;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow18 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfUpdate_Back_Image = null;

if(!rejectedInnerJoin_tMap_7 ) {

// # Output table : 'copyOfcopyOfUpdate_Back_Image'
// # Filter conditions 
if( 

"Left".equals(row18.property_Photo_View) ==  true ||
("Details".equals(row18.property_Photo_View) ==  true && row18.name.indexOf("_D2") >= 0)

 ) {
copyOfcopyOfUpdate_Back_Image_tmp.Id = out_4.Id ;
copyOfcopyOfUpdate_Back_Image_tmp.Image_4_Link_Haddad__c = row18.webimage  ;
copyOfcopyOfUpdate_Back_Image_tmp.Image_4_Link_Type__c = ( row18.name.indexOf("_F_L") >= 0 || row18.name.indexOf("_C_L") >= 0 || row18.name.indexOf("_M_L") >= 0 || row18.name.indexOf("_Q_L") >= 0   ? "Left" : 		
			"Detail"
	) ;
copyOfcopyOfUpdate_Back_Image = copyOfcopyOfUpdate_Back_Image_tmp;
} // closing filter/reject
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";

	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfUpdate_Back_Image"
if(copyOfcopyOfUpdate_Back_Image != null) { 



	
	/**
	 * [tUniqRow_6 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_6";

	
row19 = null;			
if(copyOfcopyOfUpdate_Back_Image.Id == null){
	finder_tUniqRow_6.Id = null;
}else{
	finder_tUniqRow_6.Id = copyOfcopyOfUpdate_Back_Image.Id.toLowerCase();
}	
finder_tUniqRow_6.hashCodeDirty = true;
if (!keystUniqRow_6.contains(finder_tUniqRow_6)) {
		KeyStruct_tUniqRow_6 new_tUniqRow_6 = new KeyStruct_tUniqRow_6();

		
if(copyOfcopyOfUpdate_Back_Image.Id == null){
	new_tUniqRow_6.Id = null;
}else{
	new_tUniqRow_6.Id = copyOfcopyOfUpdate_Back_Image.Id.toLowerCase();
}
		
		keystUniqRow_6.add(new_tUniqRow_6);if(row19 == null){ 
	
	row19 = new row19Struct();
}row19.Id = copyOfcopyOfUpdate_Back_Image.Id;			row19.Image_4_Link_Haddad__c = copyOfcopyOfUpdate_Back_Image.Image_4_Link_Haddad__c;			row19.Image_4_Link_Type__c = copyOfcopyOfUpdate_Back_Image.Image_4_Link_Type__c;					
		nb_uniques_tUniqRow_6++;
	} else {
	  nb_duplicates_tUniqRow_6++;
	}

 


	tos_count_tUniqRow_6++;

/**
 * [tUniqRow_6 main ] stop
 */
	
	/**
	 * [tUniqRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_6";

	

 



/**
 * [tUniqRow_6 process_data_begin ] stop
 */
// Start of branch "row19"
if(row19 != null) { 



	
	/**
	 * [tSalesforceOutput_4 main ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_4";

	

        incomingEnforcer_tSalesforceOutput_4.createNewRecord();
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_4.getRuntimeSchema().getField("Id") != null){
                    incomingEnforcer_tSalesforceOutput_4.put("Id", row19.Id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_4.getRuntimeSchema().getField("Image_4_Link_Haddad__c") != null){
                    incomingEnforcer_tSalesforceOutput_4.put("Image_4_Link_Haddad__c", row19.Image_4_Link_Haddad__c);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_4.getRuntimeSchema().getField("Image_4_Link_Type__c") != null){
                    incomingEnforcer_tSalesforceOutput_4.put("Image_4_Link_Type__c", row19.Image_4_Link_Type__c);
                }
        org.apache.avro.generic.IndexedRecord data_tSalesforceOutput_4 = incomingEnforcer_tSalesforceOutput_4.getCurrentRecord();
        

        writer_tSalesforceOutput_4.write(data_tSalesforceOutput_4);
        
        nb_line_tSalesforceOutput_4++;
        	if(!(writer_tSalesforceOutput_4 instanceof org.talend.components.api.component.runtime.WriterWithFeedback)) {
          		// For no feedback writer,just pass the input record to the output
          		if (data_tSalesforceOutput_4!=null) {
          			outgoingMainRecordsList_tSalesforceOutput_4 = java.util.Arrays.asList(data_tSalesforceOutput_4);
              	}
                }

 


	tos_count_tSalesforceOutput_4++;

/**
 * [tSalesforceOutput_4 main ] stop
 */
	
	/**
	 * [tSalesforceOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_4";

	

                row23 = null;
            	if (writer_tSalesforceOutput_4 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
					org.talend.components.api.component.runtime.WriterWithFeedback writerWithFeedbackMain_tSalesforceOutput_4 = (org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_4;
					writerWithFeedbackMain_tSalesforceOutput_4 = new org.talend.codegen.flowvariables.runtime.FlowVariablesWriter(writerWithFeedbackMain_tSalesforceOutput_4, container_tSalesforceOutput_4);
					java.lang.Iterable<?> outgoingRecs_tSalesforceOutput_4 = writerWithFeedbackMain_tSalesforceOutput_4.getSuccessfulWrites();
                    java.util.Iterator outgoingMainRecords_tSalesforceOutput_4 = outgoingRecs_tSalesforceOutput_4.iterator();
                    Object outgoingMain_tSalesforceOutput_4 = null;
                    if (outgoingMainRecords_tSalesforceOutput_4.hasNext()) {
                    	outgoingMainRecordsList_tSalesforceOutput_4 = outgoingRecs_tSalesforceOutput_4;
                    }
              	}
            	outgoingMainRecordsIt_tSalesforceOutput_4 = outgoingMainRecordsList_tSalesforceOutput_4.iterator();
            	while(outgoingMainRecordsIt_tSalesforceOutput_4.hasNext()) { //Start of data processing while block
            		
            			if(outgoingMainRecordsIt_tSalesforceOutput_4.hasNext()) {
            				row23 = new row23Struct();
            				Object outgoingMain_tSalesforceOutput_4 = outgoingMainRecordsIt_tSalesforceOutput_4.next();
            				
        // Construct the factory once when the first data arrives.
        if (factory_tSalesforceOutput_4OutMain == null) {
            factory_tSalesforceOutput_4OutMain = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(outgoingMain_tSalesforceOutput_4.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tSalesforceOutput_4OutMain.setWrapped(factory_tSalesforceOutput_4OutMain.convertToAvro(outgoingMain_tSalesforceOutput_4));
                Object columnValue_0_tSalesforceOutput_4OutMain = outgoingEnforcer_tSalesforceOutput_4OutMain.get(0);
                        row23.Id = (String) (columnValue_0_tSalesforceOutput_4OutMain);
                Object columnValue_1_tSalesforceOutput_4OutMain = outgoingEnforcer_tSalesforceOutput_4OutMain.get(1);
                        row23.Image_4_Link_Haddad__c = (String) (columnValue_1_tSalesforceOutput_4OutMain);
                Object columnValue_2_tSalesforceOutput_4OutMain = outgoingEnforcer_tSalesforceOutput_4OutMain.get(2);
                        row23.Image_4_Link_Type__c = (String) (columnValue_2_tSalesforceOutput_4OutMain);
            			} else {
            				row23 = null;
            			}
            		

 



/**
 * [tSalesforceOutput_4 process_data_begin ] stop
 */
// Start of branch "row23"
if(row23 != null) { 



	
	/**
	 * [tLogRow_4 main ] start
	 */

	

	
	
	currentComponent="tLogRow_4";

	
///////////////////////		
						



				strBuffer_tLogRow_4 = new StringBuilder();




   				
	    		if(row23.Id != null) { //              
                    							
       
				strBuffer_tLogRow_4.append(
				                String.valueOf(row23.Id)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_4.append("|");
    			


   				
	    		if(row23.Image_4_Link_Haddad__c != null) { //              
                    							
       
				strBuffer_tLogRow_4.append(
				                String.valueOf(row23.Image_4_Link_Haddad__c)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_4.append("|");
    			


   				
	    		if(row23.Image_4_Link_Type__c != null) { //              
                    							
       
				strBuffer_tLogRow_4.append(
				                String.valueOf(row23.Image_4_Link_Type__c)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_4 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_4 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_4);
                    }
                    consoleOut_tLogRow_4.println(strBuffer_tLogRow_4.toString());
                    consoleOut_tLogRow_4.flush();
                    nb_line_tLogRow_4++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_4++;

/**
 * [tLogRow_4 main ] stop
 */
	
	/**
	 * [tLogRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_4";

	

 



/**
 * [tLogRow_4 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_4";

	

 



/**
 * [tLogRow_4 process_data_end ] stop
 */

} // End of branch "row23"




	
	/**
	 * [tSalesforceOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_4";

	
	} //end of data processing while block
	if (writer_tSalesforceOutput_4 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
    	((org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_4).cleanWrites();
    }
	

 



/**
 * [tSalesforceOutput_4 process_data_end ] stop
 */

} // End of branch "row19"




	
	/**
	 * [tUniqRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_6";

	

 



/**
 * [tUniqRow_6 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfUpdate_Back_Image"



	
		} // close loop of lookup 'row18' // G_TM_M_043
	
	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";

	

 



/**
 * [tMap_7 process_data_end ] stop
 */

} // End of branch "out_4"




// Start of branch "out_5"
if(out_5 != null) { 



	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";

	

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_8 = false;
		  boolean mainRowRejected_tMap_8 = false;
            				    								  
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row24" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow24 = false;
       		  	    	
       		  	    	
 							row24Struct row24ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_8) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_8 = false;
								
                        		    		row24HashKey.property_Color_Code = out_5.Color_Code_Haddad__c ;
                        		    		
                        		    		row24HashKey.property_Style_Code = out_5.Style_Haddad__r_Name ;
                        		    		

								
		                        	row24HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
								
									tFileInputDelimited_6Process(globalMap);
									
									
										tHash_Lookup_row24 = 
										(org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row24Struct>) 
										((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row24Struct>) 
											globalMap.get( "tHash_Lookup_row24" ));
									
								
									tHash_Lookup_row24.initGet();
								
									tHash_Lookup_row24.lookup( row24HashKey );
										
									
									
										
								

	  							

 								
								  
								  if(!tHash_Lookup_row24.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_8 = true;
	  								
						
									
	
		  								forceLooprow24 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow24 = true;
			           		  	} // G 21
                    		  	
                    		

							row24Struct row24 = null;
                    		  	 
							

								while ((tHash_Lookup_row24 != null && tHash_Lookup_row24.hasNext()) || forceLooprow24) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row24'
									
                    		  	 
							   
                    		  	 
	       		  	    	row24Struct fromLookup_row24 = null;
							row24 = row24Default;
										 
							
								
								if(!forceLooprow24) { // G 46
								
							
								 
							
								
								fromLookup_row24 = tHash_Lookup_row24.next();

							

							if(fromLookup_row24 != null) {
								row24 = fromLookup_row24;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow24 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;
Var.var1 = null;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfUpdate_Back_Image = null;

if(!rejectedInnerJoin_tMap_8 ) {

// # Output table : 'copyOfcopyOfcopyOfUpdate_Back_Image'
// # Filter conditions 
if( 

"Front".equals(row24.property_Photo_View) ==  true

 ) {
copyOfcopyOfcopyOfUpdate_Back_Image_tmp.Id = out_5.Id ;
copyOfcopyOfcopyOfUpdate_Back_Image_tmp.Image_5_Link_Haddad__c = row24.thul;
copyOfcopyOfcopyOfUpdate_Back_Image_tmp.Image_5_Link_Type__c = "Thumbnail";
copyOfcopyOfcopyOfUpdate_Back_Image = copyOfcopyOfcopyOfUpdate_Back_Image_tmp;
} // closing filter/reject
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";

	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfUpdate_Back_Image"
if(copyOfcopyOfcopyOfUpdate_Back_Image != null) { 



	
	/**
	 * [tUniqRow_7 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_7";

	
row11 = null;			
if(copyOfcopyOfcopyOfUpdate_Back_Image.Id == null){
	finder_tUniqRow_7.Id = null;
}else{
	finder_tUniqRow_7.Id = copyOfcopyOfcopyOfUpdate_Back_Image.Id.toLowerCase();
}	
finder_tUniqRow_7.hashCodeDirty = true;
if (!keystUniqRow_7.contains(finder_tUniqRow_7)) {
		KeyStruct_tUniqRow_7 new_tUniqRow_7 = new KeyStruct_tUniqRow_7();

		
if(copyOfcopyOfcopyOfUpdate_Back_Image.Id == null){
	new_tUniqRow_7.Id = null;
}else{
	new_tUniqRow_7.Id = copyOfcopyOfcopyOfUpdate_Back_Image.Id.toLowerCase();
}
		
		keystUniqRow_7.add(new_tUniqRow_7);if(row11 == null){ 
	
	row11 = new row11Struct();
}row11.Id = copyOfcopyOfcopyOfUpdate_Back_Image.Id;			row11.Image_5_Link_Haddad__c = copyOfcopyOfcopyOfUpdate_Back_Image.Image_5_Link_Haddad__c;			row11.Image_5_Link_Type__c = copyOfcopyOfcopyOfUpdate_Back_Image.Image_5_Link_Type__c;					
		nb_uniques_tUniqRow_7++;
	} else {
	  nb_duplicates_tUniqRow_7++;
	}

 


	tos_count_tUniqRow_7++;

/**
 * [tUniqRow_7 main ] stop
 */
	
	/**
	 * [tUniqRow_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_7";

	

 



/**
 * [tUniqRow_7 process_data_begin ] stop
 */
// Start of branch "row11"
if(row11 != null) { 



	
	/**
	 * [tSalesforceOutput_5 main ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_5";

	

        incomingEnforcer_tSalesforceOutput_5.createNewRecord();
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_5.getRuntimeSchema().getField("Id") != null){
                    incomingEnforcer_tSalesforceOutput_5.put("Id", row11.Id);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_5.getRuntimeSchema().getField("Image_5_Link_Haddad__c") != null){
                    incomingEnforcer_tSalesforceOutput_5.put("Image_5_Link_Haddad__c", row11.Image_5_Link_Haddad__c);
                }
                //skip the put action if the input column doesn't appear in component runtime schema
                if (incomingEnforcer_tSalesforceOutput_5.getRuntimeSchema().getField("Image_5_Link_Type__c") != null){
                    incomingEnforcer_tSalesforceOutput_5.put("Image_5_Link_Type__c", row11.Image_5_Link_Type__c);
                }
        org.apache.avro.generic.IndexedRecord data_tSalesforceOutput_5 = incomingEnforcer_tSalesforceOutput_5.getCurrentRecord();
        

        writer_tSalesforceOutput_5.write(data_tSalesforceOutput_5);
        
        nb_line_tSalesforceOutput_5++;
        	if(!(writer_tSalesforceOutput_5 instanceof org.talend.components.api.component.runtime.WriterWithFeedback)) {
          		// For no feedback writer,just pass the input record to the output
          		if (data_tSalesforceOutput_5!=null) {
          			outgoingMainRecordsList_tSalesforceOutput_5 = java.util.Arrays.asList(data_tSalesforceOutput_5);
              	}
                }

 


	tos_count_tSalesforceOutput_5++;

/**
 * [tSalesforceOutput_5 main ] stop
 */
	
	/**
	 * [tSalesforceOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_5";

	

                row20 = null;
            	if (writer_tSalesforceOutput_5 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
					org.talend.components.api.component.runtime.WriterWithFeedback writerWithFeedbackMain_tSalesforceOutput_5 = (org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_5;
					writerWithFeedbackMain_tSalesforceOutput_5 = new org.talend.codegen.flowvariables.runtime.FlowVariablesWriter(writerWithFeedbackMain_tSalesforceOutput_5, container_tSalesforceOutput_5);
					java.lang.Iterable<?> outgoingRecs_tSalesforceOutput_5 = writerWithFeedbackMain_tSalesforceOutput_5.getSuccessfulWrites();
                    java.util.Iterator outgoingMainRecords_tSalesforceOutput_5 = outgoingRecs_tSalesforceOutput_5.iterator();
                    Object outgoingMain_tSalesforceOutput_5 = null;
                    if (outgoingMainRecords_tSalesforceOutput_5.hasNext()) {
                    	outgoingMainRecordsList_tSalesforceOutput_5 = outgoingRecs_tSalesforceOutput_5;
                    }
              	}
            	outgoingMainRecordsIt_tSalesforceOutput_5 = outgoingMainRecordsList_tSalesforceOutput_5.iterator();
            	while(outgoingMainRecordsIt_tSalesforceOutput_5.hasNext()) { //Start of data processing while block
            		
            			if(outgoingMainRecordsIt_tSalesforceOutput_5.hasNext()) {
            				row20 = new row20Struct();
            				Object outgoingMain_tSalesforceOutput_5 = outgoingMainRecordsIt_tSalesforceOutput_5.next();
            				
        // Construct the factory once when the first data arrives.
        if (factory_tSalesforceOutput_5OutMain == null) {
            factory_tSalesforceOutput_5OutMain = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(outgoingMain_tSalesforceOutput_5.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tSalesforceOutput_5OutMain.setWrapped(factory_tSalesforceOutput_5OutMain.convertToAvro(outgoingMain_tSalesforceOutput_5));
                Object columnValue_0_tSalesforceOutput_5OutMain = outgoingEnforcer_tSalesforceOutput_5OutMain.get(0);
                        row20.Id = (String) (columnValue_0_tSalesforceOutput_5OutMain);
                Object columnValue_1_tSalesforceOutput_5OutMain = outgoingEnforcer_tSalesforceOutput_5OutMain.get(1);
                        row20.Image_5_Link_Haddad__c = (String) (columnValue_1_tSalesforceOutput_5OutMain);
                Object columnValue_2_tSalesforceOutput_5OutMain = outgoingEnforcer_tSalesforceOutput_5OutMain.get(2);
                        row20.Image_5_Link_Type__c = (String) (columnValue_2_tSalesforceOutput_5OutMain);
            			} else {
            				row20 = null;
            			}
            		

 



/**
 * [tSalesforceOutput_5 process_data_begin ] stop
 */
// Start of branch "row20"
if(row20 != null) { 



	
	/**
	 * [tLogRow_5 main ] start
	 */

	

	
	
	currentComponent="tLogRow_5";

	
///////////////////////		
						



				strBuffer_tLogRow_5 = new StringBuilder();




   				
	    		if(row20.Id != null) { //              
                    							
       
				strBuffer_tLogRow_5.append(
				                String.valueOf(row20.Id)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_5.append("|");
    			


   				
	    		if(row20.Image_5_Link_Haddad__c != null) { //              
                    							
       
				strBuffer_tLogRow_5.append(
				                String.valueOf(row20.Image_5_Link_Haddad__c)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_5.append("|");
    			


   				
	    		if(row20.Image_5_Link_Type__c != null) { //              
                    							
       
				strBuffer_tLogRow_5.append(
				                String.valueOf(row20.Image_5_Link_Type__c)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_5 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_5 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_5);
                    }
                    consoleOut_tLogRow_5.println(strBuffer_tLogRow_5.toString());
                    consoleOut_tLogRow_5.flush();
                    nb_line_tLogRow_5++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_5++;

/**
 * [tLogRow_5 main ] stop
 */
	
	/**
	 * [tLogRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_5";

	

 



/**
 * [tLogRow_5 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_5";

	

 



/**
 * [tLogRow_5 process_data_end ] stop
 */

} // End of branch "row20"




	
	/**
	 * [tSalesforceOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_5";

	
	} //end of data processing while block
	if (writer_tSalesforceOutput_5 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
    	((org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_5).cleanWrites();
    }
	

 



/**
 * [tSalesforceOutput_5 process_data_end ] stop
 */

} // End of branch "row11"




	
	/**
	 * [tUniqRow_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_7";

	

 



/**
 * [tUniqRow_7 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfUpdate_Back_Image"



	
		} // close loop of lookup 'row24' // G_TM_M_043
	
	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";

	

 



/**
 * [tMap_8 process_data_end ] stop
 */

} // End of branch "out_5"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tSalesforceInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tSalesforceInput_1";

	


 



/**
 * [tSalesforceInput_1 process_data_end ] stop
 */
	
	/**
	 * [tSalesforceInput_1 end ] start
	 */

	

	
	
	currentComponent="tSalesforceInput_1";

	
// end of generic


resourceMap.put("finish_tSalesforceInput_1", Boolean.TRUE);

    } // while
    reader_tSalesforceInput_1.close();
    final java.util.Map<String, Object> resultMap_tSalesforceInput_1 = reader_tSalesforceInput_1.getReturnValues();
if(resultMap_tSalesforceInput_1!=null) {
	for(java.util.Map.Entry<String,Object> entry_tSalesforceInput_1 : resultMap_tSalesforceInput_1.entrySet()) {
		switch(entry_tSalesforceInput_1.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tSalesforceInput_1.setComponentData("tSalesforceInput_1", "ERROR_MESSAGE", entry_tSalesforceInput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tSalesforceInput_1.setComponentData("tSalesforceInput_1", "NB_LINE", entry_tSalesforceInput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tSalesforceInput_1.setComponentData("tSalesforceInput_1", "NB_SUCCESS", entry_tSalesforceInput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tSalesforceInput_1.setComponentData("tSalesforceInput_1", "NB_REJECT", entry_tSalesforceInput_1.getValue());
			break;
		default :
            StringBuilder studio_key_tSalesforceInput_1 = new StringBuilder();
            for (int i_tSalesforceInput_1 = 0; i_tSalesforceInput_1 < entry_tSalesforceInput_1.getKey().length(); i_tSalesforceInput_1++) {
                char ch_tSalesforceInput_1 = entry_tSalesforceInput_1.getKey().charAt(i_tSalesforceInput_1);
                if(Character.isUpperCase(ch_tSalesforceInput_1) && i_tSalesforceInput_1> 0) {
                	studio_key_tSalesforceInput_1.append('_');
                }
                studio_key_tSalesforceInput_1.append(ch_tSalesforceInput_1);
            }
			container_tSalesforceInput_1.setComponentData("tSalesforceInput_1", studio_key_tSalesforceInput_1.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tSalesforceInput_1.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tSalesforceInput_1", true);
end_Hash.put("tSalesforceInput_1", System.currentTimeMillis());




/**
 * [tSalesforceInput_1 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row9 != null) {
						tHash_Lookup_row9.endGet();
					}
					globalMap.remove( "tHash_Lookup_row9" );

					
					
				
// ###############################      





 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tUniqRow_3 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";

	

globalMap.put("tUniqRow_3_NB_UNIQUES",nb_uniques_tUniqRow_3);
globalMap.put("tUniqRow_3_NB_DUPLICATES",nb_duplicates_tUniqRow_3);

 

ok_Hash.put("tUniqRow_3", true);
end_Hash.put("tUniqRow_3", System.currentTimeMillis());




/**
 * [tUniqRow_3 end ] stop
 */

	
	/**
	 * [tSalesforceOutput_1 end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_1";

	
// end of generic


resourceMap.put("finish_tSalesforceOutput_1", Boolean.TRUE);

    org.talend.components.api.component.runtime.Result resultObject_tSalesforceOutput_1 = (org.talend.components.api.component.runtime.Result)writer_tSalesforceOutput_1.close();
    final java.util.Map<String, Object> resultMap_tSalesforceOutput_1 = writer_tSalesforceOutput_1.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tSalesforceOutput_1), container_tSalesforceOutput_1);
if(resultMap_tSalesforceOutput_1!=null) {
	for(java.util.Map.Entry<String,Object> entry_tSalesforceOutput_1 : resultMap_tSalesforceOutput_1.entrySet()) {
		switch(entry_tSalesforceOutput_1.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tSalesforceOutput_1.setComponentData("tSalesforceOutput_1", "ERROR_MESSAGE", entry_tSalesforceOutput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tSalesforceOutput_1.setComponentData("tSalesforceOutput_1", "NB_LINE", entry_tSalesforceOutput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tSalesforceOutput_1.setComponentData("tSalesforceOutput_1", "NB_SUCCESS", entry_tSalesforceOutput_1.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tSalesforceOutput_1.setComponentData("tSalesforceOutput_1", "NB_REJECT", entry_tSalesforceOutput_1.getValue());
			break;
		default :
            StringBuilder studio_key_tSalesforceOutput_1 = new StringBuilder();
            for (int i_tSalesforceOutput_1 = 0; i_tSalesforceOutput_1 < entry_tSalesforceOutput_1.getKey().length(); i_tSalesforceOutput_1++) {
                char ch_tSalesforceOutput_1 = entry_tSalesforceOutput_1.getKey().charAt(i_tSalesforceOutput_1);
                if(Character.isUpperCase(ch_tSalesforceOutput_1) && i_tSalesforceOutput_1> 0) {
                	studio_key_tSalesforceOutput_1.append('_');
                }
                studio_key_tSalesforceOutput_1.append(ch_tSalesforceOutput_1);
            }
			container_tSalesforceOutput_1.setComponentData("tSalesforceOutput_1", studio_key_tSalesforceOutput_1.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tSalesforceOutput_1.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tSalesforceOutput_1", true);
end_Hash.put("tSalesforceOutput_1", System.currentTimeMillis());




/**
 * [tSalesforceOutput_1 end ] stop
 */
	
	/**
	 * [tSalesforceOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_1";

	

                row10 = null;
            	if (writer_tSalesforceOutput_1 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
					org.talend.components.api.component.runtime.WriterWithFeedback writerWithFeedbackMain_tSalesforceOutput_1 = (org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_1;
					writerWithFeedbackMain_tSalesforceOutput_1 = new org.talend.codegen.flowvariables.runtime.FlowVariablesWriter(writerWithFeedbackMain_tSalesforceOutput_1, container_tSalesforceOutput_1);
					java.lang.Iterable<?> outgoingRecs_tSalesforceOutput_1 = writerWithFeedbackMain_tSalesforceOutput_1.getSuccessfulWrites();
                    java.util.Iterator outgoingMainRecords_tSalesforceOutput_1 = outgoingRecs_tSalesforceOutput_1.iterator();
                    Object outgoingMain_tSalesforceOutput_1 = null;
                    if (outgoingMainRecords_tSalesforceOutput_1.hasNext()) {
                    	outgoingMainRecordsList_tSalesforceOutput_1 = outgoingRecs_tSalesforceOutput_1;
                    }
              	}
            	outgoingMainRecordsIt_tSalesforceOutput_1 = outgoingMainRecordsList_tSalesforceOutput_1.iterator();
            	while(outgoingMainRecordsIt_tSalesforceOutput_1.hasNext()) { //Start of data processing while block
            		
            			if(outgoingMainRecordsIt_tSalesforceOutput_1.hasNext()) {
            				row10 = new row10Struct();
            				Object outgoingMain_tSalesforceOutput_1 = outgoingMainRecordsIt_tSalesforceOutput_1.next();
            				
        // Construct the factory once when the first data arrives.
        if (factory_tSalesforceOutput_1OutMain == null) {
            factory_tSalesforceOutput_1OutMain = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(outgoingMain_tSalesforceOutput_1.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tSalesforceOutput_1OutMain.setWrapped(factory_tSalesforceOutput_1OutMain.convertToAvro(outgoingMain_tSalesforceOutput_1));
                Object columnValue_0_tSalesforceOutput_1OutMain = outgoingEnforcer_tSalesforceOutput_1OutMain.get(0);
                        row10.Id = (String) (columnValue_0_tSalesforceOutput_1OutMain);
                Object columnValue_1_tSalesforceOutput_1OutMain = outgoingEnforcer_tSalesforceOutput_1OutMain.get(1);
                        row10.Image_1_Link_Haddad__c = (String) (columnValue_1_tSalesforceOutput_1OutMain);
                Object columnValue_2_tSalesforceOutput_1OutMain = outgoingEnforcer_tSalesforceOutput_1OutMain.get(2);
                        row10.Image_1_Link_Type__c = (String) (columnValue_2_tSalesforceOutput_1OutMain);
            			} else {
            				row10 = null;
            			}
            		

 



/**
 * [tSalesforceOutput_1 process_data_begin ] stop
 */
// Start of branch "row10"
if(row10 != null) { 



	
	/**
	 * [tLogRow_1 main ] start
	 */

	

	
	
	currentComponent="tLogRow_1";

	
///////////////////////		
						



				strBuffer_tLogRow_1 = new StringBuilder();




   				
	    		if(row10.Id != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row10.Id)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row10.Image_1_Link_Haddad__c != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row10.Image_1_Link_Haddad__c)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row10.Image_1_Link_Type__c != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row10.Image_1_Link_Type__c)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_1 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_1);
                    }
                    consoleOut_tLogRow_1.println(strBuffer_tLogRow_1.toString());
                    consoleOut_tLogRow_1.flush();
                    nb_line_tLogRow_1++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_1++;

/**
 * [tLogRow_1 main ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_1";

	

 



/**
 * [tLogRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";

	

 



/**
 * [tLogRow_1 process_data_end ] stop
 */

} // End of branch "row10"




	
	/**
	 * [tSalesforceOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_1";

	
	} //end of data processing while block
	if (writer_tSalesforceOutput_1 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
    	((org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_1).cleanWrites();
    }
	

 



/**
 * [tSalesforceOutput_1 process_data_end ] stop
 */

	
	/**
	 * [tLogRow_1 end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";

	


//////
//////
globalMap.put("tLogRow_1_NB_LINE",nb_line_tLogRow_1);

///////////////////////    			

 

ok_Hash.put("tLogRow_1", true);
end_Hash.put("tLogRow_1", System.currentTimeMillis());




/**
 * [tLogRow_1 end ] stop
 */













	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row14 != null) {
						tHash_Lookup_row14.endGet();
					}
					globalMap.remove( "tHash_Lookup_row14" );

					
					
				
// ###############################      





 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tUniqRow_4 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";

	

globalMap.put("tUniqRow_4_NB_UNIQUES",nb_uniques_tUniqRow_4);
globalMap.put("tUniqRow_4_NB_DUPLICATES",nb_duplicates_tUniqRow_4);

 

ok_Hash.put("tUniqRow_4", true);
end_Hash.put("tUniqRow_4", System.currentTimeMillis());




/**
 * [tUniqRow_4 end ] stop
 */

	
	/**
	 * [tSalesforceOutput_2 end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_2";

	
// end of generic


resourceMap.put("finish_tSalesforceOutput_2", Boolean.TRUE);

    org.talend.components.api.component.runtime.Result resultObject_tSalesforceOutput_2 = (org.talend.components.api.component.runtime.Result)writer_tSalesforceOutput_2.close();
    final java.util.Map<String, Object> resultMap_tSalesforceOutput_2 = writer_tSalesforceOutput_2.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tSalesforceOutput_2), container_tSalesforceOutput_2);
if(resultMap_tSalesforceOutput_2!=null) {
	for(java.util.Map.Entry<String,Object> entry_tSalesforceOutput_2 : resultMap_tSalesforceOutput_2.entrySet()) {
		switch(entry_tSalesforceOutput_2.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tSalesforceOutput_2.setComponentData("tSalesforceOutput_2", "ERROR_MESSAGE", entry_tSalesforceOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tSalesforceOutput_2.setComponentData("tSalesforceOutput_2", "NB_LINE", entry_tSalesforceOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tSalesforceOutput_2.setComponentData("tSalesforceOutput_2", "NB_SUCCESS", entry_tSalesforceOutput_2.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tSalesforceOutput_2.setComponentData("tSalesforceOutput_2", "NB_REJECT", entry_tSalesforceOutput_2.getValue());
			break;
		default :
            StringBuilder studio_key_tSalesforceOutput_2 = new StringBuilder();
            for (int i_tSalesforceOutput_2 = 0; i_tSalesforceOutput_2 < entry_tSalesforceOutput_2.getKey().length(); i_tSalesforceOutput_2++) {
                char ch_tSalesforceOutput_2 = entry_tSalesforceOutput_2.getKey().charAt(i_tSalesforceOutput_2);
                if(Character.isUpperCase(ch_tSalesforceOutput_2) && i_tSalesforceOutput_2> 0) {
                	studio_key_tSalesforceOutput_2.append('_');
                }
                studio_key_tSalesforceOutput_2.append(ch_tSalesforceOutput_2);
            }
			container_tSalesforceOutput_2.setComponentData("tSalesforceOutput_2", studio_key_tSalesforceOutput_2.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tSalesforceOutput_2.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tSalesforceOutput_2", true);
end_Hash.put("tSalesforceOutput_2", System.currentTimeMillis());




/**
 * [tSalesforceOutput_2 end ] stop
 */
	
	/**
	 * [tSalesforceOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_2";

	

                row21 = null;
            	if (writer_tSalesforceOutput_2 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
					org.talend.components.api.component.runtime.WriterWithFeedback writerWithFeedbackMain_tSalesforceOutput_2 = (org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_2;
					writerWithFeedbackMain_tSalesforceOutput_2 = new org.talend.codegen.flowvariables.runtime.FlowVariablesWriter(writerWithFeedbackMain_tSalesforceOutput_2, container_tSalesforceOutput_2);
					java.lang.Iterable<?> outgoingRecs_tSalesforceOutput_2 = writerWithFeedbackMain_tSalesforceOutput_2.getSuccessfulWrites();
                    java.util.Iterator outgoingMainRecords_tSalesforceOutput_2 = outgoingRecs_tSalesforceOutput_2.iterator();
                    Object outgoingMain_tSalesforceOutput_2 = null;
                    if (outgoingMainRecords_tSalesforceOutput_2.hasNext()) {
                    	outgoingMainRecordsList_tSalesforceOutput_2 = outgoingRecs_tSalesforceOutput_2;
                    }
              	}
            	outgoingMainRecordsIt_tSalesforceOutput_2 = outgoingMainRecordsList_tSalesforceOutput_2.iterator();
            	while(outgoingMainRecordsIt_tSalesforceOutput_2.hasNext()) { //Start of data processing while block
            		
            			if(outgoingMainRecordsIt_tSalesforceOutput_2.hasNext()) {
            				row21 = new row21Struct();
            				Object outgoingMain_tSalesforceOutput_2 = outgoingMainRecordsIt_tSalesforceOutput_2.next();
            				
        // Construct the factory once when the first data arrives.
        if (factory_tSalesforceOutput_2OutMain == null) {
            factory_tSalesforceOutput_2OutMain = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(outgoingMain_tSalesforceOutput_2.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tSalesforceOutput_2OutMain.setWrapped(factory_tSalesforceOutput_2OutMain.convertToAvro(outgoingMain_tSalesforceOutput_2));
                Object columnValue_0_tSalesforceOutput_2OutMain = outgoingEnforcer_tSalesforceOutput_2OutMain.get(0);
                        row21.Id = (String) (columnValue_0_tSalesforceOutput_2OutMain);
                Object columnValue_1_tSalesforceOutput_2OutMain = outgoingEnforcer_tSalesforceOutput_2OutMain.get(1);
                        row21.Image_2_Link_Haddad__c = (String) (columnValue_1_tSalesforceOutput_2OutMain);
                Object columnValue_2_tSalesforceOutput_2OutMain = outgoingEnforcer_tSalesforceOutput_2OutMain.get(2);
                        row21.Image_2_Link_Type__c = (String) (columnValue_2_tSalesforceOutput_2OutMain);
            			} else {
            				row21 = null;
            			}
            		

 



/**
 * [tSalesforceOutput_2 process_data_begin ] stop
 */
// Start of branch "row21"
if(row21 != null) { 



	
	/**
	 * [tLogRow_2 main ] start
	 */

	

	
	
	currentComponent="tLogRow_2";

	
///////////////////////		
						



				strBuffer_tLogRow_2 = new StringBuilder();




   				
	    		if(row21.Id != null) { //              
                    							
       
				strBuffer_tLogRow_2.append(
				                String.valueOf(row21.Id)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_2.append("|");
    			


   				
	    		if(row21.Image_2_Link_Haddad__c != null) { //              
                    							
       
				strBuffer_tLogRow_2.append(
				                String.valueOf(row21.Image_2_Link_Haddad__c)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_2.append("|");
    			


   				
	    		if(row21.Image_2_Link_Type__c != null) { //              
                    							
       
				strBuffer_tLogRow_2.append(
				                String.valueOf(row21.Image_2_Link_Type__c)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_2 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_2 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_2);
                    }
                    consoleOut_tLogRow_2.println(strBuffer_tLogRow_2.toString());
                    consoleOut_tLogRow_2.flush();
                    nb_line_tLogRow_2++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_2++;

/**
 * [tLogRow_2 main ] stop
 */
	
	/**
	 * [tLogRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_2";

	

 



/**
 * [tLogRow_2 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_2";

	

 



/**
 * [tLogRow_2 process_data_end ] stop
 */

} // End of branch "row21"




	
	/**
	 * [tSalesforceOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_2";

	
	} //end of data processing while block
	if (writer_tSalesforceOutput_2 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
    	((org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_2).cleanWrites();
    }
	

 



/**
 * [tSalesforceOutput_2 process_data_end ] stop
 */

	
	/**
	 * [tLogRow_2 end ] start
	 */

	

	
	
	currentComponent="tLogRow_2";

	


//////
//////
globalMap.put("tLogRow_2_NB_LINE",nb_line_tLogRow_2);

///////////////////////    			

 

ok_Hash.put("tLogRow_2", true);
end_Hash.put("tLogRow_2", System.currentTimeMillis());




/**
 * [tLogRow_2 end ] stop
 */













	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row16 != null) {
						tHash_Lookup_row16.endGet();
					}
					globalMap.remove( "tHash_Lookup_row16" );

					
					
				
// ###############################      





 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tUniqRow_5 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_5";

	

globalMap.put("tUniqRow_5_NB_UNIQUES",nb_uniques_tUniqRow_5);
globalMap.put("tUniqRow_5_NB_DUPLICATES",nb_duplicates_tUniqRow_5);

 

ok_Hash.put("tUniqRow_5", true);
end_Hash.put("tUniqRow_5", System.currentTimeMillis());




/**
 * [tUniqRow_5 end ] stop
 */

	
	/**
	 * [tSalesforceOutput_3 end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_3";

	
// end of generic


resourceMap.put("finish_tSalesforceOutput_3", Boolean.TRUE);

    org.talend.components.api.component.runtime.Result resultObject_tSalesforceOutput_3 = (org.talend.components.api.component.runtime.Result)writer_tSalesforceOutput_3.close();
    final java.util.Map<String, Object> resultMap_tSalesforceOutput_3 = writer_tSalesforceOutput_3.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tSalesforceOutput_3), container_tSalesforceOutput_3);
if(resultMap_tSalesforceOutput_3!=null) {
	for(java.util.Map.Entry<String,Object> entry_tSalesforceOutput_3 : resultMap_tSalesforceOutput_3.entrySet()) {
		switch(entry_tSalesforceOutput_3.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tSalesforceOutput_3.setComponentData("tSalesforceOutput_3", "ERROR_MESSAGE", entry_tSalesforceOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tSalesforceOutput_3.setComponentData("tSalesforceOutput_3", "NB_LINE", entry_tSalesforceOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tSalesforceOutput_3.setComponentData("tSalesforceOutput_3", "NB_SUCCESS", entry_tSalesforceOutput_3.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tSalesforceOutput_3.setComponentData("tSalesforceOutput_3", "NB_REJECT", entry_tSalesforceOutput_3.getValue());
			break;
		default :
            StringBuilder studio_key_tSalesforceOutput_3 = new StringBuilder();
            for (int i_tSalesforceOutput_3 = 0; i_tSalesforceOutput_3 < entry_tSalesforceOutput_3.getKey().length(); i_tSalesforceOutput_3++) {
                char ch_tSalesforceOutput_3 = entry_tSalesforceOutput_3.getKey().charAt(i_tSalesforceOutput_3);
                if(Character.isUpperCase(ch_tSalesforceOutput_3) && i_tSalesforceOutput_3> 0) {
                	studio_key_tSalesforceOutput_3.append('_');
                }
                studio_key_tSalesforceOutput_3.append(ch_tSalesforceOutput_3);
            }
			container_tSalesforceOutput_3.setComponentData("tSalesforceOutput_3", studio_key_tSalesforceOutput_3.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tSalesforceOutput_3.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tSalesforceOutput_3", true);
end_Hash.put("tSalesforceOutput_3", System.currentTimeMillis());




/**
 * [tSalesforceOutput_3 end ] stop
 */
	
	/**
	 * [tSalesforceOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_3";

	

                row22 = null;
            	if (writer_tSalesforceOutput_3 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
					org.talend.components.api.component.runtime.WriterWithFeedback writerWithFeedbackMain_tSalesforceOutput_3 = (org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_3;
					writerWithFeedbackMain_tSalesforceOutput_3 = new org.talend.codegen.flowvariables.runtime.FlowVariablesWriter(writerWithFeedbackMain_tSalesforceOutput_3, container_tSalesforceOutput_3);
					java.lang.Iterable<?> outgoingRecs_tSalesforceOutput_3 = writerWithFeedbackMain_tSalesforceOutput_3.getSuccessfulWrites();
                    java.util.Iterator outgoingMainRecords_tSalesforceOutput_3 = outgoingRecs_tSalesforceOutput_3.iterator();
                    Object outgoingMain_tSalesforceOutput_3 = null;
                    if (outgoingMainRecords_tSalesforceOutput_3.hasNext()) {
                    	outgoingMainRecordsList_tSalesforceOutput_3 = outgoingRecs_tSalesforceOutput_3;
                    }
              	}
            	outgoingMainRecordsIt_tSalesforceOutput_3 = outgoingMainRecordsList_tSalesforceOutput_3.iterator();
            	while(outgoingMainRecordsIt_tSalesforceOutput_3.hasNext()) { //Start of data processing while block
            		
            			if(outgoingMainRecordsIt_tSalesforceOutput_3.hasNext()) {
            				row22 = new row22Struct();
            				Object outgoingMain_tSalesforceOutput_3 = outgoingMainRecordsIt_tSalesforceOutput_3.next();
            				
        // Construct the factory once when the first data arrives.
        if (factory_tSalesforceOutput_3OutMain == null) {
            factory_tSalesforceOutput_3OutMain = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(outgoingMain_tSalesforceOutput_3.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tSalesforceOutput_3OutMain.setWrapped(factory_tSalesforceOutput_3OutMain.convertToAvro(outgoingMain_tSalesforceOutput_3));
                Object columnValue_0_tSalesforceOutput_3OutMain = outgoingEnforcer_tSalesforceOutput_3OutMain.get(0);
                        row22.Id = (String) (columnValue_0_tSalesforceOutput_3OutMain);
                Object columnValue_1_tSalesforceOutput_3OutMain = outgoingEnforcer_tSalesforceOutput_3OutMain.get(1);
                        row22.Image_3_Link_Haddad__c = (String) (columnValue_1_tSalesforceOutput_3OutMain);
                Object columnValue_2_tSalesforceOutput_3OutMain = outgoingEnforcer_tSalesforceOutput_3OutMain.get(2);
                        row22.Image_3_Link_Type__c = (String) (columnValue_2_tSalesforceOutput_3OutMain);
            			} else {
            				row22 = null;
            			}
            		

 



/**
 * [tSalesforceOutput_3 process_data_begin ] stop
 */
// Start of branch "row22"
if(row22 != null) { 



	
	/**
	 * [tLogRow_3 main ] start
	 */

	

	
	
	currentComponent="tLogRow_3";

	
///////////////////////		
						



				strBuffer_tLogRow_3 = new StringBuilder();




   				
	    		if(row22.Id != null) { //              
                    							
       
				strBuffer_tLogRow_3.append(
				                String.valueOf(row22.Id)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_3.append("|");
    			


   				
	    		if(row22.Image_3_Link_Haddad__c != null) { //              
                    							
       
				strBuffer_tLogRow_3.append(
				                String.valueOf(row22.Image_3_Link_Haddad__c)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_3.append("|");
    			


   				
	    		if(row22.Image_3_Link_Type__c != null) { //              
                    							
       
				strBuffer_tLogRow_3.append(
				                String.valueOf(row22.Image_3_Link_Type__c)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_3 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_3 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_3);
                    }
                    consoleOut_tLogRow_3.println(strBuffer_tLogRow_3.toString());
                    consoleOut_tLogRow_3.flush();
                    nb_line_tLogRow_3++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_3++;

/**
 * [tLogRow_3 main ] stop
 */
	
	/**
	 * [tLogRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_3";

	

 



/**
 * [tLogRow_3 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_3";

	

 



/**
 * [tLogRow_3 process_data_end ] stop
 */

} // End of branch "row22"




	
	/**
	 * [tSalesforceOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_3";

	
	} //end of data processing while block
	if (writer_tSalesforceOutput_3 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
    	((org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_3).cleanWrites();
    }
	

 



/**
 * [tSalesforceOutput_3 process_data_end ] stop
 */

	
	/**
	 * [tLogRow_3 end ] start
	 */

	

	
	
	currentComponent="tLogRow_3";

	


//////
//////
globalMap.put("tLogRow_3_NB_LINE",nb_line_tLogRow_3);

///////////////////////    			

 

ok_Hash.put("tLogRow_3", true);
end_Hash.put("tLogRow_3", System.currentTimeMillis());




/**
 * [tLogRow_3 end ] stop
 */













	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row18 != null) {
						tHash_Lookup_row18.endGet();
					}
					globalMap.remove( "tHash_Lookup_row18" );

					
					
				
// ###############################      





 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tUniqRow_6 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_6";

	

globalMap.put("tUniqRow_6_NB_UNIQUES",nb_uniques_tUniqRow_6);
globalMap.put("tUniqRow_6_NB_DUPLICATES",nb_duplicates_tUniqRow_6);

 

ok_Hash.put("tUniqRow_6", true);
end_Hash.put("tUniqRow_6", System.currentTimeMillis());




/**
 * [tUniqRow_6 end ] stop
 */

	
	/**
	 * [tSalesforceOutput_4 end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_4";

	
// end of generic


resourceMap.put("finish_tSalesforceOutput_4", Boolean.TRUE);

    org.talend.components.api.component.runtime.Result resultObject_tSalesforceOutput_4 = (org.talend.components.api.component.runtime.Result)writer_tSalesforceOutput_4.close();
    final java.util.Map<String, Object> resultMap_tSalesforceOutput_4 = writer_tSalesforceOutput_4.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tSalesforceOutput_4), container_tSalesforceOutput_4);
if(resultMap_tSalesforceOutput_4!=null) {
	for(java.util.Map.Entry<String,Object> entry_tSalesforceOutput_4 : resultMap_tSalesforceOutput_4.entrySet()) {
		switch(entry_tSalesforceOutput_4.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tSalesforceOutput_4.setComponentData("tSalesforceOutput_4", "ERROR_MESSAGE", entry_tSalesforceOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tSalesforceOutput_4.setComponentData("tSalesforceOutput_4", "NB_LINE", entry_tSalesforceOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tSalesforceOutput_4.setComponentData("tSalesforceOutput_4", "NB_SUCCESS", entry_tSalesforceOutput_4.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tSalesforceOutput_4.setComponentData("tSalesforceOutput_4", "NB_REJECT", entry_tSalesforceOutput_4.getValue());
			break;
		default :
            StringBuilder studio_key_tSalesforceOutput_4 = new StringBuilder();
            for (int i_tSalesforceOutput_4 = 0; i_tSalesforceOutput_4 < entry_tSalesforceOutput_4.getKey().length(); i_tSalesforceOutput_4++) {
                char ch_tSalesforceOutput_4 = entry_tSalesforceOutput_4.getKey().charAt(i_tSalesforceOutput_4);
                if(Character.isUpperCase(ch_tSalesforceOutput_4) && i_tSalesforceOutput_4> 0) {
                	studio_key_tSalesforceOutput_4.append('_');
                }
                studio_key_tSalesforceOutput_4.append(ch_tSalesforceOutput_4);
            }
			container_tSalesforceOutput_4.setComponentData("tSalesforceOutput_4", studio_key_tSalesforceOutput_4.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tSalesforceOutput_4.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tSalesforceOutput_4", true);
end_Hash.put("tSalesforceOutput_4", System.currentTimeMillis());




/**
 * [tSalesforceOutput_4 end ] stop
 */
	
	/**
	 * [tSalesforceOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_4";

	

                row23 = null;
            	if (writer_tSalesforceOutput_4 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
					org.talend.components.api.component.runtime.WriterWithFeedback writerWithFeedbackMain_tSalesforceOutput_4 = (org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_4;
					writerWithFeedbackMain_tSalesforceOutput_4 = new org.talend.codegen.flowvariables.runtime.FlowVariablesWriter(writerWithFeedbackMain_tSalesforceOutput_4, container_tSalesforceOutput_4);
					java.lang.Iterable<?> outgoingRecs_tSalesforceOutput_4 = writerWithFeedbackMain_tSalesforceOutput_4.getSuccessfulWrites();
                    java.util.Iterator outgoingMainRecords_tSalesforceOutput_4 = outgoingRecs_tSalesforceOutput_4.iterator();
                    Object outgoingMain_tSalesforceOutput_4 = null;
                    if (outgoingMainRecords_tSalesforceOutput_4.hasNext()) {
                    	outgoingMainRecordsList_tSalesforceOutput_4 = outgoingRecs_tSalesforceOutput_4;
                    }
              	}
            	outgoingMainRecordsIt_tSalesforceOutput_4 = outgoingMainRecordsList_tSalesforceOutput_4.iterator();
            	while(outgoingMainRecordsIt_tSalesforceOutput_4.hasNext()) { //Start of data processing while block
            		
            			if(outgoingMainRecordsIt_tSalesforceOutput_4.hasNext()) {
            				row23 = new row23Struct();
            				Object outgoingMain_tSalesforceOutput_4 = outgoingMainRecordsIt_tSalesforceOutput_4.next();
            				
        // Construct the factory once when the first data arrives.
        if (factory_tSalesforceOutput_4OutMain == null) {
            factory_tSalesforceOutput_4OutMain = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(outgoingMain_tSalesforceOutput_4.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tSalesforceOutput_4OutMain.setWrapped(factory_tSalesforceOutput_4OutMain.convertToAvro(outgoingMain_tSalesforceOutput_4));
                Object columnValue_0_tSalesforceOutput_4OutMain = outgoingEnforcer_tSalesforceOutput_4OutMain.get(0);
                        row23.Id = (String) (columnValue_0_tSalesforceOutput_4OutMain);
                Object columnValue_1_tSalesforceOutput_4OutMain = outgoingEnforcer_tSalesforceOutput_4OutMain.get(1);
                        row23.Image_4_Link_Haddad__c = (String) (columnValue_1_tSalesforceOutput_4OutMain);
                Object columnValue_2_tSalesforceOutput_4OutMain = outgoingEnforcer_tSalesforceOutput_4OutMain.get(2);
                        row23.Image_4_Link_Type__c = (String) (columnValue_2_tSalesforceOutput_4OutMain);
            			} else {
            				row23 = null;
            			}
            		

 



/**
 * [tSalesforceOutput_4 process_data_begin ] stop
 */
// Start of branch "row23"
if(row23 != null) { 



	
	/**
	 * [tLogRow_4 main ] start
	 */

	

	
	
	currentComponent="tLogRow_4";

	
///////////////////////		
						



				strBuffer_tLogRow_4 = new StringBuilder();




   				
	    		if(row23.Id != null) { //              
                    							
       
				strBuffer_tLogRow_4.append(
				                String.valueOf(row23.Id)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_4.append("|");
    			


   				
	    		if(row23.Image_4_Link_Haddad__c != null) { //              
                    							
       
				strBuffer_tLogRow_4.append(
				                String.valueOf(row23.Image_4_Link_Haddad__c)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_4.append("|");
    			


   				
	    		if(row23.Image_4_Link_Type__c != null) { //              
                    							
       
				strBuffer_tLogRow_4.append(
				                String.valueOf(row23.Image_4_Link_Type__c)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_4 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_4 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_4);
                    }
                    consoleOut_tLogRow_4.println(strBuffer_tLogRow_4.toString());
                    consoleOut_tLogRow_4.flush();
                    nb_line_tLogRow_4++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_4++;

/**
 * [tLogRow_4 main ] stop
 */
	
	/**
	 * [tLogRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_4";

	

 



/**
 * [tLogRow_4 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_4";

	

 



/**
 * [tLogRow_4 process_data_end ] stop
 */

} // End of branch "row23"




	
	/**
	 * [tSalesforceOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_4";

	
	} //end of data processing while block
	if (writer_tSalesforceOutput_4 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
    	((org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_4).cleanWrites();
    }
	

 



/**
 * [tSalesforceOutput_4 process_data_end ] stop
 */

	
	/**
	 * [tLogRow_4 end ] start
	 */

	

	
	
	currentComponent="tLogRow_4";

	


//////
//////
globalMap.put("tLogRow_4_NB_LINE",nb_line_tLogRow_4);

///////////////////////    			

 

ok_Hash.put("tLogRow_4", true);
end_Hash.put("tLogRow_4", System.currentTimeMillis());




/**
 * [tLogRow_4 end ] stop
 */













	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";

	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row24 != null) {
						tHash_Lookup_row24.endGet();
					}
					globalMap.remove( "tHash_Lookup_row24" );

					
					
				
// ###############################      





 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tUniqRow_7 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_7";

	

globalMap.put("tUniqRow_7_NB_UNIQUES",nb_uniques_tUniqRow_7);
globalMap.put("tUniqRow_7_NB_DUPLICATES",nb_duplicates_tUniqRow_7);

 

ok_Hash.put("tUniqRow_7", true);
end_Hash.put("tUniqRow_7", System.currentTimeMillis());




/**
 * [tUniqRow_7 end ] stop
 */

	
	/**
	 * [tSalesforceOutput_5 end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_5";

	
// end of generic


resourceMap.put("finish_tSalesforceOutput_5", Boolean.TRUE);

    org.talend.components.api.component.runtime.Result resultObject_tSalesforceOutput_5 = (org.talend.components.api.component.runtime.Result)writer_tSalesforceOutput_5.close();
    final java.util.Map<String, Object> resultMap_tSalesforceOutput_5 = writer_tSalesforceOutput_5.getWriteOperation().finalize(java.util.Arrays.<org.talend.components.api.component.runtime.Result>asList(resultObject_tSalesforceOutput_5), container_tSalesforceOutput_5);
if(resultMap_tSalesforceOutput_5!=null) {
	for(java.util.Map.Entry<String,Object> entry_tSalesforceOutput_5 : resultMap_tSalesforceOutput_5.entrySet()) {
		switch(entry_tSalesforceOutput_5.getKey()) {
		case org.talend.components.api.component.ComponentDefinition.RETURN_ERROR_MESSAGE :
			container_tSalesforceOutput_5.setComponentData("tSalesforceOutput_5", "ERROR_MESSAGE", entry_tSalesforceOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_TOTAL_RECORD_COUNT :
			container_tSalesforceOutput_5.setComponentData("tSalesforceOutput_5", "NB_LINE", entry_tSalesforceOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_SUCCESS_RECORD_COUNT :
			container_tSalesforceOutput_5.setComponentData("tSalesforceOutput_5", "NB_SUCCESS", entry_tSalesforceOutput_5.getValue());
			break;
		case org.talend.components.api.component.ComponentDefinition.RETURN_REJECT_RECORD_COUNT :
			container_tSalesforceOutput_5.setComponentData("tSalesforceOutput_5", "NB_REJECT", entry_tSalesforceOutput_5.getValue());
			break;
		default :
            StringBuilder studio_key_tSalesforceOutput_5 = new StringBuilder();
            for (int i_tSalesforceOutput_5 = 0; i_tSalesforceOutput_5 < entry_tSalesforceOutput_5.getKey().length(); i_tSalesforceOutput_5++) {
                char ch_tSalesforceOutput_5 = entry_tSalesforceOutput_5.getKey().charAt(i_tSalesforceOutput_5);
                if(Character.isUpperCase(ch_tSalesforceOutput_5) && i_tSalesforceOutput_5> 0) {
                	studio_key_tSalesforceOutput_5.append('_');
                }
                studio_key_tSalesforceOutput_5.append(ch_tSalesforceOutput_5);
            }
			container_tSalesforceOutput_5.setComponentData("tSalesforceOutput_5", studio_key_tSalesforceOutput_5.toString().toUpperCase(java.util.Locale.ENGLISH), entry_tSalesforceOutput_5.getValue());
			break;
		}
	}
}

 

ok_Hash.put("tSalesforceOutput_5", true);
end_Hash.put("tSalesforceOutput_5", System.currentTimeMillis());




/**
 * [tSalesforceOutput_5 end ] stop
 */
	
	/**
	 * [tSalesforceOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_5";

	

                row20 = null;
            	if (writer_tSalesforceOutput_5 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
					org.talend.components.api.component.runtime.WriterWithFeedback writerWithFeedbackMain_tSalesforceOutput_5 = (org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_5;
					writerWithFeedbackMain_tSalesforceOutput_5 = new org.talend.codegen.flowvariables.runtime.FlowVariablesWriter(writerWithFeedbackMain_tSalesforceOutput_5, container_tSalesforceOutput_5);
					java.lang.Iterable<?> outgoingRecs_tSalesforceOutput_5 = writerWithFeedbackMain_tSalesforceOutput_5.getSuccessfulWrites();
                    java.util.Iterator outgoingMainRecords_tSalesforceOutput_5 = outgoingRecs_tSalesforceOutput_5.iterator();
                    Object outgoingMain_tSalesforceOutput_5 = null;
                    if (outgoingMainRecords_tSalesforceOutput_5.hasNext()) {
                    	outgoingMainRecordsList_tSalesforceOutput_5 = outgoingRecs_tSalesforceOutput_5;
                    }
              	}
            	outgoingMainRecordsIt_tSalesforceOutput_5 = outgoingMainRecordsList_tSalesforceOutput_5.iterator();
            	while(outgoingMainRecordsIt_tSalesforceOutput_5.hasNext()) { //Start of data processing while block
            		
            			if(outgoingMainRecordsIt_tSalesforceOutput_5.hasNext()) {
            				row20 = new row20Struct();
            				Object outgoingMain_tSalesforceOutput_5 = outgoingMainRecordsIt_tSalesforceOutput_5.next();
            				
        // Construct the factory once when the first data arrives.
        if (factory_tSalesforceOutput_5OutMain == null) {
            factory_tSalesforceOutput_5OutMain = (org.talend.daikon.avro.converter.IndexedRecordConverter<Object, ? extends org.apache.avro.generic.IndexedRecord>)
                    new org.talend.daikon.avro.AvroRegistry()
                            .createIndexedRecordConverter(outgoingMain_tSalesforceOutput_5.getClass());
        }

        // Enforce the outgoing schema on the input.
        outgoingEnforcer_tSalesforceOutput_5OutMain.setWrapped(factory_tSalesforceOutput_5OutMain.convertToAvro(outgoingMain_tSalesforceOutput_5));
                Object columnValue_0_tSalesforceOutput_5OutMain = outgoingEnforcer_tSalesforceOutput_5OutMain.get(0);
                        row20.Id = (String) (columnValue_0_tSalesforceOutput_5OutMain);
                Object columnValue_1_tSalesforceOutput_5OutMain = outgoingEnforcer_tSalesforceOutput_5OutMain.get(1);
                        row20.Image_5_Link_Haddad__c = (String) (columnValue_1_tSalesforceOutput_5OutMain);
                Object columnValue_2_tSalesforceOutput_5OutMain = outgoingEnforcer_tSalesforceOutput_5OutMain.get(2);
                        row20.Image_5_Link_Type__c = (String) (columnValue_2_tSalesforceOutput_5OutMain);
            			} else {
            				row20 = null;
            			}
            		

 



/**
 * [tSalesforceOutput_5 process_data_begin ] stop
 */
// Start of branch "row20"
if(row20 != null) { 



	
	/**
	 * [tLogRow_5 main ] start
	 */

	

	
	
	currentComponent="tLogRow_5";

	
///////////////////////		
						



				strBuffer_tLogRow_5 = new StringBuilder();




   				
	    		if(row20.Id != null) { //              
                    							
       
				strBuffer_tLogRow_5.append(
				                String.valueOf(row20.Id)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_5.append("|");
    			


   				
	    		if(row20.Image_5_Link_Haddad__c != null) { //              
                    							
       
				strBuffer_tLogRow_5.append(
				                String.valueOf(row20.Image_5_Link_Haddad__c)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_5.append("|");
    			


   				
	    		if(row20.Image_5_Link_Type__c != null) { //              
                    							
       
				strBuffer_tLogRow_5.append(
				                String.valueOf(row20.Image_5_Link_Type__c)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_5 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_5 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_5);
                    }
                    consoleOut_tLogRow_5.println(strBuffer_tLogRow_5.toString());
                    consoleOut_tLogRow_5.flush();
                    nb_line_tLogRow_5++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_5++;

/**
 * [tLogRow_5 main ] stop
 */
	
	/**
	 * [tLogRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_5";

	

 



/**
 * [tLogRow_5 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_5";

	

 



/**
 * [tLogRow_5 process_data_end ] stop
 */

} // End of branch "row20"




	
	/**
	 * [tSalesforceOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_5";

	
	} //end of data processing while block
	if (writer_tSalesforceOutput_5 instanceof org.talend.components.api.component.runtime.WriterWithFeedback) {
    	((org.talend.components.api.component.runtime.WriterWithFeedback) writer_tSalesforceOutput_5).cleanWrites();
    }
	

 



/**
 * [tSalesforceOutput_5 process_data_end ] stop
 */

	
	/**
	 * [tLogRow_5 end ] start
	 */

	

	
	
	currentComponent="tLogRow_5";

	


//////
//////
globalMap.put("tLogRow_5_NB_LINE",nb_line_tLogRow_5);

///////////////////////    			

 

ok_Hash.put("tLogRow_5", true);
end_Hash.put("tLogRow_5", System.currentTimeMillis());




/**
 * [tLogRow_5 end ] stop
 */















				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_8"
					     			globalMap.remove("tHash_Lookup_row24"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row18"); 
				     			
					     			//free memory for "tMap_6"
					     			globalMap.remove("tHash_Lookup_row16"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row14"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row9"); 
				     			
				try{
					
	
	/**
	 * [tSalesforceInput_1 finally ] start
	 */

	

	
	
	currentComponent="tSalesforceInput_1";

	
// finally of generic


if(resourceMap.get("finish_tSalesforceInput_1")==null){
    if(resourceMap.get("reader_tSalesforceInput_1")!=null){
		try {
			((org.talend.components.api.component.runtime.Reader)resourceMap.get("reader_tSalesforceInput_1")).close();
		} catch (java.io.IOException e_tSalesforceInput_1) {
			String errorMessage_tSalesforceInput_1 = "failed to release the resource in tSalesforceInput_1 :" + e_tSalesforceInput_1.getMessage();
			System.err.println(errorMessage_tSalesforceInput_1);
		}
	}
}
 



/**
 * [tSalesforceInput_1 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tUniqRow_3 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";

	

 



/**
 * [tUniqRow_3 finally ] stop
 */

	
	/**
	 * [tSalesforceOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_1";

	
// finally of generic


if(resourceMap.get("finish_tSalesforceOutput_1")==null){
    if(resourceMap.get("writer_tSalesforceOutput_1")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tSalesforceOutput_1")).close();
		} catch (java.io.IOException e_tSalesforceOutput_1) {
			String errorMessage_tSalesforceOutput_1 = "failed to release the resource in tSalesforceOutput_1 :" + e_tSalesforceOutput_1.getMessage();
			System.err.println(errorMessage_tSalesforceOutput_1);
		}
	}
}
 



/**
 * [tSalesforceOutput_1 finally ] stop
 */

	
	/**
	 * [tLogRow_1 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_1";

	

 



/**
 * [tLogRow_1 finally ] stop
 */













	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tUniqRow_4 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";

	

 



/**
 * [tUniqRow_4 finally ] stop
 */

	
	/**
	 * [tSalesforceOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_2";

	
// finally of generic


if(resourceMap.get("finish_tSalesforceOutput_2")==null){
    if(resourceMap.get("writer_tSalesforceOutput_2")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tSalesforceOutput_2")).close();
		} catch (java.io.IOException e_tSalesforceOutput_2) {
			String errorMessage_tSalesforceOutput_2 = "failed to release the resource in tSalesforceOutput_2 :" + e_tSalesforceOutput_2.getMessage();
			System.err.println(errorMessage_tSalesforceOutput_2);
		}
	}
}
 



/**
 * [tSalesforceOutput_2 finally ] stop
 */

	
	/**
	 * [tLogRow_2 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_2";

	

 



/**
 * [tLogRow_2 finally ] stop
 */













	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tUniqRow_5 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_5";

	

 



/**
 * [tUniqRow_5 finally ] stop
 */

	
	/**
	 * [tSalesforceOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_3";

	
// finally of generic


if(resourceMap.get("finish_tSalesforceOutput_3")==null){
    if(resourceMap.get("writer_tSalesforceOutput_3")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tSalesforceOutput_3")).close();
		} catch (java.io.IOException e_tSalesforceOutput_3) {
			String errorMessage_tSalesforceOutput_3 = "failed to release the resource in tSalesforceOutput_3 :" + e_tSalesforceOutput_3.getMessage();
			System.err.println(errorMessage_tSalesforceOutput_3);
		}
	}
}
 



/**
 * [tSalesforceOutput_3 finally ] stop
 */

	
	/**
	 * [tLogRow_3 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_3";

	

 



/**
 * [tLogRow_3 finally ] stop
 */













	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";

	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tUniqRow_6 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_6";

	

 



/**
 * [tUniqRow_6 finally ] stop
 */

	
	/**
	 * [tSalesforceOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_4";

	
// finally of generic


if(resourceMap.get("finish_tSalesforceOutput_4")==null){
    if(resourceMap.get("writer_tSalesforceOutput_4")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tSalesforceOutput_4")).close();
		} catch (java.io.IOException e_tSalesforceOutput_4) {
			String errorMessage_tSalesforceOutput_4 = "failed to release the resource in tSalesforceOutput_4 :" + e_tSalesforceOutput_4.getMessage();
			System.err.println(errorMessage_tSalesforceOutput_4);
		}
	}
}
 



/**
 * [tSalesforceOutput_4 finally ] stop
 */

	
	/**
	 * [tLogRow_4 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_4";

	

 



/**
 * [tLogRow_4 finally ] stop
 */













	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";

	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tUniqRow_7 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_7";

	

 



/**
 * [tUniqRow_7 finally ] stop
 */

	
	/**
	 * [tSalesforceOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tSalesforceOutput_5";

	
// finally of generic


if(resourceMap.get("finish_tSalesforceOutput_5")==null){
    if(resourceMap.get("writer_tSalesforceOutput_5")!=null){
		try {
			((org.talend.components.api.component.runtime.Writer)resourceMap.get("writer_tSalesforceOutput_5")).close();
		} catch (java.io.IOException e_tSalesforceOutput_5) {
			String errorMessage_tSalesforceOutput_5 = "failed to release the resource in tSalesforceOutput_5 :" + e_tSalesforceOutput_5.getMessage();
			System.err.println(errorMessage_tSalesforceOutput_5);
		}
	}
}
 



/**
 * [tSalesforceOutput_5 finally ] stop
 */

	
	/**
	 * [tLogRow_5 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_5";

	

 



/**
 * [tLogRow_5 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tSalesforceInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row27Struct implements routines.system.IPersistableComparableLookupRow<row27Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FileName;

				public String getFileName () {
					return this.FileName;
				}
				
			    public String AssetName;

				public String getAssetName () {
					return this.AssetName;
				}
				
			    public String StyleCode;

				public String getStyleCode () {
					return this.StyleCode;
				}
				
			    public String ColorCode;

				public String getColorCode () {
					return this.ColorCode;
				}
				
			    public String NewTags;

				public String getNewTags () {
					return this.NewTags;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.AssetName == null) ? 0 : this.AssetName.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row27Struct other = (row27Struct) obj;
		
						if (this.AssetName == null) {
							if (other.AssetName != null)
								return false;
						
						} else if (!this.AssetName.equals(other.AssetName))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row27Struct other) {

		other.FileName = this.FileName;
	            other.AssetName = this.AssetName;
	            other.StyleCode = this.StyleCode;
	            other.ColorCode = this.ColorCode;
	            other.NewTags = this.NewTags;
	            
	}

	public void copyKeysDataTo(row27Struct other) {

		other.AssetName = this.AssetName;
	            	
	}




	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.AssetName = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.AssetName,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.FileName = readString(dis,ois);
					
						this.StyleCode = readString(dis,ois);
					
						this.ColorCode = readString(dis,ois);
					
						this.NewTags = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.FileName, dos, oos);
					
						writeString(this.StyleCode, dos, oos);
					
						writeString(this.ColorCode, dos, oos);
					
						writeString(this.NewTags, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FileName="+FileName);
		sb.append(",AssetName="+AssetName);
		sb.append(",StyleCode="+StyleCode);
		sb.append(",ColorCode="+ColorCode);
		sb.append(",NewTags="+NewTags);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.AssetName, other.AssetName);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tFileInputDelimited_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row27Struct row27 = new row27Struct();




	
	/**
	 * [tAdvancedHash_row27 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row27", false);
		start_Hash.put("tAdvancedHash_row27", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row27";

	
		int tos_count_tAdvancedHash_row27 = 0;
		

			   		// connection name:row27
			   		// source node:tFileInputDelimited_7 - inputs:(after_tFileInputDelimited_1) outputs:(row27,row27) | target node:tAdvancedHash_row27 - inputs:(row27) outputs:()
			   		// linked node: tMap_1 - inputs:(row4,row27) outputs:(out3,out4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row27 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct> tHash_Lookup_row27 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row27Struct>getLookup(matchingModeEnum_row27);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row27", tHash_Lookup_row27);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row27 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_7", false);
		start_Hash.put("tFileInputDelimited_7", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_7";

	
		int tos_count_tFileInputDelimited_7 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_7 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_7 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_7 = null;
				int limit_tFileInputDelimited_7 = -1;
				try{
					
						Object filename_tFileInputDelimited_7 = "C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/input"+ "/FileAssetsNameForSelection.csv";
						if(filename_tFileInputDelimited_7 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_7 = 0, random_value_tFileInputDelimited_7 = -1;
			if(footer_value_tFileInputDelimited_7 >0 || random_value_tFileInputDelimited_7 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_7 = new org.talend.fileprocess.FileInputDelimited("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/input"+ "/FileAssetsNameForSelection.csv", "ISO-8859-15",";","\n",true,0,0,
									limit_tFileInputDelimited_7
								,-1, false);
						} catch(java.lang.Exception e) {
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_7!=null && fid_tFileInputDelimited_7.nextRecord()) {
						rowstate_tFileInputDelimited_7.reset();
						
			    						row27 = null;			
									
			    						row27 = null;			
												
									boolean whetherReject_tFileInputDelimited_7 = false;
									row27 = new row27Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_7 = 0;
				
					columnIndexWithD_tFileInputDelimited_7 = 0;
					
							row27.FileName = fid_tFileInputDelimited_7.get(columnIndexWithD_tFileInputDelimited_7);
						
				
					columnIndexWithD_tFileInputDelimited_7 = 1;
					
							row27.AssetName = fid_tFileInputDelimited_7.get(columnIndexWithD_tFileInputDelimited_7);
						
				
					columnIndexWithD_tFileInputDelimited_7 = 2;
					
							row27.StyleCode = fid_tFileInputDelimited_7.get(columnIndexWithD_tFileInputDelimited_7);
						
				
					columnIndexWithD_tFileInputDelimited_7 = 3;
					
							row27.ColorCode = fid_tFileInputDelimited_7.get(columnIndexWithD_tFileInputDelimited_7);
						
				
					columnIndexWithD_tFileInputDelimited_7 = 4;
					
							row27.NewTags = fid_tFileInputDelimited_7.get(columnIndexWithD_tFileInputDelimited_7);
						
				
				
										
										if(rowstate_tFileInputDelimited_7.getException()!=null) {
											throw rowstate_tFileInputDelimited_7.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
			        					whetherReject_tFileInputDelimited_7 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row27 = null;
			                				
			    					}
								

 



/**
 * [tFileInputDelimited_7 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_7 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_7";

	

 


	tos_count_tFileInputDelimited_7++;

/**
 * [tFileInputDelimited_7 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_7";

	

 



/**
 * [tFileInputDelimited_7 process_data_begin ] stop
 */
// Start of branch "row27"
if(row27 != null) { 



	
	/**
	 * [tAdvancedHash_row27 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";

	


			   
			   

					row27Struct row27_HashRow = new row27Struct();
		   	   	   
				
				row27_HashRow.FileName = row27.FileName;
				
				row27_HashRow.AssetName = row27.AssetName;
				
				row27_HashRow.StyleCode = row27.StyleCode;
				
				row27_HashRow.ColorCode = row27.ColorCode;
				
				row27_HashRow.NewTags = row27.NewTags;
				
			tHash_Lookup_row27.put(row27_HashRow);
			
            




 


	tos_count_tAdvancedHash_row27++;

/**
 * [tAdvancedHash_row27 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";

	

 



/**
 * [tAdvancedHash_row27 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row27 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";

	

 



/**
 * [tAdvancedHash_row27 process_data_end ] stop
 */

} // End of branch "row27"




	
	/**
	 * [tFileInputDelimited_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_7";

	

 



/**
 * [tFileInputDelimited_7 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_7 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_7";

	



            }
            }finally{
                if(!((Object)("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/input"+ "/FileAssetsNameForSelection.csv") instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_7!=null){
                		fid_tFileInputDelimited_7.close();
                	}
                }
                if(fid_tFileInputDelimited_7!=null){
                	globalMap.put("tFileInputDelimited_7_NB_LINE", fid_tFileInputDelimited_7.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_7", true);
end_Hash.put("tFileInputDelimited_7", System.currentTimeMillis());




/**
 * [tFileInputDelimited_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row27 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";

	

tHash_Lookup_row27.endPut();

 

ok_Hash.put("tAdvancedHash_row27", true);
end_Hash.put("tAdvancedHash_row27", System.currentTimeMillis());




/**
 * [tAdvancedHash_row27 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_7 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_7";

	

 



/**
 * [tFileInputDelimited_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row27 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";

	

 



/**
 * [tAdvancedHash_row27 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_7_SUBPROCESS_STATE", 1);
	}
	


public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		

		

        }

		
			finally {}
		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
        }

			finally {}
		

    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String access_token;

				public String getAccess_token () {
					return this.access_token;
				}
				
			    public String token_type;

				public String getToken_type () {
					return this.token_type;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.access_token = readString(dis);
					
					this.token_type = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.access_token,dos);
					
					// String
				
						writeString(this.token_type,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("access_token="+access_token);
		sb.append(",token_type="+token_type);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class toSetVariableStruct implements routines.system.IPersistableRow<toSetVariableStruct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String access_token;

				public String getAccess_token () {
					return this.access_token;
				}
				
			    public String token_type;

				public String getToken_type () {
					return this.token_type;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.access_token = readString(dis);
					
					this.token_type = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.access_token,dos);
					
					// String
				
						writeString(this.token_type,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("access_token="+access_token);
		sb.append(",token_type="+token_type);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(toSetVariableStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public String access_token;

				public String getAccess_token () {
					return this.access_token;
				}
				
			    public String instance_url;

				public String getInstance_url () {
					return this.instance_url;
				}
				
			    public String id;

				public String getId () {
					return this.id;
				}
				
			    public String token_type;

				public String getToken_type () {
					return this.token_type;
				}
				
			    public String issued_at;

				public String getIssued_at () {
					return this.issued_at;
				}
				
			    public String signature;

				public String getSignature () {
					return this.signature;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.access_token = readString(dis);
					
					this.instance_url = readString(dis);
					
					this.id = readString(dis);
					
					this.token_type = readString(dis);
					
					this.issued_at = readString(dis);
					
					this.signature = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.access_token,dos);
					
					// String
				
						writeString(this.instance_url,dos);
					
					// String
				
						writeString(this.id,dos);
					
					// String
				
						writeString(this.token_type,dos);
					
					// String
				
						writeString(this.issued_at,dos);
					
					// String
				
						writeString(this.signature,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("access_token="+access_token);
		sb.append(",instance_url="+instance_url);
		sb.append(",id="+id);
		sb.append(",token_type="+token_type);
		sb.append(",issued_at="+issued_at);
		sb.append(",signature="+signature);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public routines.system.Document body;

				public routines.system.Document getBody () {
					return this.body;
				}
				
			    public Integer statusCode;

				public Integer getStatusCode () {
					return this.statusCode;
				}
				
			    public String string;

				public String getString () {
					return this.string;
				}
				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
						this.body = (routines.system.Document) dis.readObject();
					
						this.statusCode = readInteger(dis);
					
					this.string = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Document
				
       			    	dos.writeObject(this.body);
					
					// Integer
				
						writeInteger(this.statusCode,dos);
					
					// String
				
						writeString(this.string,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("body="+String.valueOf(body));
		sb.append(",statusCode="+String.valueOf(statusCode));
		sb.append(",string="+string);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tRESTClient_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRESTClient_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();
row3Struct row3 = new row3Struct();
toSetVariableStruct toSetVariable = new toSetVariableStruct();
toSetVariableStruct row15 = toSetVariable;
row26Struct row26 = new row26Struct();








	
	/**
	 * [tFileCopy_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileCopy_1", false);
		start_Hash.put("tFileCopy_1", System.currentTimeMillis());
		
	
	currentComponent="tFileCopy_1";

	
		int tos_count_tFileCopy_1 = 0;
		

 



/**
 * [tFileCopy_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";

	
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tSetGlobalVar_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tSetGlobalVar_1", false);
		start_Hash.put("tSetGlobalVar_1", System.currentTimeMillis());
		
	
	currentComponent="tSetGlobalVar_1";

	
		int tos_count_tSetGlobalVar_1 = 0;
		

 



/**
 * [tSetGlobalVar_1 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";

	
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
toSetVariableStruct toSetVariable_tmp = new toSetVariableStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tExtractJSONFields_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tExtractJSONFields_2", false);
		start_Hash.put("tExtractJSONFields_2", System.currentTimeMillis());
		
	
	currentComponent="tExtractJSONFields_2";

	
		int tos_count_tExtractJSONFields_2 = 0;
		

int nb_line_tExtractJSONFields_2 = 0;
String jsonStr_tExtractJSONFields_2 = "";

	

class JsonPathCache_tExtractJSONFields_2 {
	final java.util.Map<String,com.jayway.jsonpath.JsonPath> jsonPathString2compiledJsonPath = new java.util.HashMap<String,com.jayway.jsonpath.JsonPath>();
	
	public com.jayway.jsonpath.JsonPath getCompiledJsonPath(String jsonPath) {
		if(jsonPathString2compiledJsonPath.containsKey(jsonPath)) {
			return jsonPathString2compiledJsonPath.get(jsonPath);
		} else {
			com.jayway.jsonpath.JsonPath compiledLoopPath = com.jayway.jsonpath.JsonPath.compile(jsonPath);
			jsonPathString2compiledJsonPath.put(jsonPath,compiledLoopPath);
			return compiledLoopPath;
		}
	}
}

JsonPathCache_tExtractJSONFields_2 jsonPathCache_tExtractJSONFields_2 = new JsonPathCache_tExtractJSONFields_2();

 



/**
 * [tExtractJSONFields_2 begin ] stop
 */



	
	/**
	 * [tRESTClient_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tRESTClient_2", false);
		start_Hash.put("tRESTClient_2", System.currentTimeMillis());
		
	
	currentComponent="tRESTClient_2";

	
		int tos_count_tRESTClient_2 = 0;
		

 



/**
 * [tRESTClient_2 begin ] stop
 */
	
	/**
	 * [tRESTClient_2 main ] start
	 */

	

	
	
	currentComponent="tRESTClient_2";

	
	row2 = null;

// expected response body
javax.ws.rs.core.Response responseDoc_tRESTClient_2 = null;

try {
	// request body
	org.dom4j.Document requestDoc_tRESTClient_2 = null;
	String requestString_tRESTClient_2 = null;

	Object requestBody_tRESTClient_2 = requestDoc_tRESTClient_2 != null ? requestDoc_tRESTClient_2 : requestString_tRESTClient_2;

	

    //resposne class name
	Class<?> responseClass_tRESTClient_2
		= String.class;

	// create web client instance
	org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean factoryBean_tRESTClient_2 =
			new org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean();

	boolean inOSGi = routines.system.BundleUtils.inOSGi();

	final java.util.List<org.apache.cxf.feature.Feature> features_tRESTClient_2 =
			new java.util.ArrayList<org.apache.cxf.feature.Feature>();

	
		String url = "https://haddadbrand.bynder.com/v6/authentication/oauth2/token";
		// {baseUri}tRESTClient
		factoryBean_tRESTClient_2.setServiceName(new javax.xml.namespace.QName(url, "tRESTClient"));
		factoryBean_tRESTClient_2.setAddress(url);
	

	

	

	

	factoryBean_tRESTClient_2.setFeatures(features_tRESTClient_2);


	java.util.List<Object> providers_tRESTClient_2 = new java.util.ArrayList<Object>();
	providers_tRESTClient_2.add(new org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider() {
		// workaround for https://jira.talendforge.org/browse/TESB-7276
		public org.dom4j.Document readFrom(Class<org.dom4j.Document> cls,
											java.lang.reflect.Type type,
											java.lang.annotation.Annotation[] anns,
											javax.ws.rs.core.MediaType mt,
											javax.ws.rs.core.MultivaluedMap<String, String> headers,
											java.io.InputStream is)
				throws IOException, javax.ws.rs.WebApplicationException {
			String contentLength = headers.getFirst("Content-Length");
			if (!org.apache.cxf.common.util.StringUtils.isEmpty(contentLength)
					&& Integer.valueOf(contentLength) <= 0) {
				try {
					return org.dom4j.DocumentHelper.parseText("<root/>");
				} catch (org.dom4j.DocumentException e_tRESTClient_2) {
					e_tRESTClient_2.printStackTrace();
				}
				return null;
			}
			return super.readFrom(cls, type, anns, mt, headers, is);
		}
	});
	org.apache.cxf.jaxrs.provider.json.JSONProvider jsonProvider_tRESTClient_2 =
			new org.apache.cxf.jaxrs.provider.json.JSONProvider();
		jsonProvider_tRESTClient_2.setIgnoreNamespaces(true);
		jsonProvider_tRESTClient_2.setAttributesToElements(true);
	
	
		jsonProvider_tRESTClient_2.setSupportUnwrapped(true);
		jsonProvider_tRESTClient_2.setWrapperName("root");
	
	
		jsonProvider_tRESTClient_2.setDropRootElement(false);
		jsonProvider_tRESTClient_2.setConvertTypesToStrings(true);
	providers_tRESTClient_2.add(jsonProvider_tRESTClient_2);
	factoryBean_tRESTClient_2.setProviders(providers_tRESTClient_2);
	factoryBean_tRESTClient_2.setTransportId("http://cxf.apache.org/transports/http");

	boolean use_auth_tRESTClient_2 = false;
	if (use_auth_tRESTClient_2 && "SAML".equals("BASIC")) {
		if (!inOSGi) {
			throw new IllegalArgumentException("SAML based security scenarios are not supported in Studio (standalone)");
		}
		// set SAML Token authentication
		
		 
	final String decryptedPassword_tRESTClient_2 = routines.system.PasswordEncryptUtil.decryptPassword("ENC:[OpH10JhpsAQG97GwfXUXU6rwz6SXyrxKzkN1defyxdYBM8GCQps=]");

		org.apache.cxf.ws.security.trust.STSClient stsClient =
			org.talend.esb.security.saml.STSClientUtils.createSTSClient(factoryBean_tRESTClient_2.getBus(),
				"otman.nikraj@haddadeurope.com.partial", decryptedPassword_tRESTClient_2);
		
		org.talend.esb.security.saml.SAMLRESTUtils.configureClient(factoryBean_tRESTClient_2, stsClient);
	}

	org.apache.cxf.jaxrs.client.WebClient webClient_tRESTClient_2 = factoryBean_tRESTClient_2.createWebClient();

	// set request path
	webClient_tRESTClient_2.path("");

	// set connection properties
	org.apache.cxf.jaxrs.client.ClientConfiguration clientConfig_tRESTClient_2 = org.apache.cxf.jaxrs.client.WebClient.getConfig(webClient_tRESTClient_2);
	org.apache.cxf.transport.http.HTTPConduit conduit_tRESTClient_2 = clientConfig_tRESTClient_2.getHttpConduit();

    if (clientConfig_tRESTClient_2.getEndpoint() != null
            && clientConfig_tRESTClient_2.getEndpoint().getEndpointInfo() != null) {
        clientConfig_tRESTClient_2.getEndpoint().getEndpointInfo().setProperty("enable.webclient.operation.reporting",
                                                                          true);
    }

	

	if (use_auth_tRESTClient_2 && "BASIC".equals("BASIC")) {
		// set BASIC auth
		
		 
	final String decryptedPassword_tRESTClient_2 = routines.system.PasswordEncryptUtil.decryptPassword("ENC:[xMaIE8hPMTXyWOCxlQVfQXDXajNxf9j+PiELJCcHrE50M0dnQ/0=]");

		org.apache.cxf.configuration.security.AuthorizationPolicy authPolicy_tRESTClient_2 = new org.apache.cxf.configuration.security.AuthorizationPolicy();
			authPolicy_tRESTClient_2.setAuthorizationType("Basic");
			authPolicy_tRESTClient_2.setUserName("otman.nikraj@haddadeurope.com.partial");
			authPolicy_tRESTClient_2.setPassword(decryptedPassword_tRESTClient_2);
		conduit_tRESTClient_2.setAuthorization(authPolicy_tRESTClient_2);
	} else if (use_auth_tRESTClient_2 && "HTTP Digest".equals("BASIC")) {
		// set Digest auth
		
		 
	final String decryptedPassword_tRESTClient_2 = routines.system.PasswordEncryptUtil.decryptPassword("ENC:[JvA0Kuw8H60XqMcT8KnhS9kHs7PmJeJAHlzkVBne4yHcMnaxIpg=]");

		org.apache.cxf.configuration.security.AuthorizationPolicy authPolicy_tRESTClient_2 = new org.apache.cxf.configuration.security.AuthorizationPolicy();
		authPolicy_tRESTClient_2.setAuthorizationType("Digest");
		authPolicy_tRESTClient_2.setUserName("otman.nikraj@haddadeurope.com.partial");
		authPolicy_tRESTClient_2.setPassword(decryptedPassword_tRESTClient_2);
		conduit_tRESTClient_2.setAuthorization(authPolicy_tRESTClient_2);
	}

	if (!inOSGi) {
		conduit_tRESTClient_2.getClient().setReceiveTimeout((long)(60 * 1000L));
		conduit_tRESTClient_2.getClient().setConnectionTimeout((long)(30 * 1000L));
		boolean use_proxy_tRESTClient_2 = false;
		if (use_proxy_tRESTClient_2) {
			
			 
	final String decryptedPassword_tRESTClient_2 = routines.system.PasswordEncryptUtil.decryptPassword("ENC:[J8GCAL5S9SbHlD66buqYeTHJclJgehw1IzLWGA==]");

			conduit_tRESTClient_2.getClient().setProxyServer("61.163.92.4");
			conduit_tRESTClient_2.getClient().setProxyServerPort(Integer.valueOf(8080));
			conduit_tRESTClient_2.getProxyAuthorization().setUserName("");
			conduit_tRESTClient_2.getProxyAuthorization().setPassword(decryptedPassword_tRESTClient_2);
		}
	}
	
	

	

	
		// set Content-Type
		webClient_tRESTClient_2.type("application/x-www-form-urlencoded");
	

	
		// set Accept-Type
		webClient_tRESTClient_2.accept("*/*");
	

	
		// set optional query and header properties if any
	
		webClient_tRESTClient_2.header("Accept", "application/json");
	
		webClient_tRESTClient_2.header("Content-Type", "application/x-www-form-urlencoded");
	
	if (use_auth_tRESTClient_2 && "OAUTH2_BEARER".equals("BASIC")) {
		// set oAuth2 bearer token
		webClient_tRESTClient_2.header("Authorization", "Bearer " + "3MVG904d7VkkD2aPrr0Zo7vyDfR3BCIidArA2fM9ScQUYkPPCOmOthm7TndYB9pZJPFlDTAIJZNkwl7X_HFWx");
	}
	
	if (use_auth_tRESTClient_2 && "OIDC_PASSWORD_GRANT".equals("BASIC")) {
 
	final String decryptedPassword_tRESTClient_2 = routines.system.PasswordEncryptUtil.decryptPassword("ENC:[pUAu0DfJNRZrCzJC6zq4ZEZgULYH8UYZc7cFOdrIsK2fGsj90mE=]");

        String username_tRESTClient_2 = "otman.nikraj@haddadeurope.com.partial";
        String password_tRESTClient_2 = decryptedPassword_tRESTClient_2;

        String bearerHeader_tRESTClient_2 = null;

        try {
			if (!inOSGi) {
				org.springframework.context.support.ClassPathXmlApplicationContext context_tRESTClient_2 =
					new org.springframework.context.support.ClassPathXmlApplicationContext("META-INF/tesb/oidc-context.xml");
				org.talend.esb.security.oidc.OidcConfiguration oidcConfiguration_tRESTClient_2 = context_tRESTClient_2.getBean(org.talend.esb.security.oidc.OidcConfiguration.class);
				bearerHeader_tRESTClient_2 = org.talend.esb.security.oidc.OidcClientUtils.oidcClientBearer(username_tRESTClient_2, password_tRESTClient_2, oidcConfiguration_tRESTClient_2);
			}else{
				bearerHeader_tRESTClient_2 = org.talend.esb.security.oidc.OidcClientUtils.oidcClientBearer(username_tRESTClient_2, password_tRESTClient_2);
			}
		} catch (Exception ex) {
            throw new javax.ws.rs.WebApplicationException("Failed to get OIDC access token: ", ex);
        }

		webClient_tRESTClient_2.header("Authorization", bearerHeader_tRESTClient_2);
	}
    
	// if FORM request then capture query parameters into Form, otherwise set them as queries
	
		javax.ws.rs.core.Form form_tRESTClient_2 = new javax.ws.rs.core.Form();
		
			form_tRESTClient_2.param("response_type" ,"code");
		
			form_tRESTClient_2.param("client_id" ,"e088065f-ea19-4863-a605-5ba3f35ec9f3");
		
			form_tRESTClient_2.param("client_secret" ,"d6d1804a-be89-4d1b-8d4b-2fc39f3eea3b");
		
			form_tRESTClient_2.param("username" ,"hanaa.beniaz@haddadeurope.com");
		
			form_tRESTClient_2.param("grant_type" ,"client_credentials");
		
			form_tRESTClient_2.param("redirect_uri" ,"https://haddadbrand.bynder.com");
		
		requestBody_tRESTClient_2 = form_tRESTClient_2;
	


	try {
		// start send request
		
			
				responseDoc_tRESTClient_2 = webClient_tRESTClient_2.post(requestBody_tRESTClient_2);
			
		


		int webClientResponseStatus_tRESTClient_2 = webClient_tRESTClient_2.getResponse().getStatus();
		if (webClientResponseStatus_tRESTClient_2 >= 300) {
			throw new javax.ws.rs.WebApplicationException(webClient_tRESTClient_2.getResponse());
		}

		
			if (row2 == null) {
				row2 = new row2Struct();
			}

			row2.statusCode = webClientResponseStatus_tRESTClient_2;
			
				
				Object responseObj_tRESTClient_2 = null;
				if(responseDoc_tRESTClient_2 != null && responseDoc_tRESTClient_2.hasEntity()){
					responseObj_tRESTClient_2 = responseDoc_tRESTClient_2.readEntity(responseClass_tRESTClient_2);
				
				if(responseObj_tRESTClient_2 != null){
					if (responseClass_tRESTClient_2 == String.class) {
						row2.string = (String) responseObj_tRESTClient_2;
					} else {
						routines.system.Document responseTalendDoc_tRESTClient_2 = null;
						if (null != responseObj_tRESTClient_2) {
							responseTalendDoc_tRESTClient_2 = new routines.system.Document();
							responseTalendDoc_tRESTClient_2.setDocument((org.dom4j.Document) responseObj_tRESTClient_2);
						}
						row2.body = responseTalendDoc_tRESTClient_2;
					}
				}
			}
			


			globalMap.put("tRESTClient_2_HEADERS", webClient_tRESTClient_2.getResponse().getHeaders());
			
			
			
			// handle "oneway" for PUT, POST and PATCH with empty response payload
			if (webClientResponseStatus_tRESTClient_2 == 202 && responseObj_tRESTClient_2 == null){
				row2.string = "";
				return;
			}
			
		

	} catch (javax.ws.rs.WebApplicationException ex_tRESTClient_2) {
		
			throw ex_tRESTClient_2;
		
	}

} catch(Exception e_tRESTClient_2) {
	
		throw new TalendException(e_tRESTClient_2, currentComponent, globalMap);
	
}


 


	tos_count_tRESTClient_2++;

/**
 * [tRESTClient_2 main ] stop
 */
	
	/**
	 * [tRESTClient_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRESTClient_2";

	

 



/**
 * [tRESTClient_2 process_data_begin ] stop
 */
// Start of branch "row2"
if(row2 != null) { 



	
	/**
	 * [tExtractJSONFields_2 main ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";

	

            if(row2.string!=null){// C_01
                jsonStr_tExtractJSONFields_2 = row2.string.toString();
   
row3 = null;

	

String loopPath_tExtractJSONFields_2 = "$";
java.util.List<Object> resultset_tExtractJSONFields_2 = new java.util.ArrayList<Object>();

boolean isStructError_tExtractJSONFields_2 = true;
com.jayway.jsonpath.ReadContext document_tExtractJSONFields_2 = null;
try {
	document_tExtractJSONFields_2 = com.jayway.jsonpath.JsonPath.parse(jsonStr_tExtractJSONFields_2);
	com.jayway.jsonpath.JsonPath compiledLoopPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(loopPath_tExtractJSONFields_2);
	Object result_tExtractJSONFields_2 = document_tExtractJSONFields_2.read(compiledLoopPath_tExtractJSONFields_2,net.minidev.json.JSONObject.class);
	if (result_tExtractJSONFields_2 instanceof net.minidev.json.JSONArray) {
		resultset_tExtractJSONFields_2 = (net.minidev.json.JSONArray) result_tExtractJSONFields_2;
	} else {
		resultset_tExtractJSONFields_2.add(result_tExtractJSONFields_2);
	}
	
	isStructError_tExtractJSONFields_2 = false;
} catch (java.lang.Exception ex_tExtractJSONFields_2) {
		System.err.println(ex_tExtractJSONFields_2.getMessage());
}

String jsonPath_tExtractJSONFields_2 = null;
com.jayway.jsonpath.JsonPath compiledJsonPath_tExtractJSONFields_2 = null;

Object value_tExtractJSONFields_2 = null;

Object root_tExtractJSONFields_2 = null;
for(int i_tExtractJSONFields_2=0; isStructError_tExtractJSONFields_2 || (i_tExtractJSONFields_2 < resultset_tExtractJSONFields_2.size());i_tExtractJSONFields_2++){
	if(!isStructError_tExtractJSONFields_2){
		Object row_tExtractJSONFields_2 = resultset_tExtractJSONFields_2.get(i_tExtractJSONFields_2);
            row3 = null;
	row3 = new row3Struct();
	nb_line_tExtractJSONFields_2++;
	try {
		jsonPath_tExtractJSONFields_2 = "$.access_token";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row3.access_token = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
			row3.access_token = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "$.instance_url";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row3.instance_url = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
			row3.instance_url = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "$.id";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row3.id = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
			row3.id = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "$.token_type";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row3.token_type = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
			row3.token_type = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "$.issued_at";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row3.issued_at = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
			row3.issued_at = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "$.signature";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row3.signature = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
			row3.signature = 

		null

;
		}	
	} catch (java.lang.Exception ex_tExtractJSONFields_2) {
		    System.err.println(ex_tExtractJSONFields_2.getMessage());
		    row3 = null;	
	}
	
	}
    
	isStructError_tExtractJSONFields_2 = false;
	
//}


 


	tos_count_tExtractJSONFields_2++;

/**
 * [tExtractJSONFields_2 main ] stop
 */
	
	/**
	 * [tExtractJSONFields_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";

	

 



/**
 * [tExtractJSONFields_2 process_data_begin ] stop
 */
// Start of branch "row3"
if(row3 != null) { 



	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_2 = false;
		  boolean mainRowRejected_tMap_2 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

toSetVariable = null;


// # Output table : 'toSetVariable'
toSetVariable_tmp.access_token = row3.access_token ;
toSetVariable_tmp.token_type = row3.token_type ;
toSetVariable = toSetVariable_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "toSetVariable"
if(toSetVariable != null) { 



	
	/**
	 * [tSetGlobalVar_1 main ] start
	 */

	

	
	
	currentComponent="tSetGlobalVar_1";

	

globalMap.put("tokentype", toSetVariable.token_type);
globalMap.put("accesstoken", toSetVariable.access_token);
globalMap.put("All_StyleColor", "");

 
     row15 = toSetVariable;


	tos_count_tSetGlobalVar_1++;

/**
 * [tSetGlobalVar_1 main ] stop
 */
	
	/**
	 * [tSetGlobalVar_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSetGlobalVar_1";

	

 



/**
 * [tSetGlobalVar_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";

	

    // code sample:
//
// multiply by 2 the row identifier
// row26.id = row15.id * 2;
//
// lowercase the name
// row26.name = row15.name.toLowerCase();
System.out.println("TEST OAUTH " + globalMap.get("tokentype")+ " " +globalMap.get("accesstoken") );


    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";

	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tFileCopy_1 main ] start
	 */

	

	
	
	currentComponent="tFileCopy_1";

	

 


        String srcFileName_tFileCopy_1 = "C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/input"+ "/FileAssetsName.csv";

		java.io.File srcFile_tFileCopy_1 = new java.io.File(srcFileName_tFileCopy_1);

		// here need check first, before mkdirs().
		if (!srcFile_tFileCopy_1.exists() || !srcFile_tFileCopy_1.isFile()) {
			String errorMessageFileDoesnotExistsOrIsNotAFile_tFileCopy_1 = String.format("The source File \"%s\" does not exist or is not a file.", srcFileName_tFileCopy_1);
				System.err.println(errorMessageFileDoesnotExistsOrIsNotAFile_tFileCopy_1);
		}
        String desDirName_tFileCopy_1 = "C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/input";

		String desFileName_tFileCopy_1 =  "FileAssetsNameForSelection.csv" ;

		if (desFileName_tFileCopy_1 != null && ("").equals(desFileName_tFileCopy_1.trim())){
			desFileName_tFileCopy_1 = "NewName.temp";
		}

		java.io.File desFile_tFileCopy_1 = new java.io.File(desDirName_tFileCopy_1, desFileName_tFileCopy_1);

		if (!srcFile_tFileCopy_1.getPath().equals(desFile_tFileCopy_1.getPath())  ) {
				java.io.File parentFile_tFileCopy_1 = desFile_tFileCopy_1.getParentFile();

				if (parentFile_tFileCopy_1 != null && !parentFile_tFileCopy_1.exists()) {
					parentFile_tFileCopy_1.mkdirs();
				}           
				try {
					org.talend.FileCopy.copyFile(srcFile_tFileCopy_1.getPath(), desFile_tFileCopy_1.getPath(), false);
				} catch (Exception e) {
						System.err.println("tFileCopy_1 " + e.getMessage());
				}

		}
		globalMap.put("tFileCopy_1_DESTINATION_FILEPATH",desFile_tFileCopy_1.getPath()); 
		globalMap.put("tFileCopy_1_DESTINATION_FILENAME",desFile_tFileCopy_1.getName()); 

		globalMap.put("tFileCopy_1_SOURCE_DIRECTORY", srcFile_tFileCopy_1.getParent());
		globalMap.put("tFileCopy_1_DESTINATION_DIRECTORY", desFile_tFileCopy_1.getParent());        
        

 


	tos_count_tFileCopy_1++;

/**
 * [tFileCopy_1 main ] stop
 */
	
	/**
	 * [tFileCopy_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileCopy_1";

	

 



/**
 * [tFileCopy_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileCopy_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileCopy_1";

	

 



/**
 * [tFileCopy_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";

	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */



	
	/**
	 * [tSetGlobalVar_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tSetGlobalVar_1";

	

 



/**
 * [tSetGlobalVar_1 process_data_end ] stop
 */

} // End of branch "toSetVariable"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 process_data_end ] stop
 */

} // End of branch "row3"

		// end for
	}


	
		} // C_01
	
	
	/**
	 * [tExtractJSONFields_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";

	

 



/**
 * [tExtractJSONFields_2 process_data_end ] stop
 */

} // End of branch "row2"




	
	/**
	 * [tRESTClient_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tRESTClient_2";

	

 



/**
 * [tRESTClient_2 process_data_end ] stop
 */
	
	/**
	 * [tRESTClient_2 end ] start
	 */

	

	
	
	currentComponent="tRESTClient_2";

	


if (globalMap.get("tRESTClient_2_NB_LINE") == null) {
	globalMap.put("tRESTClient_2_NB_LINE", 1);
}

// [tRESTCliend_end]
 

ok_Hash.put("tRESTClient_2", true);
end_Hash.put("tRESTClient_2", System.currentTimeMillis());




/**
 * [tRESTClient_2 end ] stop
 */

	
	/**
	 * [tExtractJSONFields_2 end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";

	
   globalMap.put("tExtractJSONFields_2_NB_LINE", nb_line_tExtractJSONFields_2);


 

ok_Hash.put("tExtractJSONFields_2", true);
end_Hash.put("tExtractJSONFields_2", System.currentTimeMillis());




/**
 * [tExtractJSONFields_2 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tSetGlobalVar_1 end ] start
	 */

	

	
	
	currentComponent="tSetGlobalVar_1";

	

 

ok_Hash.put("tSetGlobalVar_1", true);
end_Hash.put("tSetGlobalVar_1", System.currentTimeMillis());




/**
 * [tSetGlobalVar_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";

	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tFileCopy_1 end ] start
	 */

	

	
	
	currentComponent="tFileCopy_1";

	

 

ok_Hash.put("tFileCopy_1", true);
end_Hash.put("tFileCopy_1", System.currentTimeMillis());




/**
 * [tFileCopy_1 end ] stop
 */















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tRESTClient_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
							tFileInputDelimited_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRESTClient_2 finally ] start
	 */

	

	
	
	currentComponent="tRESTClient_2";

	

 



/**
 * [tRESTClient_2 finally ] stop
 */

	
	/**
	 * [tExtractJSONFields_2 finally ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";

	

 



/**
 * [tExtractJSONFields_2 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tSetGlobalVar_1 finally ] start
	 */

	

	
	
	currentComponent="tSetGlobalVar_1";

	

 



/**
 * [tSetGlobalVar_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";

	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tFileCopy_1 finally ] start
	 */

	

	
	
	currentComponent="tFileCopy_1";

	

 



/**
 * [tFileCopy_1 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRESTClient_2_SUBPROCESS_STATE", 1);
	}
	


public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}
				
			    public String pid;

				public String getPid () {
					return this.pid;
				}
				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}
				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}
				
			    public String project;

				public String getProject () {
					return this.project;
				}
				
			    public String job;

				public String getJob () {
					return this.job;
				}
				
			    public String context;

				public String getContext () {
					return this.context;
				}
				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}
				
			    public String message;

				public String getMessage () {
					return this.message;
				}
				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tLogCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row31Struct row31 = new row31Struct();




	
	/**
	 * [tFileOutputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_2", false);
		start_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_2";

	
		int tos_count_tFileOutputDelimited_2 = 0;
		

String fileName_tFileOutputDelimited_2 = "";
    fileName_tFileOutputDelimited_2 = (new java.io.File(context.errorFile)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_2 = null;
    String extension_tFileOutputDelimited_2 = null;
    String directory_tFileOutputDelimited_2 = null;
    if((fileName_tFileOutputDelimited_2.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") < fileName_tFileOutputDelimited_2.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        }
        directory_tFileOutputDelimited_2 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_2 = true;
    java.io.File filetFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
    globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
    if(filetFileOutputDelimited_2.exists()){
            throw new RuntimeException("The particular file \""+filetFileOutputDelimited_2.getAbsoluteFile() +
            "\" already exist. If you want to overwrite the file, please uncheck the" + 
            " \"Throw an error if the file already exist\" option in Advanced settings.");
        }
            int nb_line_tFileOutputDelimited_2 = 0;
            int splitedFileNo_tFileOutputDelimited_2 = 0;
            int currentRow_tFileOutputDelimited_2 = 0;

            final String OUT_DELIM_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_2:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_2:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_2 != null && directory_tFileOutputDelimited_2.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_2 = new java.io.File(directory_tFileOutputDelimited_2);
                        if(!dir_tFileOutputDelimited_2.exists()) {
                            dir_tFileOutputDelimited_2.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_2 = null;

                        java.io.File fileToDelete_tFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
                        if(fileToDelete_tFileOutputDelimited_2.exists()) {
                            fileToDelete_tFileOutputDelimited_2.delete();
                        }
                        outtFileOutputDelimited_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_2, false),"ISO-8859-15"));


        resourceMap.put("out_tFileOutputDelimited_2", outtFileOutputDelimited_2);
resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

 



/**
 * [tFileOutputDelimited_2 begin ] stop
 */



	
	/**
	 * [tLogCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogCatcher_1", false);
		start_Hash.put("tLogCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tLogCatcher_1";

	
		int tos_count_tLogCatcher_1 = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : tLogCatcher_1.getMessages()) {
		row31.type = lcm.getType();
		row31.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row31.priority = lcm.getPriority();
		row31.message = lcm.getMessage();
		row31.code = lcm.getCode();
		
		row31.moment = java.util.Calendar.getInstance().getTime();
	
    	row31.pid = pid;
		row31.root_pid = rootPid;
		row31.father_pid = fatherPid;
	
    	row31.project = projectName;
    	row31.job = jobName;
    	row31.context = contextStr;
    		
 



/**
 * [tLogCatcher_1 begin ] stop
 */
	
	/**
	 * [tLogCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	

 


	tos_count_tLogCatcher_1++;

/**
 * [tLogCatcher_1 main ] stop
 */
	
	/**
	 * [tLogCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	

 



/**
 * [tLogCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";

	


                    StringBuilder sb_tFileOutputDelimited_2 = new StringBuilder();
                            if(row31.moment != null) {
                        sb_tFileOutputDelimited_2.append(
                            FormatterUtils.format_Date(row31.moment, "yyyy-MM-dd HH:mm:ss")
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row31.pid != null) {
                        sb_tFileOutputDelimited_2.append(
                            row31.pid
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row31.root_pid != null) {
                        sb_tFileOutputDelimited_2.append(
                            row31.root_pid
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row31.father_pid != null) {
                        sb_tFileOutputDelimited_2.append(
                            row31.father_pid
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row31.project != null) {
                        sb_tFileOutputDelimited_2.append(
                            row31.project
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row31.job != null) {
                        sb_tFileOutputDelimited_2.append(
                            row31.job
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row31.context != null) {
                        sb_tFileOutputDelimited_2.append(
                            row31.context
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row31.priority != null) {
                        sb_tFileOutputDelimited_2.append(
                            row31.priority
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row31.type != null) {
                        sb_tFileOutputDelimited_2.append(
                            row31.type
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row31.origin != null) {
                        sb_tFileOutputDelimited_2.append(
                            row31.origin
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row31.message != null) {
                        sb_tFileOutputDelimited_2.append(
                            row31.message
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row31.code != null) {
                        sb_tFileOutputDelimited_2.append(
                            row31.code
                        );
                            }
                    sb_tFileOutputDelimited_2.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);


                    nb_line_tFileOutputDelimited_2++;
                    resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

                        outtFileOutputDelimited_2.write(sb_tFileOutputDelimited_2.toString());




 


	tos_count_tFileOutputDelimited_2++;

/**
 * [tFileOutputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";

	

 



/**
 * [tFileOutputDelimited_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";

	

 



/**
 * [tFileOutputDelimited_2 process_data_end ] stop
 */



	
	/**
	 * [tLogCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	

 



/**
 * [tLogCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tLogCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	
	}
} catch (Exception e_tLogCatcher_1) {
	logIgnoredError(String.format("tLogCatcher_1 - tLogCatcher failed to process log message(s) due to internal error: %s", e_tLogCatcher_1), e_tLogCatcher_1);
}

 

ok_Hash.put("tLogCatcher_1", true);
end_Hash.put("tLogCatcher_1", System.currentTimeMillis());




/**
 * [tLogCatcher_1 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";

	



		
			
					if(outtFileOutputDelimited_2!=null) {
						outtFileOutputDelimited_2.flush();
						outtFileOutputDelimited_2.close();
					}
				
				globalMap.put("tFileOutputDelimited_2_NB_LINE",nb_line_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_2", true);
	

 

ok_Hash.put("tFileOutputDelimited_2", true);
end_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tLogCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	

 



/**
 * [tLogCatcher_1 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";

	


		if(resourceMap.get("finish_tFileOutputDelimited_2") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_2 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_2");
						if(outtFileOutputDelimited_2!=null) {
							outtFileOutputDelimited_2.flush();
							outtFileOutputDelimited_2.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableComparableLookupRow<row9Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String id;

				public String getId () {
					return this.id;
				}
				
			    public String description;

				public String getDescription () {
					return this.description;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String idHash;

				public String getIdHash () {
					return this.idHash;
				}
				
			    public String tags;

				public String getTags () {
					return this.tags;
				}
				
			    public String brandId;

				public String getBrandId () {
					return this.brandId;
				}
				
			    public String name;

				public String getName () {
					return this.name;
				}
				
			    public String property_Color_Code;

				public String getProperty_Color_Code () {
					return this.property_Color_Code;
				}
				
			    public String property_Style_Code;

				public String getProperty_Style_Code () {
					return this.property_Style_Code;
				}
				
			    public String property_Brand;

				public String getProperty_Brand () {
					return this.property_Brand;
				}
				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}
				
			    public String property_Style_Reference;

				public String getProperty_Style_Reference () {
					return this.property_Style_Reference;
				}
				
			    public String isPublic;

				public String getIsPublic () {
					return this.isPublic;
				}
				
			    public String property_Season;

				public String getProperty_Season () {
					return this.property_Season;
				}
				
			    public String property_Year;

				public String getProperty_Year () {
					return this.property_Year;
				}
				
			    public String property_Asset_Type;

				public String getProperty_Asset_Type () {
					return this.property_Asset_Type;
				}
				
			    public String property_Asset_Subtype;

				public String getProperty_Asset_Subtype () {
					return this.property_Asset_Subtype;
				}
				
			    public String userCreated;

				public String getUserCreated () {
					return this.userCreated;
				}
				
			    public String filename;

				public String getFilename () {
					return this.filename;
				}
				
			    public String property_Gender;

				public String getProperty_Gender () {
					return this.property_Gender;
				}
				
			    public String property_Age_Group;

				public String getProperty_Age_Group () {
					return this.property_Age_Group;
				}
				
			    public String property_Sub_Division;

				public String getProperty_Sub_Division () {
					return this.property_Sub_Division;
				}
				
			    public String property_Division;

				public String getProperty_Division () {
					return this.property_Division;
				}
				
			    public String Terms_of_Use;

				public String getTerms_of_Use () {
					return this.Terms_of_Use;
				}
				
			    public String webimage;

				public String getWebimage () {
					return this.webimage;
				}
				
			    public String thul;

				public String getThul () {
					return this.thul;
				}
				
			    public String property_Photo_View;

				public String getProperty_Photo_View () {
					return this.property_Photo_View;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.property_Color_Code == null) ? 0 : this.property_Color_Code.hashCode());
					
						result = prime * result + ((this.property_Style_Code == null) ? 0 : this.property_Style_Code.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row9Struct other = (row9Struct) obj;
		
						if (this.property_Color_Code == null) {
							if (other.property_Color_Code != null)
								return false;
						
						} else if (!this.property_Color_Code.equals(other.property_Color_Code))
						
							return false;
					
						if (this.property_Style_Code == null) {
							if (other.property_Style_Code != null)
								return false;
						
						} else if (!this.property_Style_Code.equals(other.property_Style_Code))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row9Struct other) {

		other.id = this.id;
	            other.description = this.description;
	            other.type = this.type;
	            other.idHash = this.idHash;
	            other.tags = this.tags;
	            other.brandId = this.brandId;
	            other.name = this.name;
	            other.property_Color_Code = this.property_Color_Code;
	            other.property_Style_Code = this.property_Style_Code;
	            other.property_Brand = this.property_Brand;
	            other.extension = this.extension;
	            other.property_Style_Reference = this.property_Style_Reference;
	            other.isPublic = this.isPublic;
	            other.property_Season = this.property_Season;
	            other.property_Year = this.property_Year;
	            other.property_Asset_Type = this.property_Asset_Type;
	            other.property_Asset_Subtype = this.property_Asset_Subtype;
	            other.userCreated = this.userCreated;
	            other.filename = this.filename;
	            other.property_Gender = this.property_Gender;
	            other.property_Age_Group = this.property_Age_Group;
	            other.property_Sub_Division = this.property_Sub_Division;
	            other.property_Division = this.property_Division;
	            other.Terms_of_Use = this.Terms_of_Use;
	            other.webimage = this.webimage;
	            other.thul = this.thul;
	            other.property_Photo_View = this.property_Photo_View;
	            
	}

	public void copyKeysDataTo(row9Struct other) {

		other.property_Color_Code = this.property_Color_Code;
	            	other.property_Style_Code = this.property_Style_Code;
	            	
	}




	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.property_Color_Code = readString(dis);
					
					this.property_Style_Code = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.property_Color_Code,dos);
					
					// String
				
						writeString(this.property_Style_Code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.id = readString(dis,ois);
					
						this.description = readString(dis,ois);
					
						this.type = readString(dis,ois);
					
						this.idHash = readString(dis,ois);
					
						this.tags = readString(dis,ois);
					
						this.brandId = readString(dis,ois);
					
						this.name = readString(dis,ois);
					
						this.property_Brand = readString(dis,ois);
					
						this.extension = readString(dis,ois);
					
						this.property_Style_Reference = readString(dis,ois);
					
						this.isPublic = readString(dis,ois);
					
						this.property_Season = readString(dis,ois);
					
						this.property_Year = readString(dis,ois);
					
						this.property_Asset_Type = readString(dis,ois);
					
						this.property_Asset_Subtype = readString(dis,ois);
					
						this.userCreated = readString(dis,ois);
					
						this.filename = readString(dis,ois);
					
						this.property_Gender = readString(dis,ois);
					
						this.property_Age_Group = readString(dis,ois);
					
						this.property_Sub_Division = readString(dis,ois);
					
						this.property_Division = readString(dis,ois);
					
						this.Terms_of_Use = readString(dis,ois);
					
						this.webimage = readString(dis,ois);
					
						this.thul = readString(dis,ois);
					
						this.property_Photo_View = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.id, dos, oos);
					
						writeString(this.description, dos, oos);
					
						writeString(this.type, dos, oos);
					
						writeString(this.idHash, dos, oos);
					
						writeString(this.tags, dos, oos);
					
						writeString(this.brandId, dos, oos);
					
						writeString(this.name, dos, oos);
					
						writeString(this.property_Brand, dos, oos);
					
						writeString(this.extension, dos, oos);
					
						writeString(this.property_Style_Reference, dos, oos);
					
						writeString(this.isPublic, dos, oos);
					
						writeString(this.property_Season, dos, oos);
					
						writeString(this.property_Year, dos, oos);
					
						writeString(this.property_Asset_Type, dos, oos);
					
						writeString(this.property_Asset_Subtype, dos, oos);
					
						writeString(this.userCreated, dos, oos);
					
						writeString(this.filename, dos, oos);
					
						writeString(this.property_Gender, dos, oos);
					
						writeString(this.property_Age_Group, dos, oos);
					
						writeString(this.property_Sub_Division, dos, oos);
					
						writeString(this.property_Division, dos, oos);
					
						writeString(this.Terms_of_Use, dos, oos);
					
						writeString(this.webimage, dos, oos);
					
						writeString(this.thul, dos, oos);
					
						writeString(this.property_Photo_View, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+id);
		sb.append(",description="+description);
		sb.append(",type="+type);
		sb.append(",idHash="+idHash);
		sb.append(",tags="+tags);
		sb.append(",brandId="+brandId);
		sb.append(",name="+name);
		sb.append(",property_Color_Code="+property_Color_Code);
		sb.append(",property_Style_Code="+property_Style_Code);
		sb.append(",property_Brand="+property_Brand);
		sb.append(",extension="+extension);
		sb.append(",property_Style_Reference="+property_Style_Reference);
		sb.append(",isPublic="+isPublic);
		sb.append(",property_Season="+property_Season);
		sb.append(",property_Year="+property_Year);
		sb.append(",property_Asset_Type="+property_Asset_Type);
		sb.append(",property_Asset_Subtype="+property_Asset_Subtype);
		sb.append(",userCreated="+userCreated);
		sb.append(",filename="+filename);
		sb.append(",property_Gender="+property_Gender);
		sb.append(",property_Age_Group="+property_Age_Group);
		sb.append(",property_Sub_Division="+property_Sub_Division);
		sb.append(",property_Division="+property_Division);
		sb.append(",Terms_of_Use="+Terms_of_Use);
		sb.append(",webimage="+webimage);
		sb.append(",thul="+thul);
		sb.append(",property_Photo_View="+property_Photo_View);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.property_Color_Code, other.property_Color_Code);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.property_Style_Code, other.property_Style_Code);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tFileInputDelimited_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();




	
	/**
	 * [tAdvancedHash_row9 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row9", false);
		start_Hash.put("tAdvancedHash_row9", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row9";

	
		int tos_count_tAdvancedHash_row9 = 0;
		

			   		// connection name:row9
			   		// source node:tFileInputDelimited_2 - inputs:() outputs:(row9,row9) | target node:tAdvancedHash_row9 - inputs:(row9) outputs:()
			   		// linked node: tMap_4 - inputs:(out1,row9) outputs:(updateSF_Front_Image)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row9 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct> tHash_Lookup_row9 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row9Struct>getLookup(matchingModeEnum_row9);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row9", tHash_Lookup_row9);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row9 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_2", false);
		start_Hash.put("tFileInputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_2";

	
		int tos_count_tFileInputDelimited_2 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_2 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_2 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_2 = null;
				int limit_tFileInputDelimited_2 = -1;
				try{
					
						Object filename_tFileInputDelimited_2 = "C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv";
						if(filename_tFileInputDelimited_2 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_2 = 0, random_value_tFileInputDelimited_2 = -1;
			if(footer_value_tFileInputDelimited_2 >0 || random_value_tFileInputDelimited_2 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_2 = new org.talend.fileprocess.FileInputDelimited("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv", "ISO-8859-15",";","\n",true,1,0,
									limit_tFileInputDelimited_2
								,-1, false);
						} catch(java.lang.Exception e) {
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_2!=null && fid_tFileInputDelimited_2.nextRecord()) {
						rowstate_tFileInputDelimited_2.reset();
						
			    						row9 = null;			
									
			    						row9 = null;			
												
									boolean whetherReject_tFileInputDelimited_2 = false;
									row9 = new row9Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_2 = 0;
				
					columnIndexWithD_tFileInputDelimited_2 = 0;
					
							row9.id = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 1;
					
							row9.description = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 2;
					
							row9.type = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 3;
					
							row9.idHash = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 4;
					
							row9.tags = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 5;
					
							row9.brandId = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 6;
					
							row9.name = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 7;
					
							row9.property_Color_Code = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 8;
					
							row9.property_Style_Code = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 9;
					
							row9.property_Brand = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 10;
					
							row9.extension = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 11;
					
							row9.property_Style_Reference = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 12;
					
							row9.isPublic = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 13;
					
							row9.property_Season = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 14;
					
							row9.property_Year = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 15;
					
							row9.property_Asset_Type = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 16;
					
							row9.property_Asset_Subtype = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 17;
					
							row9.userCreated = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 18;
					
							row9.filename = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 19;
					
							row9.property_Gender = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 20;
					
							row9.property_Age_Group = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 21;
					
							row9.property_Sub_Division = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 22;
					
							row9.property_Division = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 23;
					
							row9.Terms_of_Use = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 24;
					
							row9.webimage = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 25;
					
							row9.thul = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 26;
					
							row9.property_Photo_View = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
				
										
										if(rowstate_tFileInputDelimited_2.getException()!=null) {
											throw rowstate_tFileInputDelimited_2.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
			        					whetherReject_tFileInputDelimited_2 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row9 = null;
			                				
			    					}
								

 



/**
 * [tFileInputDelimited_2 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";

	

 


	tos_count_tFileInputDelimited_2++;

/**
 * [tFileInputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";

	

 



/**
 * [tFileInputDelimited_2 process_data_begin ] stop
 */
// Start of branch "row9"
if(row9 != null) { 



	
	/**
	 * [tAdvancedHash_row9 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";

	


			   
			   

					row9Struct row9_HashRow = new row9Struct();
		   	   	   
				
				row9_HashRow.id = row9.id;
				
				row9_HashRow.description = row9.description;
				
				row9_HashRow.type = row9.type;
				
				row9_HashRow.idHash = row9.idHash;
				
				row9_HashRow.tags = row9.tags;
				
				row9_HashRow.brandId = row9.brandId;
				
				row9_HashRow.name = row9.name;
				
				row9_HashRow.property_Color_Code = row9.property_Color_Code;
				
				row9_HashRow.property_Style_Code = row9.property_Style_Code;
				
				row9_HashRow.property_Brand = row9.property_Brand;
				
				row9_HashRow.extension = row9.extension;
				
				row9_HashRow.property_Style_Reference = row9.property_Style_Reference;
				
				row9_HashRow.isPublic = row9.isPublic;
				
				row9_HashRow.property_Season = row9.property_Season;
				
				row9_HashRow.property_Year = row9.property_Year;
				
				row9_HashRow.property_Asset_Type = row9.property_Asset_Type;
				
				row9_HashRow.property_Asset_Subtype = row9.property_Asset_Subtype;
				
				row9_HashRow.userCreated = row9.userCreated;
				
				row9_HashRow.filename = row9.filename;
				
				row9_HashRow.property_Gender = row9.property_Gender;
				
				row9_HashRow.property_Age_Group = row9.property_Age_Group;
				
				row9_HashRow.property_Sub_Division = row9.property_Sub_Division;
				
				row9_HashRow.property_Division = row9.property_Division;
				
				row9_HashRow.Terms_of_Use = row9.Terms_of_Use;
				
				row9_HashRow.webimage = row9.webimage;
				
				row9_HashRow.thul = row9.thul;
				
				row9_HashRow.property_Photo_View = row9.property_Photo_View;
				
			tHash_Lookup_row9.put(row9_HashRow);
			
            




 


	tos_count_tAdvancedHash_row9++;

/**
 * [tAdvancedHash_row9 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";

	

 



/**
 * [tAdvancedHash_row9 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row9 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";

	

 



/**
 * [tAdvancedHash_row9 process_data_end ] stop
 */

} // End of branch "row9"




	
	/**
	 * [tFileInputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";

	

 



/**
 * [tFileInputDelimited_2 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";

	



            }
            }finally{
                if(!((Object)("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv") instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_2!=null){
                		fid_tFileInputDelimited_2.close();
                	}
                }
                if(fid_tFileInputDelimited_2!=null){
                	globalMap.put("tFileInputDelimited_2_NB_LINE", fid_tFileInputDelimited_2.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_2", true);
end_Hash.put("tFileInputDelimited_2", System.currentTimeMillis());




/**
 * [tFileInputDelimited_2 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";

	

tHash_Lookup_row9.endPut();

 

ok_Hash.put("tAdvancedHash_row9", true);
end_Hash.put("tAdvancedHash_row9", System.currentTimeMillis());




/**
 * [tAdvancedHash_row9 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";

	

 



/**
 * [tFileInputDelimited_2 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";

	

 



/**
 * [tAdvancedHash_row9 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_2_SUBPROCESS_STATE", 1);
	}
	


public static class row14Struct implements routines.system.IPersistableComparableLookupRow<row14Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String id;

				public String getId () {
					return this.id;
				}
				
			    public String description;

				public String getDescription () {
					return this.description;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String idHash;

				public String getIdHash () {
					return this.idHash;
				}
				
			    public String tags;

				public String getTags () {
					return this.tags;
				}
				
			    public String brandId;

				public String getBrandId () {
					return this.brandId;
				}
				
			    public String name;

				public String getName () {
					return this.name;
				}
				
			    public String property_Color_Code;

				public String getProperty_Color_Code () {
					return this.property_Color_Code;
				}
				
			    public String property_Style_Code;

				public String getProperty_Style_Code () {
					return this.property_Style_Code;
				}
				
			    public String property_Brand;

				public String getProperty_Brand () {
					return this.property_Brand;
				}
				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}
				
			    public String property_Style_Reference;

				public String getProperty_Style_Reference () {
					return this.property_Style_Reference;
				}
				
			    public String isPublic;

				public String getIsPublic () {
					return this.isPublic;
				}
				
			    public String property_Season;

				public String getProperty_Season () {
					return this.property_Season;
				}
				
			    public String property_Year;

				public String getProperty_Year () {
					return this.property_Year;
				}
				
			    public String property_Asset_Type;

				public String getProperty_Asset_Type () {
					return this.property_Asset_Type;
				}
				
			    public String property_Asset_Subtype;

				public String getProperty_Asset_Subtype () {
					return this.property_Asset_Subtype;
				}
				
			    public String userCreated;

				public String getUserCreated () {
					return this.userCreated;
				}
				
			    public String filename;

				public String getFilename () {
					return this.filename;
				}
				
			    public String property_Gender;

				public String getProperty_Gender () {
					return this.property_Gender;
				}
				
			    public String property_Age_Group;

				public String getProperty_Age_Group () {
					return this.property_Age_Group;
				}
				
			    public String property_Sub_Division;

				public String getProperty_Sub_Division () {
					return this.property_Sub_Division;
				}
				
			    public String property_Division;

				public String getProperty_Division () {
					return this.property_Division;
				}
				
			    public String Terms_of_Use;

				public String getTerms_of_Use () {
					return this.Terms_of_Use;
				}
				
			    public String webimage;

				public String getWebimage () {
					return this.webimage;
				}
				
			    public String thul;

				public String getThul () {
					return this.thul;
				}
				
			    public String property_Photo_View;

				public String getProperty_Photo_View () {
					return this.property_Photo_View;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.property_Color_Code == null) ? 0 : this.property_Color_Code.hashCode());
					
						result = prime * result + ((this.property_Style_Code == null) ? 0 : this.property_Style_Code.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row14Struct other = (row14Struct) obj;
		
						if (this.property_Color_Code == null) {
							if (other.property_Color_Code != null)
								return false;
						
						} else if (!this.property_Color_Code.equals(other.property_Color_Code))
						
							return false;
					
						if (this.property_Style_Code == null) {
							if (other.property_Style_Code != null)
								return false;
						
						} else if (!this.property_Style_Code.equals(other.property_Style_Code))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row14Struct other) {

		other.id = this.id;
	            other.description = this.description;
	            other.type = this.type;
	            other.idHash = this.idHash;
	            other.tags = this.tags;
	            other.brandId = this.brandId;
	            other.name = this.name;
	            other.property_Color_Code = this.property_Color_Code;
	            other.property_Style_Code = this.property_Style_Code;
	            other.property_Brand = this.property_Brand;
	            other.extension = this.extension;
	            other.property_Style_Reference = this.property_Style_Reference;
	            other.isPublic = this.isPublic;
	            other.property_Season = this.property_Season;
	            other.property_Year = this.property_Year;
	            other.property_Asset_Type = this.property_Asset_Type;
	            other.property_Asset_Subtype = this.property_Asset_Subtype;
	            other.userCreated = this.userCreated;
	            other.filename = this.filename;
	            other.property_Gender = this.property_Gender;
	            other.property_Age_Group = this.property_Age_Group;
	            other.property_Sub_Division = this.property_Sub_Division;
	            other.property_Division = this.property_Division;
	            other.Terms_of_Use = this.Terms_of_Use;
	            other.webimage = this.webimage;
	            other.thul = this.thul;
	            other.property_Photo_View = this.property_Photo_View;
	            
	}

	public void copyKeysDataTo(row14Struct other) {

		other.property_Color_Code = this.property_Color_Code;
	            	other.property_Style_Code = this.property_Style_Code;
	            	
	}




	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.property_Color_Code = readString(dis);
					
					this.property_Style_Code = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.property_Color_Code,dos);
					
					// String
				
						writeString(this.property_Style_Code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.id = readString(dis,ois);
					
						this.description = readString(dis,ois);
					
						this.type = readString(dis,ois);
					
						this.idHash = readString(dis,ois);
					
						this.tags = readString(dis,ois);
					
						this.brandId = readString(dis,ois);
					
						this.name = readString(dis,ois);
					
						this.property_Brand = readString(dis,ois);
					
						this.extension = readString(dis,ois);
					
						this.property_Style_Reference = readString(dis,ois);
					
						this.isPublic = readString(dis,ois);
					
						this.property_Season = readString(dis,ois);
					
						this.property_Year = readString(dis,ois);
					
						this.property_Asset_Type = readString(dis,ois);
					
						this.property_Asset_Subtype = readString(dis,ois);
					
						this.userCreated = readString(dis,ois);
					
						this.filename = readString(dis,ois);
					
						this.property_Gender = readString(dis,ois);
					
						this.property_Age_Group = readString(dis,ois);
					
						this.property_Sub_Division = readString(dis,ois);
					
						this.property_Division = readString(dis,ois);
					
						this.Terms_of_Use = readString(dis,ois);
					
						this.webimage = readString(dis,ois);
					
						this.thul = readString(dis,ois);
					
						this.property_Photo_View = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.id, dos, oos);
					
						writeString(this.description, dos, oos);
					
						writeString(this.type, dos, oos);
					
						writeString(this.idHash, dos, oos);
					
						writeString(this.tags, dos, oos);
					
						writeString(this.brandId, dos, oos);
					
						writeString(this.name, dos, oos);
					
						writeString(this.property_Brand, dos, oos);
					
						writeString(this.extension, dos, oos);
					
						writeString(this.property_Style_Reference, dos, oos);
					
						writeString(this.isPublic, dos, oos);
					
						writeString(this.property_Season, dos, oos);
					
						writeString(this.property_Year, dos, oos);
					
						writeString(this.property_Asset_Type, dos, oos);
					
						writeString(this.property_Asset_Subtype, dos, oos);
					
						writeString(this.userCreated, dos, oos);
					
						writeString(this.filename, dos, oos);
					
						writeString(this.property_Gender, dos, oos);
					
						writeString(this.property_Age_Group, dos, oos);
					
						writeString(this.property_Sub_Division, dos, oos);
					
						writeString(this.property_Division, dos, oos);
					
						writeString(this.Terms_of_Use, dos, oos);
					
						writeString(this.webimage, dos, oos);
					
						writeString(this.thul, dos, oos);
					
						writeString(this.property_Photo_View, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+id);
		sb.append(",description="+description);
		sb.append(",type="+type);
		sb.append(",idHash="+idHash);
		sb.append(",tags="+tags);
		sb.append(",brandId="+brandId);
		sb.append(",name="+name);
		sb.append(",property_Color_Code="+property_Color_Code);
		sb.append(",property_Style_Code="+property_Style_Code);
		sb.append(",property_Brand="+property_Brand);
		sb.append(",extension="+extension);
		sb.append(",property_Style_Reference="+property_Style_Reference);
		sb.append(",isPublic="+isPublic);
		sb.append(",property_Season="+property_Season);
		sb.append(",property_Year="+property_Year);
		sb.append(",property_Asset_Type="+property_Asset_Type);
		sb.append(",property_Asset_Subtype="+property_Asset_Subtype);
		sb.append(",userCreated="+userCreated);
		sb.append(",filename="+filename);
		sb.append(",property_Gender="+property_Gender);
		sb.append(",property_Age_Group="+property_Age_Group);
		sb.append(",property_Sub_Division="+property_Sub_Division);
		sb.append(",property_Division="+property_Division);
		sb.append(",Terms_of_Use="+Terms_of_Use);
		sb.append(",webimage="+webimage);
		sb.append(",thul="+thul);
		sb.append(",property_Photo_View="+property_Photo_View);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.property_Color_Code, other.property_Color_Code);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.property_Style_Code, other.property_Style_Code);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tFileInputDelimited_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row14Struct row14 = new row14Struct();




	
	/**
	 * [tAdvancedHash_row14 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row14", false);
		start_Hash.put("tAdvancedHash_row14", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row14";

	
		int tos_count_tAdvancedHash_row14 = 0;
		

			   		// connection name:row14
			   		// source node:tFileInputDelimited_3 - inputs:() outputs:(row14,row14) | target node:tAdvancedHash_row14 - inputs:(row14) outputs:()
			   		// linked node: tMap_5 - inputs:(out_2,row14) outputs:(Update_Back_Image)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row14 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct> tHash_Lookup_row14 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row14Struct>getLookup(matchingModeEnum_row14);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row14", tHash_Lookup_row14);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row14 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_3", false);
		start_Hash.put("tFileInputDelimited_3", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_3";

	
		int tos_count_tFileInputDelimited_3 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_3 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_3 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_3 = null;
				int limit_tFileInputDelimited_3 = -1;
				try{
					
						Object filename_tFileInputDelimited_3 = "C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv";
						if(filename_tFileInputDelimited_3 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_3 = 0, random_value_tFileInputDelimited_3 = -1;
			if(footer_value_tFileInputDelimited_3 >0 || random_value_tFileInputDelimited_3 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_3 = new org.talend.fileprocess.FileInputDelimited("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv", "ISO-8859-15",";","\n",true,1,0,
									limit_tFileInputDelimited_3
								,-1, false);
						} catch(java.lang.Exception e) {
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_3!=null && fid_tFileInputDelimited_3.nextRecord()) {
						rowstate_tFileInputDelimited_3.reset();
						
			    						row14 = null;			
									
			    						row14 = null;			
												
									boolean whetherReject_tFileInputDelimited_3 = false;
									row14 = new row14Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_3 = 0;
				
					columnIndexWithD_tFileInputDelimited_3 = 0;
					
							row14.id = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 1;
					
							row14.description = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 2;
					
							row14.type = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 3;
					
							row14.idHash = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 4;
					
							row14.tags = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 5;
					
							row14.brandId = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 6;
					
							row14.name = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 7;
					
							row14.property_Color_Code = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 8;
					
							row14.property_Style_Code = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 9;
					
							row14.property_Brand = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 10;
					
							row14.extension = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 11;
					
							row14.property_Style_Reference = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 12;
					
							row14.isPublic = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 13;
					
							row14.property_Season = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 14;
					
							row14.property_Year = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 15;
					
							row14.property_Asset_Type = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 16;
					
							row14.property_Asset_Subtype = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 17;
					
							row14.userCreated = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 18;
					
							row14.filename = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 19;
					
							row14.property_Gender = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 20;
					
							row14.property_Age_Group = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 21;
					
							row14.property_Sub_Division = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 22;
					
							row14.property_Division = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 23;
					
							row14.Terms_of_Use = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 24;
					
							row14.webimage = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 25;
					
							row14.thul = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
					columnIndexWithD_tFileInputDelimited_3 = 26;
					
							row14.property_Photo_View = fid_tFileInputDelimited_3.get(columnIndexWithD_tFileInputDelimited_3);
						
				
				
										
										if(rowstate_tFileInputDelimited_3.getException()!=null) {
											throw rowstate_tFileInputDelimited_3.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
			        					whetherReject_tFileInputDelimited_3 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row14 = null;
			                				
			    					}
								

 



/**
 * [tFileInputDelimited_3 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_3 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_3";

	

 


	tos_count_tFileInputDelimited_3++;

/**
 * [tFileInputDelimited_3 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_3";

	

 



/**
 * [tFileInputDelimited_3 process_data_begin ] stop
 */
// Start of branch "row14"
if(row14 != null) { 



	
	/**
	 * [tAdvancedHash_row14 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";

	


			   
			   

					row14Struct row14_HashRow = new row14Struct();
		   	   	   
				
				row14_HashRow.id = row14.id;
				
				row14_HashRow.description = row14.description;
				
				row14_HashRow.type = row14.type;
				
				row14_HashRow.idHash = row14.idHash;
				
				row14_HashRow.tags = row14.tags;
				
				row14_HashRow.brandId = row14.brandId;
				
				row14_HashRow.name = row14.name;
				
				row14_HashRow.property_Color_Code = row14.property_Color_Code;
				
				row14_HashRow.property_Style_Code = row14.property_Style_Code;
				
				row14_HashRow.property_Brand = row14.property_Brand;
				
				row14_HashRow.extension = row14.extension;
				
				row14_HashRow.property_Style_Reference = row14.property_Style_Reference;
				
				row14_HashRow.isPublic = row14.isPublic;
				
				row14_HashRow.property_Season = row14.property_Season;
				
				row14_HashRow.property_Year = row14.property_Year;
				
				row14_HashRow.property_Asset_Type = row14.property_Asset_Type;
				
				row14_HashRow.property_Asset_Subtype = row14.property_Asset_Subtype;
				
				row14_HashRow.userCreated = row14.userCreated;
				
				row14_HashRow.filename = row14.filename;
				
				row14_HashRow.property_Gender = row14.property_Gender;
				
				row14_HashRow.property_Age_Group = row14.property_Age_Group;
				
				row14_HashRow.property_Sub_Division = row14.property_Sub_Division;
				
				row14_HashRow.property_Division = row14.property_Division;
				
				row14_HashRow.Terms_of_Use = row14.Terms_of_Use;
				
				row14_HashRow.webimage = row14.webimage;
				
				row14_HashRow.thul = row14.thul;
				
				row14_HashRow.property_Photo_View = row14.property_Photo_View;
				
			tHash_Lookup_row14.put(row14_HashRow);
			
            




 


	tos_count_tAdvancedHash_row14++;

/**
 * [tAdvancedHash_row14 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";

	

 



/**
 * [tAdvancedHash_row14 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row14 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";

	

 



/**
 * [tAdvancedHash_row14 process_data_end ] stop
 */

} // End of branch "row14"




	
	/**
	 * [tFileInputDelimited_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_3";

	

 



/**
 * [tFileInputDelimited_3 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_3 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_3";

	



            }
            }finally{
                if(!((Object)("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv") instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_3!=null){
                		fid_tFileInputDelimited_3.close();
                	}
                }
                if(fid_tFileInputDelimited_3!=null){
                	globalMap.put("tFileInputDelimited_3_NB_LINE", fid_tFileInputDelimited_3.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_3", true);
end_Hash.put("tFileInputDelimited_3", System.currentTimeMillis());




/**
 * [tFileInputDelimited_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";

	

tHash_Lookup_row14.endPut();

 

ok_Hash.put("tAdvancedHash_row14", true);
end_Hash.put("tAdvancedHash_row14", System.currentTimeMillis());




/**
 * [tAdvancedHash_row14 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_3 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_3";

	

 



/**
 * [tFileInputDelimited_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";

	

 



/**
 * [tAdvancedHash_row14 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_3_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableComparableLookupRow<row16Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String id;

				public String getId () {
					return this.id;
				}
				
			    public String description;

				public String getDescription () {
					return this.description;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String idHash;

				public String getIdHash () {
					return this.idHash;
				}
				
			    public String tags;

				public String getTags () {
					return this.tags;
				}
				
			    public String brandId;

				public String getBrandId () {
					return this.brandId;
				}
				
			    public String name;

				public String getName () {
					return this.name;
				}
				
			    public String property_Color_Code;

				public String getProperty_Color_Code () {
					return this.property_Color_Code;
				}
				
			    public String property_Style_Code;

				public String getProperty_Style_Code () {
					return this.property_Style_Code;
				}
				
			    public String property_Brand;

				public String getProperty_Brand () {
					return this.property_Brand;
				}
				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}
				
			    public String property_Style_Reference;

				public String getProperty_Style_Reference () {
					return this.property_Style_Reference;
				}
				
			    public String isPublic;

				public String getIsPublic () {
					return this.isPublic;
				}
				
			    public String property_Season;

				public String getProperty_Season () {
					return this.property_Season;
				}
				
			    public String property_Year;

				public String getProperty_Year () {
					return this.property_Year;
				}
				
			    public String property_Asset_Type;

				public String getProperty_Asset_Type () {
					return this.property_Asset_Type;
				}
				
			    public String property_Asset_Subtype;

				public String getProperty_Asset_Subtype () {
					return this.property_Asset_Subtype;
				}
				
			    public String userCreated;

				public String getUserCreated () {
					return this.userCreated;
				}
				
			    public String filename;

				public String getFilename () {
					return this.filename;
				}
				
			    public String property_Gender;

				public String getProperty_Gender () {
					return this.property_Gender;
				}
				
			    public String property_Age_Group;

				public String getProperty_Age_Group () {
					return this.property_Age_Group;
				}
				
			    public String property_Sub_Division;

				public String getProperty_Sub_Division () {
					return this.property_Sub_Division;
				}
				
			    public String property_Division;

				public String getProperty_Division () {
					return this.property_Division;
				}
				
			    public String Terms_of_Use;

				public String getTerms_of_Use () {
					return this.Terms_of_Use;
				}
				
			    public String webimage;

				public String getWebimage () {
					return this.webimage;
				}
				
			    public String thul;

				public String getThul () {
					return this.thul;
				}
				
			    public String property_Photo_View;

				public String getProperty_Photo_View () {
					return this.property_Photo_View;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.property_Color_Code == null) ? 0 : this.property_Color_Code.hashCode());
					
						result = prime * result + ((this.property_Style_Code == null) ? 0 : this.property_Style_Code.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row16Struct other = (row16Struct) obj;
		
						if (this.property_Color_Code == null) {
							if (other.property_Color_Code != null)
								return false;
						
						} else if (!this.property_Color_Code.equals(other.property_Color_Code))
						
							return false;
					
						if (this.property_Style_Code == null) {
							if (other.property_Style_Code != null)
								return false;
						
						} else if (!this.property_Style_Code.equals(other.property_Style_Code))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row16Struct other) {

		other.id = this.id;
	            other.description = this.description;
	            other.type = this.type;
	            other.idHash = this.idHash;
	            other.tags = this.tags;
	            other.brandId = this.brandId;
	            other.name = this.name;
	            other.property_Color_Code = this.property_Color_Code;
	            other.property_Style_Code = this.property_Style_Code;
	            other.property_Brand = this.property_Brand;
	            other.extension = this.extension;
	            other.property_Style_Reference = this.property_Style_Reference;
	            other.isPublic = this.isPublic;
	            other.property_Season = this.property_Season;
	            other.property_Year = this.property_Year;
	            other.property_Asset_Type = this.property_Asset_Type;
	            other.property_Asset_Subtype = this.property_Asset_Subtype;
	            other.userCreated = this.userCreated;
	            other.filename = this.filename;
	            other.property_Gender = this.property_Gender;
	            other.property_Age_Group = this.property_Age_Group;
	            other.property_Sub_Division = this.property_Sub_Division;
	            other.property_Division = this.property_Division;
	            other.Terms_of_Use = this.Terms_of_Use;
	            other.webimage = this.webimage;
	            other.thul = this.thul;
	            other.property_Photo_View = this.property_Photo_View;
	            
	}

	public void copyKeysDataTo(row16Struct other) {

		other.property_Color_Code = this.property_Color_Code;
	            	other.property_Style_Code = this.property_Style_Code;
	            	
	}




	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.property_Color_Code = readString(dis);
					
					this.property_Style_Code = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.property_Color_Code,dos);
					
					// String
				
						writeString(this.property_Style_Code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.id = readString(dis,ois);
					
						this.description = readString(dis,ois);
					
						this.type = readString(dis,ois);
					
						this.idHash = readString(dis,ois);
					
						this.tags = readString(dis,ois);
					
						this.brandId = readString(dis,ois);
					
						this.name = readString(dis,ois);
					
						this.property_Brand = readString(dis,ois);
					
						this.extension = readString(dis,ois);
					
						this.property_Style_Reference = readString(dis,ois);
					
						this.isPublic = readString(dis,ois);
					
						this.property_Season = readString(dis,ois);
					
						this.property_Year = readString(dis,ois);
					
						this.property_Asset_Type = readString(dis,ois);
					
						this.property_Asset_Subtype = readString(dis,ois);
					
						this.userCreated = readString(dis,ois);
					
						this.filename = readString(dis,ois);
					
						this.property_Gender = readString(dis,ois);
					
						this.property_Age_Group = readString(dis,ois);
					
						this.property_Sub_Division = readString(dis,ois);
					
						this.property_Division = readString(dis,ois);
					
						this.Terms_of_Use = readString(dis,ois);
					
						this.webimage = readString(dis,ois);
					
						this.thul = readString(dis,ois);
					
						this.property_Photo_View = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.id, dos, oos);
					
						writeString(this.description, dos, oos);
					
						writeString(this.type, dos, oos);
					
						writeString(this.idHash, dos, oos);
					
						writeString(this.tags, dos, oos);
					
						writeString(this.brandId, dos, oos);
					
						writeString(this.name, dos, oos);
					
						writeString(this.property_Brand, dos, oos);
					
						writeString(this.extension, dos, oos);
					
						writeString(this.property_Style_Reference, dos, oos);
					
						writeString(this.isPublic, dos, oos);
					
						writeString(this.property_Season, dos, oos);
					
						writeString(this.property_Year, dos, oos);
					
						writeString(this.property_Asset_Type, dos, oos);
					
						writeString(this.property_Asset_Subtype, dos, oos);
					
						writeString(this.userCreated, dos, oos);
					
						writeString(this.filename, dos, oos);
					
						writeString(this.property_Gender, dos, oos);
					
						writeString(this.property_Age_Group, dos, oos);
					
						writeString(this.property_Sub_Division, dos, oos);
					
						writeString(this.property_Division, dos, oos);
					
						writeString(this.Terms_of_Use, dos, oos);
					
						writeString(this.webimage, dos, oos);
					
						writeString(this.thul, dos, oos);
					
						writeString(this.property_Photo_View, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+id);
		sb.append(",description="+description);
		sb.append(",type="+type);
		sb.append(",idHash="+idHash);
		sb.append(",tags="+tags);
		sb.append(",brandId="+brandId);
		sb.append(",name="+name);
		sb.append(",property_Color_Code="+property_Color_Code);
		sb.append(",property_Style_Code="+property_Style_Code);
		sb.append(",property_Brand="+property_Brand);
		sb.append(",extension="+extension);
		sb.append(",property_Style_Reference="+property_Style_Reference);
		sb.append(",isPublic="+isPublic);
		sb.append(",property_Season="+property_Season);
		sb.append(",property_Year="+property_Year);
		sb.append(",property_Asset_Type="+property_Asset_Type);
		sb.append(",property_Asset_Subtype="+property_Asset_Subtype);
		sb.append(",userCreated="+userCreated);
		sb.append(",filename="+filename);
		sb.append(",property_Gender="+property_Gender);
		sb.append(",property_Age_Group="+property_Age_Group);
		sb.append(",property_Sub_Division="+property_Sub_Division);
		sb.append(",property_Division="+property_Division);
		sb.append(",Terms_of_Use="+Terms_of_Use);
		sb.append(",webimage="+webimage);
		sb.append(",thul="+thul);
		sb.append(",property_Photo_View="+property_Photo_View);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.property_Color_Code, other.property_Color_Code);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.property_Style_Code, other.property_Style_Code);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tFileInputDelimited_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();




	
	/**
	 * [tAdvancedHash_row16 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row16", false);
		start_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row16";

	
		int tos_count_tAdvancedHash_row16 = 0;
		

			   		// connection name:row16
			   		// source node:tFileInputDelimited_4 - inputs:() outputs:(row16,row16) | target node:tAdvancedHash_row16 - inputs:(row16) outputs:()
			   		// linked node: tMap_6 - inputs:(out_3,row16) outputs:(copyOfUpdate_Back_Image)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row16 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row16Struct>getLookup(matchingModeEnum_row16);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row16", tHash_Lookup_row16);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row16 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_4", false);
		start_Hash.put("tFileInputDelimited_4", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_4";

	
		int tos_count_tFileInputDelimited_4 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_4 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_4 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_4 = null;
				int limit_tFileInputDelimited_4 = -1;
				try{
					
						Object filename_tFileInputDelimited_4 = "C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv";
						if(filename_tFileInputDelimited_4 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_4 = 0, random_value_tFileInputDelimited_4 = -1;
			if(footer_value_tFileInputDelimited_4 >0 || random_value_tFileInputDelimited_4 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_4 = new org.talend.fileprocess.FileInputDelimited("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv", "ISO-8859-15",";","\n",true,1,0,
									limit_tFileInputDelimited_4
								,-1, false);
						} catch(java.lang.Exception e) {
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_4!=null && fid_tFileInputDelimited_4.nextRecord()) {
						rowstate_tFileInputDelimited_4.reset();
						
			    						row16 = null;			
									
			    						row16 = null;			
												
									boolean whetherReject_tFileInputDelimited_4 = false;
									row16 = new row16Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_4 = 0;
				
					columnIndexWithD_tFileInputDelimited_4 = 0;
					
							row16.id = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 1;
					
							row16.description = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 2;
					
							row16.type = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 3;
					
							row16.idHash = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 4;
					
							row16.tags = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 5;
					
							row16.brandId = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 6;
					
							row16.name = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 7;
					
							row16.property_Color_Code = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 8;
					
							row16.property_Style_Code = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 9;
					
							row16.property_Brand = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 10;
					
							row16.extension = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 11;
					
							row16.property_Style_Reference = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 12;
					
							row16.isPublic = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 13;
					
							row16.property_Season = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 14;
					
							row16.property_Year = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 15;
					
							row16.property_Asset_Type = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 16;
					
							row16.property_Asset_Subtype = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 17;
					
							row16.userCreated = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 18;
					
							row16.filename = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 19;
					
							row16.property_Gender = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 20;
					
							row16.property_Age_Group = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 21;
					
							row16.property_Sub_Division = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 22;
					
							row16.property_Division = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 23;
					
							row16.Terms_of_Use = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 24;
					
							row16.webimage = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 25;
					
							row16.thul = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
					columnIndexWithD_tFileInputDelimited_4 = 26;
					
							row16.property_Photo_View = fid_tFileInputDelimited_4.get(columnIndexWithD_tFileInputDelimited_4);
						
				
				
										
										if(rowstate_tFileInputDelimited_4.getException()!=null) {
											throw rowstate_tFileInputDelimited_4.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
			        					whetherReject_tFileInputDelimited_4 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row16 = null;
			                				
			    					}
								

 



/**
 * [tFileInputDelimited_4 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_4 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_4";

	

 


	tos_count_tFileInputDelimited_4++;

/**
 * [tFileInputDelimited_4 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_4";

	

 



/**
 * [tFileInputDelimited_4 process_data_begin ] stop
 */
// Start of branch "row16"
if(row16 != null) { 



	
	/**
	 * [tAdvancedHash_row16 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";

	


			   
			   

					row16Struct row16_HashRow = new row16Struct();
		   	   	   
				
				row16_HashRow.id = row16.id;
				
				row16_HashRow.description = row16.description;
				
				row16_HashRow.type = row16.type;
				
				row16_HashRow.idHash = row16.idHash;
				
				row16_HashRow.tags = row16.tags;
				
				row16_HashRow.brandId = row16.brandId;
				
				row16_HashRow.name = row16.name;
				
				row16_HashRow.property_Color_Code = row16.property_Color_Code;
				
				row16_HashRow.property_Style_Code = row16.property_Style_Code;
				
				row16_HashRow.property_Brand = row16.property_Brand;
				
				row16_HashRow.extension = row16.extension;
				
				row16_HashRow.property_Style_Reference = row16.property_Style_Reference;
				
				row16_HashRow.isPublic = row16.isPublic;
				
				row16_HashRow.property_Season = row16.property_Season;
				
				row16_HashRow.property_Year = row16.property_Year;
				
				row16_HashRow.property_Asset_Type = row16.property_Asset_Type;
				
				row16_HashRow.property_Asset_Subtype = row16.property_Asset_Subtype;
				
				row16_HashRow.userCreated = row16.userCreated;
				
				row16_HashRow.filename = row16.filename;
				
				row16_HashRow.property_Gender = row16.property_Gender;
				
				row16_HashRow.property_Age_Group = row16.property_Age_Group;
				
				row16_HashRow.property_Sub_Division = row16.property_Sub_Division;
				
				row16_HashRow.property_Division = row16.property_Division;
				
				row16_HashRow.Terms_of_Use = row16.Terms_of_Use;
				
				row16_HashRow.webimage = row16.webimage;
				
				row16_HashRow.thul = row16.thul;
				
				row16_HashRow.property_Photo_View = row16.property_Photo_View;
				
			tHash_Lookup_row16.put(row16_HashRow);
			
            




 


	tos_count_tAdvancedHash_row16++;

/**
 * [tAdvancedHash_row16 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";

	

 



/**
 * [tAdvancedHash_row16 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";

	

 



/**
 * [tAdvancedHash_row16 process_data_end ] stop
 */

} // End of branch "row16"




	
	/**
	 * [tFileInputDelimited_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_4";

	

 



/**
 * [tFileInputDelimited_4 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_4 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_4";

	



            }
            }finally{
                if(!((Object)("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv") instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_4!=null){
                		fid_tFileInputDelimited_4.close();
                	}
                }
                if(fid_tFileInputDelimited_4!=null){
                	globalMap.put("tFileInputDelimited_4_NB_LINE", fid_tFileInputDelimited_4.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_4", true);
end_Hash.put("tFileInputDelimited_4", System.currentTimeMillis());




/**
 * [tFileInputDelimited_4 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";

	

tHash_Lookup_row16.endPut();

 

ok_Hash.put("tAdvancedHash_row16", true);
end_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());




/**
 * [tAdvancedHash_row16 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_4 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_4";

	

 



/**
 * [tFileInputDelimited_4 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";

	

 



/**
 * [tAdvancedHash_row16 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_4_SUBPROCESS_STATE", 1);
	}
	


public static class row18Struct implements routines.system.IPersistableComparableLookupRow<row18Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String id;

				public String getId () {
					return this.id;
				}
				
			    public String description;

				public String getDescription () {
					return this.description;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String idHash;

				public String getIdHash () {
					return this.idHash;
				}
				
			    public String tags;

				public String getTags () {
					return this.tags;
				}
				
			    public String brandId;

				public String getBrandId () {
					return this.brandId;
				}
				
			    public String name;

				public String getName () {
					return this.name;
				}
				
			    public String property_Color_Code;

				public String getProperty_Color_Code () {
					return this.property_Color_Code;
				}
				
			    public String property_Style_Code;

				public String getProperty_Style_Code () {
					return this.property_Style_Code;
				}
				
			    public String property_Brand;

				public String getProperty_Brand () {
					return this.property_Brand;
				}
				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}
				
			    public String property_Style_Reference;

				public String getProperty_Style_Reference () {
					return this.property_Style_Reference;
				}
				
			    public String isPublic;

				public String getIsPublic () {
					return this.isPublic;
				}
				
			    public String property_Season;

				public String getProperty_Season () {
					return this.property_Season;
				}
				
			    public String property_Year;

				public String getProperty_Year () {
					return this.property_Year;
				}
				
			    public String property_Asset_Type;

				public String getProperty_Asset_Type () {
					return this.property_Asset_Type;
				}
				
			    public String property_Asset_Subtype;

				public String getProperty_Asset_Subtype () {
					return this.property_Asset_Subtype;
				}
				
			    public String userCreated;

				public String getUserCreated () {
					return this.userCreated;
				}
				
			    public String filename;

				public String getFilename () {
					return this.filename;
				}
				
			    public String property_Gender;

				public String getProperty_Gender () {
					return this.property_Gender;
				}
				
			    public String property_Age_Group;

				public String getProperty_Age_Group () {
					return this.property_Age_Group;
				}
				
			    public String property_Sub_Division;

				public String getProperty_Sub_Division () {
					return this.property_Sub_Division;
				}
				
			    public String property_Division;

				public String getProperty_Division () {
					return this.property_Division;
				}
				
			    public String Terms_of_Use;

				public String getTerms_of_Use () {
					return this.Terms_of_Use;
				}
				
			    public String webimage;

				public String getWebimage () {
					return this.webimage;
				}
				
			    public String thul;

				public String getThul () {
					return this.thul;
				}
				
			    public String property_Photo_View;

				public String getProperty_Photo_View () {
					return this.property_Photo_View;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.property_Color_Code == null) ? 0 : this.property_Color_Code.hashCode());
					
						result = prime * result + ((this.property_Style_Code == null) ? 0 : this.property_Style_Code.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row18Struct other = (row18Struct) obj;
		
						if (this.property_Color_Code == null) {
							if (other.property_Color_Code != null)
								return false;
						
						} else if (!this.property_Color_Code.equals(other.property_Color_Code))
						
							return false;
					
						if (this.property_Style_Code == null) {
							if (other.property_Style_Code != null)
								return false;
						
						} else if (!this.property_Style_Code.equals(other.property_Style_Code))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row18Struct other) {

		other.id = this.id;
	            other.description = this.description;
	            other.type = this.type;
	            other.idHash = this.idHash;
	            other.tags = this.tags;
	            other.brandId = this.brandId;
	            other.name = this.name;
	            other.property_Color_Code = this.property_Color_Code;
	            other.property_Style_Code = this.property_Style_Code;
	            other.property_Brand = this.property_Brand;
	            other.extension = this.extension;
	            other.property_Style_Reference = this.property_Style_Reference;
	            other.isPublic = this.isPublic;
	            other.property_Season = this.property_Season;
	            other.property_Year = this.property_Year;
	            other.property_Asset_Type = this.property_Asset_Type;
	            other.property_Asset_Subtype = this.property_Asset_Subtype;
	            other.userCreated = this.userCreated;
	            other.filename = this.filename;
	            other.property_Gender = this.property_Gender;
	            other.property_Age_Group = this.property_Age_Group;
	            other.property_Sub_Division = this.property_Sub_Division;
	            other.property_Division = this.property_Division;
	            other.Terms_of_Use = this.Terms_of_Use;
	            other.webimage = this.webimage;
	            other.thul = this.thul;
	            other.property_Photo_View = this.property_Photo_View;
	            
	}

	public void copyKeysDataTo(row18Struct other) {

		other.property_Color_Code = this.property_Color_Code;
	            	other.property_Style_Code = this.property_Style_Code;
	            	
	}




	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.property_Color_Code = readString(dis);
					
					this.property_Style_Code = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.property_Color_Code,dos);
					
					// String
				
						writeString(this.property_Style_Code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.id = readString(dis,ois);
					
						this.description = readString(dis,ois);
					
						this.type = readString(dis,ois);
					
						this.idHash = readString(dis,ois);
					
						this.tags = readString(dis,ois);
					
						this.brandId = readString(dis,ois);
					
						this.name = readString(dis,ois);
					
						this.property_Brand = readString(dis,ois);
					
						this.extension = readString(dis,ois);
					
						this.property_Style_Reference = readString(dis,ois);
					
						this.isPublic = readString(dis,ois);
					
						this.property_Season = readString(dis,ois);
					
						this.property_Year = readString(dis,ois);
					
						this.property_Asset_Type = readString(dis,ois);
					
						this.property_Asset_Subtype = readString(dis,ois);
					
						this.userCreated = readString(dis,ois);
					
						this.filename = readString(dis,ois);
					
						this.property_Gender = readString(dis,ois);
					
						this.property_Age_Group = readString(dis,ois);
					
						this.property_Sub_Division = readString(dis,ois);
					
						this.property_Division = readString(dis,ois);
					
						this.Terms_of_Use = readString(dis,ois);
					
						this.webimage = readString(dis,ois);
					
						this.thul = readString(dis,ois);
					
						this.property_Photo_View = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.id, dos, oos);
					
						writeString(this.description, dos, oos);
					
						writeString(this.type, dos, oos);
					
						writeString(this.idHash, dos, oos);
					
						writeString(this.tags, dos, oos);
					
						writeString(this.brandId, dos, oos);
					
						writeString(this.name, dos, oos);
					
						writeString(this.property_Brand, dos, oos);
					
						writeString(this.extension, dos, oos);
					
						writeString(this.property_Style_Reference, dos, oos);
					
						writeString(this.isPublic, dos, oos);
					
						writeString(this.property_Season, dos, oos);
					
						writeString(this.property_Year, dos, oos);
					
						writeString(this.property_Asset_Type, dos, oos);
					
						writeString(this.property_Asset_Subtype, dos, oos);
					
						writeString(this.userCreated, dos, oos);
					
						writeString(this.filename, dos, oos);
					
						writeString(this.property_Gender, dos, oos);
					
						writeString(this.property_Age_Group, dos, oos);
					
						writeString(this.property_Sub_Division, dos, oos);
					
						writeString(this.property_Division, dos, oos);
					
						writeString(this.Terms_of_Use, dos, oos);
					
						writeString(this.webimage, dos, oos);
					
						writeString(this.thul, dos, oos);
					
						writeString(this.property_Photo_View, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+id);
		sb.append(",description="+description);
		sb.append(",type="+type);
		sb.append(",idHash="+idHash);
		sb.append(",tags="+tags);
		sb.append(",brandId="+brandId);
		sb.append(",name="+name);
		sb.append(",property_Color_Code="+property_Color_Code);
		sb.append(",property_Style_Code="+property_Style_Code);
		sb.append(",property_Brand="+property_Brand);
		sb.append(",extension="+extension);
		sb.append(",property_Style_Reference="+property_Style_Reference);
		sb.append(",isPublic="+isPublic);
		sb.append(",property_Season="+property_Season);
		sb.append(",property_Year="+property_Year);
		sb.append(",property_Asset_Type="+property_Asset_Type);
		sb.append(",property_Asset_Subtype="+property_Asset_Subtype);
		sb.append(",userCreated="+userCreated);
		sb.append(",filename="+filename);
		sb.append(",property_Gender="+property_Gender);
		sb.append(",property_Age_Group="+property_Age_Group);
		sb.append(",property_Sub_Division="+property_Sub_Division);
		sb.append(",property_Division="+property_Division);
		sb.append(",Terms_of_Use="+Terms_of_Use);
		sb.append(",webimage="+webimage);
		sb.append(",thul="+thul);
		sb.append(",property_Photo_View="+property_Photo_View);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.property_Color_Code, other.property_Color_Code);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.property_Style_Code, other.property_Style_Code);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tFileInputDelimited_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row18Struct row18 = new row18Struct();




	
	/**
	 * [tAdvancedHash_row18 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row18", false);
		start_Hash.put("tAdvancedHash_row18", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row18";

	
		int tos_count_tAdvancedHash_row18 = 0;
		

			   		// connection name:row18
			   		// source node:tFileInputDelimited_5 - inputs:() outputs:(row18,row18) | target node:tAdvancedHash_row18 - inputs:(row18) outputs:()
			   		// linked node: tMap_7 - inputs:(out_4,row18) outputs:(copyOfcopyOfUpdate_Back_Image)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row18 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct> tHash_Lookup_row18 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row18Struct>getLookup(matchingModeEnum_row18);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row18", tHash_Lookup_row18);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row18 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_5", false);
		start_Hash.put("tFileInputDelimited_5", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_5";

	
		int tos_count_tFileInputDelimited_5 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_5 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_5 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_5 = null;
				int limit_tFileInputDelimited_5 = -1;
				try{
					
						Object filename_tFileInputDelimited_5 = "C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv";
						if(filename_tFileInputDelimited_5 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_5 = 0, random_value_tFileInputDelimited_5 = -1;
			if(footer_value_tFileInputDelimited_5 >0 || random_value_tFileInputDelimited_5 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_5 = new org.talend.fileprocess.FileInputDelimited("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv", "ISO-8859-15",";","\n",true,1,0,
									limit_tFileInputDelimited_5
								,-1, false);
						} catch(java.lang.Exception e) {
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_5!=null && fid_tFileInputDelimited_5.nextRecord()) {
						rowstate_tFileInputDelimited_5.reset();
						
			    						row18 = null;			
									
			    						row18 = null;			
												
									boolean whetherReject_tFileInputDelimited_5 = false;
									row18 = new row18Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_5 = 0;
				
					columnIndexWithD_tFileInputDelimited_5 = 0;
					
							row18.id = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 1;
					
							row18.description = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 2;
					
							row18.type = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 3;
					
							row18.idHash = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 4;
					
							row18.tags = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 5;
					
							row18.brandId = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 6;
					
							row18.name = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 7;
					
							row18.property_Color_Code = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 8;
					
							row18.property_Style_Code = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 9;
					
							row18.property_Brand = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 10;
					
							row18.extension = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 11;
					
							row18.property_Style_Reference = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 12;
					
							row18.isPublic = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 13;
					
							row18.property_Season = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 14;
					
							row18.property_Year = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 15;
					
							row18.property_Asset_Type = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 16;
					
							row18.property_Asset_Subtype = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 17;
					
							row18.userCreated = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 18;
					
							row18.filename = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 19;
					
							row18.property_Gender = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 20;
					
							row18.property_Age_Group = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 21;
					
							row18.property_Sub_Division = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 22;
					
							row18.property_Division = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 23;
					
							row18.Terms_of_Use = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 24;
					
							row18.webimage = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 25;
					
							row18.thul = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
					columnIndexWithD_tFileInputDelimited_5 = 26;
					
							row18.property_Photo_View = fid_tFileInputDelimited_5.get(columnIndexWithD_tFileInputDelimited_5);
						
				
				
										
										if(rowstate_tFileInputDelimited_5.getException()!=null) {
											throw rowstate_tFileInputDelimited_5.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
			        					whetherReject_tFileInputDelimited_5 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row18 = null;
			                				
			    					}
								

 



/**
 * [tFileInputDelimited_5 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_5 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";

	

 


	tos_count_tFileInputDelimited_5++;

/**
 * [tFileInputDelimited_5 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";

	

 



/**
 * [tFileInputDelimited_5 process_data_begin ] stop
 */
// Start of branch "row18"
if(row18 != null) { 



	
	/**
	 * [tAdvancedHash_row18 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";

	


			   
			   

					row18Struct row18_HashRow = new row18Struct();
		   	   	   
				
				row18_HashRow.id = row18.id;
				
				row18_HashRow.description = row18.description;
				
				row18_HashRow.type = row18.type;
				
				row18_HashRow.idHash = row18.idHash;
				
				row18_HashRow.tags = row18.tags;
				
				row18_HashRow.brandId = row18.brandId;
				
				row18_HashRow.name = row18.name;
				
				row18_HashRow.property_Color_Code = row18.property_Color_Code;
				
				row18_HashRow.property_Style_Code = row18.property_Style_Code;
				
				row18_HashRow.property_Brand = row18.property_Brand;
				
				row18_HashRow.extension = row18.extension;
				
				row18_HashRow.property_Style_Reference = row18.property_Style_Reference;
				
				row18_HashRow.isPublic = row18.isPublic;
				
				row18_HashRow.property_Season = row18.property_Season;
				
				row18_HashRow.property_Year = row18.property_Year;
				
				row18_HashRow.property_Asset_Type = row18.property_Asset_Type;
				
				row18_HashRow.property_Asset_Subtype = row18.property_Asset_Subtype;
				
				row18_HashRow.userCreated = row18.userCreated;
				
				row18_HashRow.filename = row18.filename;
				
				row18_HashRow.property_Gender = row18.property_Gender;
				
				row18_HashRow.property_Age_Group = row18.property_Age_Group;
				
				row18_HashRow.property_Sub_Division = row18.property_Sub_Division;
				
				row18_HashRow.property_Division = row18.property_Division;
				
				row18_HashRow.Terms_of_Use = row18.Terms_of_Use;
				
				row18_HashRow.webimage = row18.webimage;
				
				row18_HashRow.thul = row18.thul;
				
				row18_HashRow.property_Photo_View = row18.property_Photo_View;
				
			tHash_Lookup_row18.put(row18_HashRow);
			
            




 


	tos_count_tAdvancedHash_row18++;

/**
 * [tAdvancedHash_row18 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";

	

 



/**
 * [tAdvancedHash_row18 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row18 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";

	

 



/**
 * [tAdvancedHash_row18 process_data_end ] stop
 */

} // End of branch "row18"




	
	/**
	 * [tFileInputDelimited_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";

	

 



/**
 * [tFileInputDelimited_5 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_5 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";

	



            }
            }finally{
                if(!((Object)("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv") instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_5!=null){
                		fid_tFileInputDelimited_5.close();
                	}
                }
                if(fid_tFileInputDelimited_5!=null){
                	globalMap.put("tFileInputDelimited_5_NB_LINE", fid_tFileInputDelimited_5.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_5", true);
end_Hash.put("tFileInputDelimited_5", System.currentTimeMillis());




/**
 * [tFileInputDelimited_5 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row18 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";

	

tHash_Lookup_row18.endPut();

 

ok_Hash.put("tAdvancedHash_row18", true);
end_Hash.put("tAdvancedHash_row18", System.currentTimeMillis());




/**
 * [tAdvancedHash_row18 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_5 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_5";

	

 



/**
 * [tFileInputDelimited_5 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row18 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";

	

 



/**
 * [tAdvancedHash_row18 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_5_SUBPROCESS_STATE", 1);
	}
	


public static class row24Struct implements routines.system.IPersistableComparableLookupRow<row24Struct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String id;

				public String getId () {
					return this.id;
				}
				
			    public String description;

				public String getDescription () {
					return this.description;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String idHash;

				public String getIdHash () {
					return this.idHash;
				}
				
			    public String tags;

				public String getTags () {
					return this.tags;
				}
				
			    public String brandId;

				public String getBrandId () {
					return this.brandId;
				}
				
			    public String name;

				public String getName () {
					return this.name;
				}
				
			    public String property_Color_Code;

				public String getProperty_Color_Code () {
					return this.property_Color_Code;
				}
				
			    public String property_Style_Code;

				public String getProperty_Style_Code () {
					return this.property_Style_Code;
				}
				
			    public String property_Brand;

				public String getProperty_Brand () {
					return this.property_Brand;
				}
				
			    public String extension;

				public String getExtension () {
					return this.extension;
				}
				
			    public String property_Style_Reference;

				public String getProperty_Style_Reference () {
					return this.property_Style_Reference;
				}
				
			    public String isPublic;

				public String getIsPublic () {
					return this.isPublic;
				}
				
			    public String property_Season;

				public String getProperty_Season () {
					return this.property_Season;
				}
				
			    public String property_Year;

				public String getProperty_Year () {
					return this.property_Year;
				}
				
			    public String property_Asset_Type;

				public String getProperty_Asset_Type () {
					return this.property_Asset_Type;
				}
				
			    public String property_Asset_Subtype;

				public String getProperty_Asset_Subtype () {
					return this.property_Asset_Subtype;
				}
				
			    public String userCreated;

				public String getUserCreated () {
					return this.userCreated;
				}
				
			    public String filename;

				public String getFilename () {
					return this.filename;
				}
				
			    public String property_Gender;

				public String getProperty_Gender () {
					return this.property_Gender;
				}
				
			    public String property_Age_Group;

				public String getProperty_Age_Group () {
					return this.property_Age_Group;
				}
				
			    public String property_Sub_Division;

				public String getProperty_Sub_Division () {
					return this.property_Sub_Division;
				}
				
			    public String property_Division;

				public String getProperty_Division () {
					return this.property_Division;
				}
				
			    public String Terms_of_Use;

				public String getTerms_of_Use () {
					return this.Terms_of_Use;
				}
				
			    public String webimage;

				public String getWebimage () {
					return this.webimage;
				}
				
			    public String thul;

				public String getThul () {
					return this.thul;
				}
				
			    public String property_Photo_View;

				public String getProperty_Photo_View () {
					return this.property_Photo_View;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.property_Color_Code == null) ? 0 : this.property_Color_Code.hashCode());
					
						result = prime * result + ((this.property_Style_Code == null) ? 0 : this.property_Style_Code.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row24Struct other = (row24Struct) obj;
		
						if (this.property_Color_Code == null) {
							if (other.property_Color_Code != null)
								return false;
						
						} else if (!this.property_Color_Code.equals(other.property_Color_Code))
						
							return false;
					
						if (this.property_Style_Code == null) {
							if (other.property_Style_Code != null)
								return false;
						
						} else if (!this.property_Style_Code.equals(other.property_Style_Code))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row24Struct other) {

		other.id = this.id;
	            other.description = this.description;
	            other.type = this.type;
	            other.idHash = this.idHash;
	            other.tags = this.tags;
	            other.brandId = this.brandId;
	            other.name = this.name;
	            other.property_Color_Code = this.property_Color_Code;
	            other.property_Style_Code = this.property_Style_Code;
	            other.property_Brand = this.property_Brand;
	            other.extension = this.extension;
	            other.property_Style_Reference = this.property_Style_Reference;
	            other.isPublic = this.isPublic;
	            other.property_Season = this.property_Season;
	            other.property_Year = this.property_Year;
	            other.property_Asset_Type = this.property_Asset_Type;
	            other.property_Asset_Subtype = this.property_Asset_Subtype;
	            other.userCreated = this.userCreated;
	            other.filename = this.filename;
	            other.property_Gender = this.property_Gender;
	            other.property_Age_Group = this.property_Age_Group;
	            other.property_Sub_Division = this.property_Sub_Division;
	            other.property_Division = this.property_Division;
	            other.Terms_of_Use = this.Terms_of_Use;
	            other.webimage = this.webimage;
	            other.thul = this.thul;
	            other.property_Photo_View = this.property_Photo_View;
	            
	}

	public void copyKeysDataTo(row24Struct other) {

		other.property_Color_Code = this.property_Color_Code;
	            	other.property_Style_Code = this.property_Style_Code;
	            	
	}




	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.property_Color_Code = readString(dis);
					
					this.property_Style_Code = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.property_Color_Code,dos);
					
					// String
				
						writeString(this.property_Style_Code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.id = readString(dis,ois);
					
						this.description = readString(dis,ois);
					
						this.type = readString(dis,ois);
					
						this.idHash = readString(dis,ois);
					
						this.tags = readString(dis,ois);
					
						this.brandId = readString(dis,ois);
					
						this.name = readString(dis,ois);
					
						this.property_Brand = readString(dis,ois);
					
						this.extension = readString(dis,ois);
					
						this.property_Style_Reference = readString(dis,ois);
					
						this.isPublic = readString(dis,ois);
					
						this.property_Season = readString(dis,ois);
					
						this.property_Year = readString(dis,ois);
					
						this.property_Asset_Type = readString(dis,ois);
					
						this.property_Asset_Subtype = readString(dis,ois);
					
						this.userCreated = readString(dis,ois);
					
						this.filename = readString(dis,ois);
					
						this.property_Gender = readString(dis,ois);
					
						this.property_Age_Group = readString(dis,ois);
					
						this.property_Sub_Division = readString(dis,ois);
					
						this.property_Division = readString(dis,ois);
					
						this.Terms_of_Use = readString(dis,ois);
					
						this.webimage = readString(dis,ois);
					
						this.thul = readString(dis,ois);
					
						this.property_Photo_View = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.id, dos, oos);
					
						writeString(this.description, dos, oos);
					
						writeString(this.type, dos, oos);
					
						writeString(this.idHash, dos, oos);
					
						writeString(this.tags, dos, oos);
					
						writeString(this.brandId, dos, oos);
					
						writeString(this.name, dos, oos);
					
						writeString(this.property_Brand, dos, oos);
					
						writeString(this.extension, dos, oos);
					
						writeString(this.property_Style_Reference, dos, oos);
					
						writeString(this.isPublic, dos, oos);
					
						writeString(this.property_Season, dos, oos);
					
						writeString(this.property_Year, dos, oos);
					
						writeString(this.property_Asset_Type, dos, oos);
					
						writeString(this.property_Asset_Subtype, dos, oos);
					
						writeString(this.userCreated, dos, oos);
					
						writeString(this.filename, dos, oos);
					
						writeString(this.property_Gender, dos, oos);
					
						writeString(this.property_Age_Group, dos, oos);
					
						writeString(this.property_Sub_Division, dos, oos);
					
						writeString(this.property_Division, dos, oos);
					
						writeString(this.Terms_of_Use, dos, oos);
					
						writeString(this.webimage, dos, oos);
					
						writeString(this.thul, dos, oos);
					
						writeString(this.property_Photo_View, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+id);
		sb.append(",description="+description);
		sb.append(",type="+type);
		sb.append(",idHash="+idHash);
		sb.append(",tags="+tags);
		sb.append(",brandId="+brandId);
		sb.append(",name="+name);
		sb.append(",property_Color_Code="+property_Color_Code);
		sb.append(",property_Style_Code="+property_Style_Code);
		sb.append(",property_Brand="+property_Brand);
		sb.append(",extension="+extension);
		sb.append(",property_Style_Reference="+property_Style_Reference);
		sb.append(",isPublic="+isPublic);
		sb.append(",property_Season="+property_Season);
		sb.append(",property_Year="+property_Year);
		sb.append(",property_Asset_Type="+property_Asset_Type);
		sb.append(",property_Asset_Subtype="+property_Asset_Subtype);
		sb.append(",userCreated="+userCreated);
		sb.append(",filename="+filename);
		sb.append(",property_Gender="+property_Gender);
		sb.append(",property_Age_Group="+property_Age_Group);
		sb.append(",property_Sub_Division="+property_Sub_Division);
		sb.append(",property_Division="+property_Division);
		sb.append(",Terms_of_Use="+Terms_of_Use);
		sb.append(",webimage="+webimage);
		sb.append(",thul="+thul);
		sb.append(",property_Photo_View="+property_Photo_View);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.property_Color_Code, other.property_Color_Code);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.property_Style_Code, other.property_Style_Code);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tFileInputDelimited_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row24Struct row24 = new row24Struct();




	
	/**
	 * [tAdvancedHash_row24 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row24", false);
		start_Hash.put("tAdvancedHash_row24", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row24";

	
		int tos_count_tAdvancedHash_row24 = 0;
		

			   		// connection name:row24
			   		// source node:tFileInputDelimited_6 - inputs:() outputs:(row24,row24) | target node:tAdvancedHash_row24 - inputs:(row24) outputs:()
			   		// linked node: tMap_8 - inputs:(out_5,row24) outputs:(copyOfcopyOfcopyOfUpdate_Back_Image)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row24 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row24Struct> tHash_Lookup_row24 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row24Struct>getLookup(matchingModeEnum_row24);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row24", tHash_Lookup_row24);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row24 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_6", false);
		start_Hash.put("tFileInputDelimited_6", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_6";

	
		int tos_count_tFileInputDelimited_6 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_6 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_6 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_6 = null;
				int limit_tFileInputDelimited_6 = -1;
				try{
					
						Object filename_tFileInputDelimited_6 = "C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv";
						if(filename_tFileInputDelimited_6 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_6 = 0, random_value_tFileInputDelimited_6 = -1;
			if(footer_value_tFileInputDelimited_6 >0 || random_value_tFileInputDelimited_6 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_6 = new org.talend.fileprocess.FileInputDelimited("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv", "ISO-8859-15",";","\n",true,1,0,
									limit_tFileInputDelimited_6
								,-1, false);
						} catch(java.lang.Exception e) {
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_6!=null && fid_tFileInputDelimited_6.nextRecord()) {
						rowstate_tFileInputDelimited_6.reset();
						
			    						row24 = null;			
									
			    						row24 = null;			
												
									boolean whetherReject_tFileInputDelimited_6 = false;
									row24 = new row24Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_6 = 0;
				
					columnIndexWithD_tFileInputDelimited_6 = 0;
					
							row24.id = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 1;
					
							row24.description = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 2;
					
							row24.type = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 3;
					
							row24.idHash = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 4;
					
							row24.tags = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 5;
					
							row24.brandId = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 6;
					
							row24.name = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 7;
					
							row24.property_Color_Code = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 8;
					
							row24.property_Style_Code = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 9;
					
							row24.property_Brand = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 10;
					
							row24.extension = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 11;
					
							row24.property_Style_Reference = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 12;
					
							row24.isPublic = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 13;
					
							row24.property_Season = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 14;
					
							row24.property_Year = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 15;
					
							row24.property_Asset_Type = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 16;
					
							row24.property_Asset_Subtype = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 17;
					
							row24.userCreated = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 18;
					
							row24.filename = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 19;
					
							row24.property_Gender = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 20;
					
							row24.property_Age_Group = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 21;
					
							row24.property_Sub_Division = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 22;
					
							row24.property_Division = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 23;
					
							row24.Terms_of_Use = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 24;
					
							row24.webimage = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 25;
					
							row24.thul = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
					columnIndexWithD_tFileInputDelimited_6 = 26;
					
							row24.property_Photo_View = fid_tFileInputDelimited_6.get(columnIndexWithD_tFileInputDelimited_6);
						
				
				
										
										if(rowstate_tFileInputDelimited_6.getException()!=null) {
											throw rowstate_tFileInputDelimited_6.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
			        					whetherReject_tFileInputDelimited_6 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row24 = null;
			                				
			    					}
								

 



/**
 * [tFileInputDelimited_6 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_6 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_6";

	

 


	tos_count_tFileInputDelimited_6++;

/**
 * [tFileInputDelimited_6 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_6";

	

 



/**
 * [tFileInputDelimited_6 process_data_begin ] stop
 */
// Start of branch "row24"
if(row24 != null) { 



	
	/**
	 * [tAdvancedHash_row24 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";

	


			   
			   

					row24Struct row24_HashRow = new row24Struct();
		   	   	   
				
				row24_HashRow.id = row24.id;
				
				row24_HashRow.description = row24.description;
				
				row24_HashRow.type = row24.type;
				
				row24_HashRow.idHash = row24.idHash;
				
				row24_HashRow.tags = row24.tags;
				
				row24_HashRow.brandId = row24.brandId;
				
				row24_HashRow.name = row24.name;
				
				row24_HashRow.property_Color_Code = row24.property_Color_Code;
				
				row24_HashRow.property_Style_Code = row24.property_Style_Code;
				
				row24_HashRow.property_Brand = row24.property_Brand;
				
				row24_HashRow.extension = row24.extension;
				
				row24_HashRow.property_Style_Reference = row24.property_Style_Reference;
				
				row24_HashRow.isPublic = row24.isPublic;
				
				row24_HashRow.property_Season = row24.property_Season;
				
				row24_HashRow.property_Year = row24.property_Year;
				
				row24_HashRow.property_Asset_Type = row24.property_Asset_Type;
				
				row24_HashRow.property_Asset_Subtype = row24.property_Asset_Subtype;
				
				row24_HashRow.userCreated = row24.userCreated;
				
				row24_HashRow.filename = row24.filename;
				
				row24_HashRow.property_Gender = row24.property_Gender;
				
				row24_HashRow.property_Age_Group = row24.property_Age_Group;
				
				row24_HashRow.property_Sub_Division = row24.property_Sub_Division;
				
				row24_HashRow.property_Division = row24.property_Division;
				
				row24_HashRow.Terms_of_Use = row24.Terms_of_Use;
				
				row24_HashRow.webimage = row24.webimage;
				
				row24_HashRow.thul = row24.thul;
				
				row24_HashRow.property_Photo_View = row24.property_Photo_View;
				
			tHash_Lookup_row24.put(row24_HashRow);
			
            




 


	tos_count_tAdvancedHash_row24++;

/**
 * [tAdvancedHash_row24 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";

	

 



/**
 * [tAdvancedHash_row24 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row24 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";

	

 



/**
 * [tAdvancedHash_row24 process_data_end ] stop
 */

} // End of branch "row24"




	
	/**
	 * [tFileInputDelimited_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_6";

	

 



/**
 * [tFileInputDelimited_6 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_6 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_6";

	



            }
            }finally{
                if(!((Object)("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/temp" + "/BynderExtractWithImageURL.csv") instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_6!=null){
                		fid_tFileInputDelimited_6.close();
                	}
                }
                if(fid_tFileInputDelimited_6!=null){
                	globalMap.put("tFileInputDelimited_6_NB_LINE", fid_tFileInputDelimited_6.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_6", true);
end_Hash.put("tFileInputDelimited_6", System.currentTimeMillis());




/**
 * [tFileInputDelimited_6 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row24 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";

	

tHash_Lookup_row24.endPut();

 

ok_Hash.put("tAdvancedHash_row24", true);
end_Hash.put("tAdvancedHash_row24", System.currentTimeMillis());




/**
 * [tAdvancedHash_row24 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_6 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_6";

	

 



/**
 * [tFileInputDelimited_6 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row24 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";

	

 



/**
 * [tAdvancedHash_row24 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_6_SUBPROCESS_STATE", 1);
	}
	


public static class row_talendLogs_LOGSStruct implements routines.system.IPersistableRow<row_talendLogs_LOGSStruct> {
    final static byte[] commonByteArrayLock_DEV_UpdateImageInSalesforce = new byte[0];
    static byte[] commonByteArray_DEV_UpdateImageInSalesforce = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}
				
			    public String pid;

				public String getPid () {
					return this.pid;
				}
				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}
				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}
				
			    public String project;

				public String getProject () {
					return this.project;
				}
				
			    public String job;

				public String getJob () {
					return this.job;
				}
				
			    public String context;

				public String getContext () {
					return this.context;
				}
				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}
				
			    public String message;

				public String getMessage () {
					return this.message;
				}
				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_DEV_UpdateImageInSalesforce.length) {
				if(length < 1024 && commonByteArray_DEV_UpdateImageInSalesforce.length == 0) {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[1024];
				} else {
   					commonByteArray_DEV_UpdateImageInSalesforce = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_DEV_UpdateImageInSalesforce, 0, length);
			strReturn = new String(commonByteArray_DEV_UpdateImageInSalesforce, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_DEV_UpdateImageInSalesforce) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row_talendLogs_LOGSStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void talendLogs_LOGSProcess(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("talendLogs_LOGS_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row_talendLogs_LOGSStruct row_talendLogs_LOGS = new row_talendLogs_LOGSStruct();




	
	/**
	 * [talendLogs_FILE begin ] start
	 */

	

	
		
		ok_Hash.put("talendLogs_FILE", false);
		start_Hash.put("talendLogs_FILE", System.currentTimeMillis());
		
	
		currentVirtualComponent = "talendLogs_FILE";
	
	currentComponent="talendLogs_FILE";

	
		int tos_count_talendLogs_FILE = 0;
		

String fileName_talendLogs_FILE = "";
    fileName_talendLogs_FILE = (new java.io.File("C:/Haddad_Interface_SF_JDE/Interface Bynder/hors eCom/log"+ "/" +"UploadAssetToBynder.log")).getAbsolutePath().replace("\\","/");
    String fullName_talendLogs_FILE = null;
    String extension_talendLogs_FILE = null;
    String directory_talendLogs_FILE = null;
    if((fileName_talendLogs_FILE.indexOf("/") != -1)) {
        if(fileName_talendLogs_FILE.lastIndexOf(".") < fileName_talendLogs_FILE.lastIndexOf("/")) {
            fullName_talendLogs_FILE = fileName_talendLogs_FILE;
            extension_talendLogs_FILE = "";
        } else {
            fullName_talendLogs_FILE = fileName_talendLogs_FILE.substring(0, fileName_talendLogs_FILE.lastIndexOf("."));
            extension_talendLogs_FILE = fileName_talendLogs_FILE.substring(fileName_talendLogs_FILE.lastIndexOf("."));
        }
        directory_talendLogs_FILE = fileName_talendLogs_FILE.substring(0, fileName_talendLogs_FILE.lastIndexOf("/"));
    } else {
        if(fileName_talendLogs_FILE.lastIndexOf(".") != -1) {
            fullName_talendLogs_FILE = fileName_talendLogs_FILE.substring(0, fileName_talendLogs_FILE.lastIndexOf("."));
            extension_talendLogs_FILE = fileName_talendLogs_FILE.substring(fileName_talendLogs_FILE.lastIndexOf("."));
        } else {
            fullName_talendLogs_FILE = fileName_talendLogs_FILE;
            extension_talendLogs_FILE = "";
        }
        directory_talendLogs_FILE = "";
    }
    boolean isFileGenerated_talendLogs_FILE = true;
    java.io.File filetalendLogs_FILE = new java.io.File(fileName_talendLogs_FILE);
    globalMap.put("talendLogs_FILE_FILE_NAME",fileName_talendLogs_FILE);
        if(filetalendLogs_FILE.exists()){
            isFileGenerated_talendLogs_FILE = false;
        }
            int nb_line_talendLogs_FILE = 0;
            int splitedFileNo_talendLogs_FILE = 0;
            int currentRow_talendLogs_FILE = 0;

            final String OUT_DELIM_talendLogs_FILE = /** Start field talendLogs_FILE:FIELDSEPARATOR */";"/** End field talendLogs_FILE:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_talendLogs_FILE = /** Start field talendLogs_FILE:ROWSEPARATOR */"\n"/** End field talendLogs_FILE:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_talendLogs_FILE != null && directory_talendLogs_FILE.trim().length() != 0) {
                        java.io.File dir_talendLogs_FILE = new java.io.File(directory_talendLogs_FILE);
                        if(!dir_talendLogs_FILE.exists()) {
                            dir_talendLogs_FILE.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtalendLogs_FILE = null;

                        outtalendLogs_FILE = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_talendLogs_FILE, true),"ISO-8859-15"));


        resourceMap.put("out_talendLogs_FILE", outtalendLogs_FILE);
resourceMap.put("nb_line_talendLogs_FILE", nb_line_talendLogs_FILE);

 



/**
 * [talendLogs_FILE begin ] stop
 */



	
	/**
	 * [talendLogs_LOGS begin ] start
	 */

	

	
		
		ok_Hash.put("talendLogs_LOGS", false);
		start_Hash.put("talendLogs_LOGS", System.currentTimeMillis());
		
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	
		int tos_count_talendLogs_LOGS = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : talendLogs_LOGS.getMessages()) {
		row_talendLogs_LOGS.type = lcm.getType();
		row_talendLogs_LOGS.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row_talendLogs_LOGS.priority = lcm.getPriority();
		row_talendLogs_LOGS.message = lcm.getMessage();
		row_talendLogs_LOGS.code = lcm.getCode();
		
		row_talendLogs_LOGS.moment = java.util.Calendar.getInstance().getTime();
	
    	row_talendLogs_LOGS.pid = pid;
		row_talendLogs_LOGS.root_pid = rootPid;
		row_talendLogs_LOGS.father_pid = fatherPid;
	
    	row_talendLogs_LOGS.project = projectName;
    	row_talendLogs_LOGS.job = jobName;
    	row_talendLogs_LOGS.context = contextStr;
    		
 



/**
 * [talendLogs_LOGS begin ] stop
 */
	
	/**
	 * [talendLogs_LOGS main ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 


	tos_count_talendLogs_LOGS++;

/**
 * [talendLogs_LOGS main ] stop
 */
	
	/**
	 * [talendLogs_LOGS process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS process_data_begin ] stop
 */

	
	/**
	 * [talendLogs_FILE main ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_FILE";
	
	currentComponent="talendLogs_FILE";

	


                    StringBuilder sb_talendLogs_FILE = new StringBuilder();
                            if(row_talendLogs_LOGS.moment != null) {
                        sb_talendLogs_FILE.append(
                            FormatterUtils.format_Date(row_talendLogs_LOGS.moment, "yyyy-MM-dd HH:mm:ss")
                        );
                            }
                            sb_talendLogs_FILE.append(OUT_DELIM_talendLogs_FILE);
                            if(row_talendLogs_LOGS.pid != null) {
                        sb_talendLogs_FILE.append(
                            row_talendLogs_LOGS.pid
                        );
                            }
                            sb_talendLogs_FILE.append(OUT_DELIM_talendLogs_FILE);
                            if(row_talendLogs_LOGS.root_pid != null) {
                        sb_talendLogs_FILE.append(
                            row_talendLogs_LOGS.root_pid
                        );
                            }
                            sb_talendLogs_FILE.append(OUT_DELIM_talendLogs_FILE);
                            if(row_talendLogs_LOGS.father_pid != null) {
                        sb_talendLogs_FILE.append(
                            row_talendLogs_LOGS.father_pid
                        );
                            }
                            sb_talendLogs_FILE.append(OUT_DELIM_talendLogs_FILE);
                            if(row_talendLogs_LOGS.project != null) {
                        sb_talendLogs_FILE.append(
                            row_talendLogs_LOGS.project
                        );
                            }
                            sb_talendLogs_FILE.append(OUT_DELIM_talendLogs_FILE);
                            if(row_talendLogs_LOGS.job != null) {
                        sb_talendLogs_FILE.append(
                            row_talendLogs_LOGS.job
                        );
                            }
                            sb_talendLogs_FILE.append(OUT_DELIM_talendLogs_FILE);
                            if(row_talendLogs_LOGS.context != null) {
                        sb_talendLogs_FILE.append(
                            row_talendLogs_LOGS.context
                        );
                            }
                            sb_talendLogs_FILE.append(OUT_DELIM_talendLogs_FILE);
                            if(row_talendLogs_LOGS.priority != null) {
                        sb_talendLogs_FILE.append(
                            row_talendLogs_LOGS.priority
                        );
                            }
                            sb_talendLogs_FILE.append(OUT_DELIM_talendLogs_FILE);
                            if(row_talendLogs_LOGS.type != null) {
                        sb_talendLogs_FILE.append(
                            row_talendLogs_LOGS.type
                        );
                            }
                            sb_talendLogs_FILE.append(OUT_DELIM_talendLogs_FILE);
                            if(row_talendLogs_LOGS.origin != null) {
                        sb_talendLogs_FILE.append(
                            row_talendLogs_LOGS.origin
                        );
                            }
                            sb_talendLogs_FILE.append(OUT_DELIM_talendLogs_FILE);
                            if(row_talendLogs_LOGS.message != null) {
                        sb_talendLogs_FILE.append(
                            row_talendLogs_LOGS.message
                        );
                            }
                            sb_talendLogs_FILE.append(OUT_DELIM_talendLogs_FILE);
                            if(row_talendLogs_LOGS.code != null) {
                        sb_talendLogs_FILE.append(
                            row_talendLogs_LOGS.code
                        );
                            }
                    sb_talendLogs_FILE.append(OUT_DELIM_ROWSEP_talendLogs_FILE);


                    nb_line_talendLogs_FILE++;
                    resourceMap.put("nb_line_talendLogs_FILE", nb_line_talendLogs_FILE);

                        outtalendLogs_FILE.write(sb_talendLogs_FILE.toString());




 


	tos_count_talendLogs_FILE++;

/**
 * [talendLogs_FILE main ] stop
 */
	
	/**
	 * [talendLogs_FILE process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_FILE";
	
	currentComponent="talendLogs_FILE";

	

 



/**
 * [talendLogs_FILE process_data_begin ] stop
 */
	
	/**
	 * [talendLogs_FILE process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_FILE";
	
	currentComponent="talendLogs_FILE";

	

 



/**
 * [talendLogs_FILE process_data_end ] stop
 */



	
	/**
	 * [talendLogs_LOGS process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS process_data_end ] stop
 */
	
	/**
	 * [talendLogs_LOGS end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	
	}
} catch (Exception e_talendLogs_LOGS) {
	logIgnoredError(String.format("talendLogs_LOGS - tLogCatcher failed to process log message(s) due to internal error: %s", e_talendLogs_LOGS), e_talendLogs_LOGS);
}

 

ok_Hash.put("talendLogs_LOGS", true);
end_Hash.put("talendLogs_LOGS", System.currentTimeMillis());




/**
 * [talendLogs_LOGS end ] stop
 */

	
	/**
	 * [talendLogs_FILE end ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_FILE";
	
	currentComponent="talendLogs_FILE";

	



		
			
					if(outtalendLogs_FILE!=null) {
						outtalendLogs_FILE.flush();
						outtalendLogs_FILE.close();
					}
				
				globalMap.put("talendLogs_FILE_NB_LINE",nb_line_talendLogs_FILE);
				globalMap.put("talendLogs_FILE_FILE_NAME",fileName_talendLogs_FILE);
			
		
		
		resourceMap.put("finish_talendLogs_FILE", true);
	

 

ok_Hash.put("talendLogs_FILE", true);
end_Hash.put("talendLogs_FILE", System.currentTimeMillis());




/**
 * [talendLogs_FILE end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [talendLogs_LOGS finally ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_LOGS";
	
	currentComponent="talendLogs_LOGS";

	

 



/**
 * [talendLogs_LOGS finally ] stop
 */

	
	/**
	 * [talendLogs_FILE finally ] start
	 */

	

	
	
		currentVirtualComponent = "talendLogs_FILE";
	
	currentComponent="talendLogs_FILE";

	


		if(resourceMap.get("finish_talendLogs_FILE") == null){ 
			
				
						java.io.Writer outtalendLogs_FILE = (java.io.Writer)resourceMap.get("out_talendLogs_FILE");
						if(outtalendLogs_FILE!=null) {
							outtalendLogs_FILE.flush();
							outtalendLogs_FILE.close();
						}
					
				
			
		}
	

 



/**
 * [talendLogs_FILE finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("talendLogs_LOGS_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    private PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    private final org.talend.components.common.runtime.SharedConnectionsPool connectionPool = new org.talend.components.common.runtime.SharedConnectionsPool() {
    	public java.sql.Connection getDBConnection(String dbDriver, String url, String userName, String password, String dbConnectionName)
            throws ClassNotFoundException, java.sql.SQLException {
            return SharedDBConnection.getDBConnection(dbDriver, url, userName, password, dbConnectionName);
        }

    	public java.sql.Connection getDBConnection(String dbDriver, String url, String dbConnectionName)
            throws ClassNotFoundException, java.sql.SQLException {
            return SharedDBConnection.getDBConnection(dbDriver, url, dbConnectionName);
        }
    };
    
    private static final String GLOBAL_CONNECTION_POOL_KEY = "GLOBAL_CONNECTION_POOL";
    
    {
    	globalMap.put(GLOBAL_CONNECTION_POOL_KEY, connectionPool);
    }

    public static void main(String[] args){
        final UpdateImageInSalesforce UpdateImageInSalesforceClass = new UpdateImageInSalesforce();

        int exitCode = UpdateImageInSalesforceClass.runJobInTOS(args);

        System.exit(exitCode);
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("monitoring"));

    	
    	

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }

        if (rootPid==null) {
            rootPid = pid;
        }
        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }


        try {
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = UpdateImageInSalesforce.class.getClassLoader().getResourceAsStream("dev/updateimageinsalesforce_0_4/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = UpdateImageInSalesforce.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                //defaultProps is in order to keep the original context value
                if(context != null && context.isEmpty()) {
	                defaultProps.load(inContext);
	                context = new ContextProperties(defaultProps);
                }
                
                inContext.close();
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("bynderDirectory", "id_String");
                            context.bynderDirectory=(String) context.getProperty("bynderDirectory");
                        context.setContextType("errorFile", "id_String");
                            context.errorFile=(String) context.getProperty("errorFile");
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("bynderDirectory")) {
                context.bynderDirectory = (String) parentContextMap.get("bynderDirectory");
            }if (parentContextMap.containsKey("errorFile")) {
                context.errorFile = (String) parentContextMap.get("errorFile");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,parametersToEncrypt));




	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();




this.globalResumeTicket = true;//to run tPreJob




this.globalResumeTicket = false;//to run others jobs

try {
errorCode = null;tRESTClient_2Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tRESTClient_2) {
globalMap.put("tRESTClient_2_SUBPROCESS_STATE", -1);

e_tRESTClient_2.printStackTrace();

}

this.globalResumeTicket = true;//to run tPostJob




        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : UpdateImageInSalesforce");
        }



    int returnCode = 0;
    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");

    return returnCode;

  }

    // only for OSGi env
    public void destroy() {


    }














    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();





            connections.put("conn_tSalesforceConnection_1", globalMap.get("conn_tSalesforceConnection_1"));


        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--monitoring") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     850365 characters generated by Talend Open Studio for Data Integration 
 *     on the 27 décembre 2023 12:20:07 GMT
 ************************************************************************************************/